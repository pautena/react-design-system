// source: SP/Rpc/Emerald/cross_promotion.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.sp.rpc.emerald.CrossPromotion', null, global);
goog.exportSymbol('proto.sp.rpc.emerald.CrossPromotion.Banner', null, global);
goog.exportSymbol('proto.sp.rpc.emerald.CrossPromotion.Icon', null, global);
goog.exportSymbol('proto.sp.rpc.emerald.CrossPromotion.Popup', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sp.rpc.emerald.CrossPromotion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sp.rpc.emerald.CrossPromotion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sp.rpc.emerald.CrossPromotion.displayName = 'proto.sp.rpc.emerald.CrossPromotion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sp.rpc.emerald.CrossPromotion.Banner = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sp.rpc.emerald.CrossPromotion.Banner, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sp.rpc.emerald.CrossPromotion.Banner.displayName = 'proto.sp.rpc.emerald.CrossPromotion.Banner';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sp.rpc.emerald.CrossPromotion.Icon = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sp.rpc.emerald.CrossPromotion.Icon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sp.rpc.emerald.CrossPromotion.Icon.displayName = 'proto.sp.rpc.emerald.CrossPromotion.Icon';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sp.rpc.emerald.CrossPromotion.Popup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sp.rpc.emerald.CrossPromotion.Popup.repeatedFields_, null);
};
goog.inherits(proto.sp.rpc.emerald.CrossPromotion.Popup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sp.rpc.emerald.CrossPromotion.Popup.displayName = 'proto.sp.rpc.emerald.CrossPromotion.Popup';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sp.rpc.emerald.CrossPromotion.prototype.toObject = function(opt_includeInstance) {
  return proto.sp.rpc.emerald.CrossPromotion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sp.rpc.emerald.CrossPromotion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.emerald.CrossPromotion.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    icon: (f = msg.getIcon()) && proto.sp.rpc.emerald.CrossPromotion.Icon.toObject(includeInstance, f),
    popup: (f = msg.getPopup()) && proto.sp.rpc.emerald.CrossPromotion.Popup.toObject(includeInstance, f),
    trackTimeout: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sp.rpc.emerald.CrossPromotion}
 */
proto.sp.rpc.emerald.CrossPromotion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sp.rpc.emerald.CrossPromotion;
  return proto.sp.rpc.emerald.CrossPromotion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sp.rpc.emerald.CrossPromotion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sp.rpc.emerald.CrossPromotion}
 */
proto.sp.rpc.emerald.CrossPromotion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.sp.rpc.emerald.CrossPromotion.Icon;
      reader.readMessage(value,proto.sp.rpc.emerald.CrossPromotion.Icon.deserializeBinaryFromReader);
      msg.setIcon(value);
      break;
    case 3:
      var value = new proto.sp.rpc.emerald.CrossPromotion.Popup;
      reader.readMessage(value,proto.sp.rpc.emerald.CrossPromotion.Popup.deserializeBinaryFromReader);
      msg.setPopup(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTrackTimeout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sp.rpc.emerald.CrossPromotion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sp.rpc.emerald.CrossPromotion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sp.rpc.emerald.CrossPromotion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.emerald.CrossPromotion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIcon();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sp.rpc.emerald.CrossPromotion.Icon.serializeBinaryToWriter
    );
  }
  f = message.getPopup();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.sp.rpc.emerald.CrossPromotion.Popup.serializeBinaryToWriter
    );
  }
  f = message.getTrackTimeout();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.toObject = function(opt_includeInstance) {
  return proto.sp.rpc.emerald.CrossPromotion.Banner.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sp.rpc.emerald.CrossPromotion.Banner} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    game: jspb.Message.getFieldWithDefault(msg, 2, ""),
    storeId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    appId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    buttonInstalled: jspb.Message.getFieldWithDefault(msg, 5, ""),
    buttonNotInstalled: jspb.Message.getFieldWithDefault(msg, 6, ""),
    background: jspb.Message.getFieldWithDefault(msg, 7, ""),
    icon: jspb.Message.getFieldWithDefault(msg, 8, ""),
    ribbon: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    current: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    aspectRatio: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Banner}
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sp.rpc.emerald.CrossPromotion.Banner;
  return proto.sp.rpc.emerald.CrossPromotion.Banner.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sp.rpc.emerald.CrossPromotion.Banner} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Banner}
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGame(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setButtonInstalled(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setButtonNotInstalled(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackground(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRibbon(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCurrent(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAspectRatio(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sp.rpc.emerald.CrossPromotion.Banner.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sp.rpc.emerald.CrossPromotion.Banner} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getGame();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStoreId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAppId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getButtonInstalled();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getButtonNotInstalled();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBackground();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getRibbon();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getCurrent();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getAspectRatio();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Banner} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string game = 2;
 * @return {string}
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.getGame = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Banner} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.setGame = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string store_id = 3;
 * @return {string}
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.getStoreId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Banner} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.setStoreId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string app_id = 4;
 * @return {string}
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.getAppId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Banner} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.setAppId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string button_installed = 5;
 * @return {string}
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.getButtonInstalled = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Banner} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.setButtonInstalled = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string button_not_installed = 6;
 * @return {string}
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.getButtonNotInstalled = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Banner} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.setButtonNotInstalled = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string background = 7;
 * @return {string}
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.getBackground = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Banner} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.setBackground = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string icon = 8;
 * @return {string}
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Banner} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool ribbon = 9;
 * @return {boolean}
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.getRibbon = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Banner} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.setRibbon = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool current = 10;
 * @return {boolean}
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.getCurrent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Banner} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.setCurrent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional float aspect_ratio = 11;
 * @return {number}
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.getAspectRatio = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Banner} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.Banner.prototype.setAspectRatio = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sp.rpc.emerald.CrossPromotion.Icon.prototype.toObject = function(opt_includeInstance) {
  return proto.sp.rpc.emerald.CrossPromotion.Icon.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sp.rpc.emerald.CrossPromotion.Icon} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.emerald.CrossPromotion.Icon.toObject = function(includeInstance, msg) {
  var f, obj = {
    show: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    src: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Icon}
 */
proto.sp.rpc.emerald.CrossPromotion.Icon.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sp.rpc.emerald.CrossPromotion.Icon;
  return proto.sp.rpc.emerald.CrossPromotion.Icon.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sp.rpc.emerald.CrossPromotion.Icon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Icon}
 */
proto.sp.rpc.emerald.CrossPromotion.Icon.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShow(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sp.rpc.emerald.CrossPromotion.Icon.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sp.rpc.emerald.CrossPromotion.Icon.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sp.rpc.emerald.CrossPromotion.Icon} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.emerald.CrossPromotion.Icon.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShow();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getSrc();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional bool show = 1;
 * @return {boolean}
 */
proto.sp.rpc.emerald.CrossPromotion.Icon.prototype.getShow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Icon} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.Icon.prototype.setShow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint32 id = 2;
 * @return {number}
 */
proto.sp.rpc.emerald.CrossPromotion.Icon.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Icon} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.Icon.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string src = 3;
 * @return {string}
 */
proto.sp.rpc.emerald.CrossPromotion.Icon.prototype.getSrc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Icon} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.Icon.prototype.setSrc = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sp.rpc.emerald.CrossPromotion.Popup.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sp.rpc.emerald.CrossPromotion.Popup.prototype.toObject = function(opt_includeInstance) {
  return proto.sp.rpc.emerald.CrossPromotion.Popup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sp.rpc.emerald.CrossPromotion.Popup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.emerald.CrossPromotion.Popup.toObject = function(includeInstance, msg) {
  var f, obj = {
    show: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    frequency: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timeout: jspb.Message.getFieldWithDefault(msg, 3, 0),
    title: jspb.Message.getFieldWithDefault(msg, 4, ""),
    aspectRatio: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    heightFactor: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    bannersList: jspb.Message.toObjectList(msg.getBannersList(),
    proto.sp.rpc.emerald.CrossPromotion.Banner.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Popup}
 */
proto.sp.rpc.emerald.CrossPromotion.Popup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sp.rpc.emerald.CrossPromotion.Popup;
  return proto.sp.rpc.emerald.CrossPromotion.Popup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sp.rpc.emerald.CrossPromotion.Popup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Popup}
 */
proto.sp.rpc.emerald.CrossPromotion.Popup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShow(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFrequency(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTimeout(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAspectRatio(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setHeightFactor(value);
      break;
    case 7:
      var value = new proto.sp.rpc.emerald.CrossPromotion.Banner;
      reader.readMessage(value,proto.sp.rpc.emerald.CrossPromotion.Banner.deserializeBinaryFromReader);
      msg.addBanners(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sp.rpc.emerald.CrossPromotion.Popup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sp.rpc.emerald.CrossPromotion.Popup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sp.rpc.emerald.CrossPromotion.Popup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.emerald.CrossPromotion.Popup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShow();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getFrequency();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getTimeout();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAspectRatio();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getHeightFactor();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getBannersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.sp.rpc.emerald.CrossPromotion.Banner.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool show = 1;
 * @return {boolean}
 */
proto.sp.rpc.emerald.CrossPromotion.Popup.prototype.getShow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Popup} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.Popup.prototype.setShow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint32 frequency = 2;
 * @return {number}
 */
proto.sp.rpc.emerald.CrossPromotion.Popup.prototype.getFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Popup} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.Popup.prototype.setFrequency = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 timeout = 3;
 * @return {number}
 */
proto.sp.rpc.emerald.CrossPromotion.Popup.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Popup} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.Popup.prototype.setTimeout = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.sp.rpc.emerald.CrossPromotion.Popup.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Popup} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.Popup.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional float aspect_ratio = 5;
 * @return {number}
 */
proto.sp.rpc.emerald.CrossPromotion.Popup.prototype.getAspectRatio = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Popup} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.Popup.prototype.setAspectRatio = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float height_factor = 6;
 * @return {number}
 */
proto.sp.rpc.emerald.CrossPromotion.Popup.prototype.getHeightFactor = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Popup} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.Popup.prototype.setHeightFactor = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * repeated Banner banners = 7;
 * @return {!Array<!proto.sp.rpc.emerald.CrossPromotion.Banner>}
 */
proto.sp.rpc.emerald.CrossPromotion.Popup.prototype.getBannersList = function() {
  return /** @type{!Array<!proto.sp.rpc.emerald.CrossPromotion.Banner>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sp.rpc.emerald.CrossPromotion.Banner, 7));
};


/**
 * @param {!Array<!proto.sp.rpc.emerald.CrossPromotion.Banner>} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Popup} returns this
*/
proto.sp.rpc.emerald.CrossPromotion.Popup.prototype.setBannersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.sp.rpc.emerald.CrossPromotion.Banner=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Banner}
 */
proto.sp.rpc.emerald.CrossPromotion.Popup.prototype.addBanners = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.sp.rpc.emerald.CrossPromotion.Banner, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sp.rpc.emerald.CrossPromotion.Popup} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.Popup.prototype.clearBannersList = function() {
  return this.setBannersList([]);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.sp.rpc.emerald.CrossPromotion.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Icon icon = 2;
 * @return {?proto.sp.rpc.emerald.CrossPromotion.Icon}
 */
proto.sp.rpc.emerald.CrossPromotion.prototype.getIcon = function() {
  return /** @type{?proto.sp.rpc.emerald.CrossPromotion.Icon} */ (
    jspb.Message.getWrapperField(this, proto.sp.rpc.emerald.CrossPromotion.Icon, 2));
};


/**
 * @param {?proto.sp.rpc.emerald.CrossPromotion.Icon|undefined} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion} returns this
*/
proto.sp.rpc.emerald.CrossPromotion.prototype.setIcon = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sp.rpc.emerald.CrossPromotion} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.prototype.clearIcon = function() {
  return this.setIcon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sp.rpc.emerald.CrossPromotion.prototype.hasIcon = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Popup popup = 3;
 * @return {?proto.sp.rpc.emerald.CrossPromotion.Popup}
 */
proto.sp.rpc.emerald.CrossPromotion.prototype.getPopup = function() {
  return /** @type{?proto.sp.rpc.emerald.CrossPromotion.Popup} */ (
    jspb.Message.getWrapperField(this, proto.sp.rpc.emerald.CrossPromotion.Popup, 3));
};


/**
 * @param {?proto.sp.rpc.emerald.CrossPromotion.Popup|undefined} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion} returns this
*/
proto.sp.rpc.emerald.CrossPromotion.prototype.setPopup = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sp.rpc.emerald.CrossPromotion} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.prototype.clearPopup = function() {
  return this.setPopup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sp.rpc.emerald.CrossPromotion.prototype.hasPopup = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 track_timeout = 4;
 * @return {number}
 */
proto.sp.rpc.emerald.CrossPromotion.prototype.getTrackTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sp.rpc.emerald.CrossPromotion} returns this
 */
proto.sp.rpc.emerald.CrossPromotion.prototype.setTrackTimeout = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


goog.object.extend(exports, proto.sp.rpc.emerald);
