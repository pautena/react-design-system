// source: SP/Rpc/Emerald/request_context.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.sp.rpc.emerald.RequestContext', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sp.rpc.emerald.RequestContext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sp.rpc.emerald.RequestContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sp.rpc.emerald.RequestContext.displayName = 'proto.sp.rpc.emerald.RequestContext';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sp.rpc.emerald.RequestContext.prototype.toObject = function(opt_includeInstance) {
  return proto.sp.rpc.emerald.RequestContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sp.rpc.emerald.RequestContext} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.emerald.RequestContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sessionId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    securityToken: jspb.Message.getFieldWithDefault(msg, 3, ""),
    device: jspb.Message.getFieldWithDefault(msg, 4, ""),
    deviceUid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    version: jspb.Message.getFieldWithDefault(msg, 6, ""),
    adId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    adIdEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    platform: jspb.Message.getFieldWithDefault(msg, 9, ""),
    os: jspb.Message.getFieldWithDefault(msg, 10, ""),
    language: jspb.Message.getFieldWithDefault(msg, 11, ""),
    country: jspb.Message.getFieldWithDefault(msg, 12, ""),
    rooted: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    adminPanel: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    deviceVendorId: jspb.Message.getFieldWithDefault(msg, 15, ""),
    networkConnection: jspb.Message.getFieldWithDefault(msg, 16, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sp.rpc.emerald.RequestContext}
 */
proto.sp.rpc.emerald.RequestContext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sp.rpc.emerald.RequestContext;
  return proto.sp.rpc.emerald.RequestContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sp.rpc.emerald.RequestContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sp.rpc.emerald.RequestContext}
 */
proto.sp.rpc.emerald.RequestContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSessionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecurityToken(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevice(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceUid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdId(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAdIdEnabled(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatform(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setOs(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRooted(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAdminPanel(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceVendorId(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetworkConnection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sp.rpc.emerald.RequestContext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sp.rpc.emerald.RequestContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sp.rpc.emerald.RequestContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.emerald.RequestContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSessionId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getSecurityToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDevice();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDeviceUid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAdId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAdIdEnabled();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getPlatform();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getOs();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getRooted();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getAdminPanel();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getDeviceVendorId();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getNetworkConnection();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional uint64 user_id = 1;
 * @return {number}
 */
proto.sp.rpc.emerald.RequestContext.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sp.rpc.emerald.RequestContext} returns this
 */
proto.sp.rpc.emerald.RequestContext.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 session_id = 2;
 * @return {number}
 */
proto.sp.rpc.emerald.RequestContext.prototype.getSessionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sp.rpc.emerald.RequestContext} returns this
 */
proto.sp.rpc.emerald.RequestContext.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string security_token = 3;
 * @return {string}
 */
proto.sp.rpc.emerald.RequestContext.prototype.getSecurityToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sp.rpc.emerald.RequestContext} returns this
 */
proto.sp.rpc.emerald.RequestContext.prototype.setSecurityToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string device = 4;
 * @return {string}
 */
proto.sp.rpc.emerald.RequestContext.prototype.getDevice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sp.rpc.emerald.RequestContext} returns this
 */
proto.sp.rpc.emerald.RequestContext.prototype.setDevice = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string device_uid = 5;
 * @return {string}
 */
proto.sp.rpc.emerald.RequestContext.prototype.getDeviceUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sp.rpc.emerald.RequestContext} returns this
 */
proto.sp.rpc.emerald.RequestContext.prototype.setDeviceUid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string version = 6;
 * @return {string}
 */
proto.sp.rpc.emerald.RequestContext.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.sp.rpc.emerald.RequestContext} returns this
 */
proto.sp.rpc.emerald.RequestContext.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string ad_id = 7;
 * @return {string}
 */
proto.sp.rpc.emerald.RequestContext.prototype.getAdId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.sp.rpc.emerald.RequestContext} returns this
 */
proto.sp.rpc.emerald.RequestContext.prototype.setAdId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool ad_id_enabled = 8;
 * @return {boolean}
 */
proto.sp.rpc.emerald.RequestContext.prototype.getAdIdEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sp.rpc.emerald.RequestContext} returns this
 */
proto.sp.rpc.emerald.RequestContext.prototype.setAdIdEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string platform = 9;
 * @return {string}
 */
proto.sp.rpc.emerald.RequestContext.prototype.getPlatform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.sp.rpc.emerald.RequestContext} returns this
 */
proto.sp.rpc.emerald.RequestContext.prototype.setPlatform = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string os = 10;
 * @return {string}
 */
proto.sp.rpc.emerald.RequestContext.prototype.getOs = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.sp.rpc.emerald.RequestContext} returns this
 */
proto.sp.rpc.emerald.RequestContext.prototype.setOs = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string language = 11;
 * @return {string}
 */
proto.sp.rpc.emerald.RequestContext.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.sp.rpc.emerald.RequestContext} returns this
 */
proto.sp.rpc.emerald.RequestContext.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string country = 12;
 * @return {string}
 */
proto.sp.rpc.emerald.RequestContext.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.sp.rpc.emerald.RequestContext} returns this
 */
proto.sp.rpc.emerald.RequestContext.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional bool rooted = 13;
 * @return {boolean}
 */
proto.sp.rpc.emerald.RequestContext.prototype.getRooted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sp.rpc.emerald.RequestContext} returns this
 */
proto.sp.rpc.emerald.RequestContext.prototype.setRooted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool admin_panel = 14;
 * @return {boolean}
 */
proto.sp.rpc.emerald.RequestContext.prototype.getAdminPanel = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sp.rpc.emerald.RequestContext} returns this
 */
proto.sp.rpc.emerald.RequestContext.prototype.setAdminPanel = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional string device_vendor_id = 15;
 * @return {string}
 */
proto.sp.rpc.emerald.RequestContext.prototype.getDeviceVendorId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.sp.rpc.emerald.RequestContext} returns this
 */
proto.sp.rpc.emerald.RequestContext.prototype.setDeviceVendorId = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string network_connection = 16;
 * @return {string}
 */
proto.sp.rpc.emerald.RequestContext.prototype.getNetworkConnection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.sp.rpc.emerald.RequestContext} returns this
 */
proto.sp.rpc.emerald.RequestContext.prototype.setNetworkConnection = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


goog.object.extend(exports, proto.sp.rpc.emerald);
