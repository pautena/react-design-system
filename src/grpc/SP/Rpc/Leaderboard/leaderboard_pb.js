// source: SP/Rpc/Leaderboard/leaderboard.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var SP_Rpc_Emerald_basic_request_context_pb = require('../../../SP/Rpc/Emerald/basic_request_context_pb.js');
goog.object.extend(proto, SP_Rpc_Emerald_basic_request_context_pb);
var SP_Rpc_UserProfile_user_profile_pb = require('../../../SP/Rpc/UserProfile/user_profile_pb.js');
goog.object.extend(proto, SP_Rpc_UserProfile_user_profile_pb);
goog.exportSymbol('proto.sp.rpc.leaderboard.DeleteUserRequest', null, global);
goog.exportSymbol('proto.sp.rpc.leaderboard.DeleteUserResponse', null, global);
goog.exportSymbol('proto.sp.rpc.leaderboard.GetRankingRequest', null, global);
goog.exportSymbol('proto.sp.rpc.leaderboard.GetRankingRequest.Ordering', null, global);
goog.exportSymbol('proto.sp.rpc.leaderboard.GetRankingResponse', null, global);
goog.exportSymbol('proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest', null, global);
goog.exportSymbol('proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse', null, global);
goog.exportSymbol('proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest', null, global);
goog.exportSymbol('proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse', null, global);
goog.exportSymbol('proto.sp.rpc.leaderboard.LeaderboardRequest', null, global);
goog.exportSymbol('proto.sp.rpc.leaderboard.RankingEntry', null, global);
goog.exportSymbol('proto.sp.rpc.leaderboard.UpdateScoreRequest', null, global);
goog.exportSymbol('proto.sp.rpc.leaderboard.UpdateScoreRequest.Policy', null, global);
goog.exportSymbol('proto.sp.rpc.leaderboard.UpdateScoreResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sp.rpc.leaderboard.LeaderboardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sp.rpc.leaderboard.LeaderboardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sp.rpc.leaderboard.LeaderboardRequest.displayName = 'proto.sp.rpc.leaderboard.LeaderboardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sp.rpc.leaderboard.GetRankingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sp.rpc.leaderboard.GetRankingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sp.rpc.leaderboard.GetRankingRequest.displayName = 'proto.sp.rpc.leaderboard.GetRankingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sp.rpc.leaderboard.GetRankingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sp.rpc.leaderboard.GetRankingResponse.repeatedFields_, null);
};
goog.inherits(proto.sp.rpc.leaderboard.GetRankingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sp.rpc.leaderboard.GetRankingResponse.displayName = 'proto.sp.rpc.leaderboard.GetRankingResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sp.rpc.leaderboard.RankingEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sp.rpc.leaderboard.RankingEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sp.rpc.leaderboard.RankingEntry.displayName = 'proto.sp.rpc.leaderboard.RankingEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest.displayName = 'proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse.repeatedFields_, null);
};
goog.inherits(proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse.displayName = 'proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest.displayName = 'proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse.repeatedFields_, null);
};
goog.inherits(proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse.displayName = 'proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sp.rpc.leaderboard.UpdateScoreRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sp.rpc.leaderboard.UpdateScoreRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sp.rpc.leaderboard.UpdateScoreRequest.displayName = 'proto.sp.rpc.leaderboard.UpdateScoreRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sp.rpc.leaderboard.UpdateScoreResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sp.rpc.leaderboard.UpdateScoreResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sp.rpc.leaderboard.UpdateScoreResponse.displayName = 'proto.sp.rpc.leaderboard.UpdateScoreResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sp.rpc.leaderboard.DeleteUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sp.rpc.leaderboard.DeleteUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sp.rpc.leaderboard.DeleteUserRequest.displayName = 'proto.sp.rpc.leaderboard.DeleteUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sp.rpc.leaderboard.DeleteUserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sp.rpc.leaderboard.DeleteUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sp.rpc.leaderboard.DeleteUserResponse.displayName = 'proto.sp.rpc.leaderboard.DeleteUserResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sp.rpc.leaderboard.LeaderboardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sp.rpc.leaderboard.LeaderboardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sp.rpc.leaderboard.LeaderboardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.LeaderboardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestContext: (f = msg.getRequestContext()) && SP_Rpc_Emerald_basic_request_context_pb.BasicRequestContext.toObject(includeInstance, f),
    leaderboardId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sp.rpc.leaderboard.LeaderboardRequest}
 */
proto.sp.rpc.leaderboard.LeaderboardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sp.rpc.leaderboard.LeaderboardRequest;
  return proto.sp.rpc.leaderboard.LeaderboardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sp.rpc.leaderboard.LeaderboardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sp.rpc.leaderboard.LeaderboardRequest}
 */
proto.sp.rpc.leaderboard.LeaderboardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new SP_Rpc_Emerald_basic_request_context_pb.BasicRequestContext;
      reader.readMessage(value,SP_Rpc_Emerald_basic_request_context_pb.BasicRequestContext.deserializeBinaryFromReader);
      msg.setRequestContext(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLeaderboardId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sp.rpc.leaderboard.LeaderboardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sp.rpc.leaderboard.LeaderboardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sp.rpc.leaderboard.LeaderboardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.LeaderboardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      SP_Rpc_Emerald_basic_request_context_pb.BasicRequestContext.serializeBinaryToWriter
    );
  }
  f = message.getLeaderboardId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional sp.rpc.emerald.BasicRequestContext request_context = 1;
 * @return {?proto.sp.rpc.emerald.BasicRequestContext}
 */
proto.sp.rpc.leaderboard.LeaderboardRequest.prototype.getRequestContext = function() {
  return /** @type{?proto.sp.rpc.emerald.BasicRequestContext} */ (
    jspb.Message.getWrapperField(this, SP_Rpc_Emerald_basic_request_context_pb.BasicRequestContext, 1));
};


/**
 * @param {?proto.sp.rpc.emerald.BasicRequestContext|undefined} value
 * @return {!proto.sp.rpc.leaderboard.LeaderboardRequest} returns this
*/
proto.sp.rpc.leaderboard.LeaderboardRequest.prototype.setRequestContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sp.rpc.leaderboard.LeaderboardRequest} returns this
 */
proto.sp.rpc.leaderboard.LeaderboardRequest.prototype.clearRequestContext = function() {
  return this.setRequestContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sp.rpc.leaderboard.LeaderboardRequest.prototype.hasRequestContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string leaderboard_id = 2;
 * @return {string}
 */
proto.sp.rpc.leaderboard.LeaderboardRequest.prototype.getLeaderboardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sp.rpc.leaderboard.LeaderboardRequest} returns this
 */
proto.sp.rpc.leaderboard.LeaderboardRequest.prototype.setLeaderboardId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sp.rpc.leaderboard.GetRankingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sp.rpc.leaderboard.GetRankingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sp.rpc.leaderboard.GetRankingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.GetRankingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.sp.rpc.leaderboard.LeaderboardRequest.toObject(includeInstance, f),
    ordering: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sp.rpc.leaderboard.GetRankingRequest}
 */
proto.sp.rpc.leaderboard.GetRankingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sp.rpc.leaderboard.GetRankingRequest;
  return proto.sp.rpc.leaderboard.GetRankingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sp.rpc.leaderboard.GetRankingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sp.rpc.leaderboard.GetRankingRequest}
 */
proto.sp.rpc.leaderboard.GetRankingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sp.rpc.leaderboard.LeaderboardRequest;
      reader.readMessage(value,proto.sp.rpc.leaderboard.LeaderboardRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = /** @type {!proto.sp.rpc.leaderboard.GetRankingRequest.Ordering} */ (reader.readEnum());
      msg.setOrdering(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sp.rpc.leaderboard.GetRankingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sp.rpc.leaderboard.GetRankingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sp.rpc.leaderboard.GetRankingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.GetRankingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sp.rpc.leaderboard.LeaderboardRequest.serializeBinaryToWriter
    );
  }
  f = message.getOrdering();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.sp.rpc.leaderboard.GetRankingRequest.Ordering = {
  DESCENDING: 0,
  ASCENDING: 1
};

/**
 * optional LeaderboardRequest request = 1;
 * @return {?proto.sp.rpc.leaderboard.LeaderboardRequest}
 */
proto.sp.rpc.leaderboard.GetRankingRequest.prototype.getRequest = function() {
  return /** @type{?proto.sp.rpc.leaderboard.LeaderboardRequest} */ (
    jspb.Message.getWrapperField(this, proto.sp.rpc.leaderboard.LeaderboardRequest, 1));
};


/**
 * @param {?proto.sp.rpc.leaderboard.LeaderboardRequest|undefined} value
 * @return {!proto.sp.rpc.leaderboard.GetRankingRequest} returns this
*/
proto.sp.rpc.leaderboard.GetRankingRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sp.rpc.leaderboard.GetRankingRequest} returns this
 */
proto.sp.rpc.leaderboard.GetRankingRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sp.rpc.leaderboard.GetRankingRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Ordering ordering = 2;
 * @return {!proto.sp.rpc.leaderboard.GetRankingRequest.Ordering}
 */
proto.sp.rpc.leaderboard.GetRankingRequest.prototype.getOrdering = function() {
  return /** @type {!proto.sp.rpc.leaderboard.GetRankingRequest.Ordering} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.sp.rpc.leaderboard.GetRankingRequest.Ordering} value
 * @return {!proto.sp.rpc.leaderboard.GetRankingRequest} returns this
 */
proto.sp.rpc.leaderboard.GetRankingRequest.prototype.setOrdering = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int32 limit = 3;
 * @return {number}
 */
proto.sp.rpc.leaderboard.GetRankingRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sp.rpc.leaderboard.GetRankingRequest} returns this
 */
proto.sp.rpc.leaderboard.GetRankingRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 offset = 4;
 * @return {number}
 */
proto.sp.rpc.leaderboard.GetRankingRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sp.rpc.leaderboard.GetRankingRequest} returns this
 */
proto.sp.rpc.leaderboard.GetRankingRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sp.rpc.leaderboard.GetRankingResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sp.rpc.leaderboard.GetRankingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sp.rpc.leaderboard.GetRankingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sp.rpc.leaderboard.GetRankingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.GetRankingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.sp.rpc.leaderboard.RankingEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sp.rpc.leaderboard.GetRankingResponse}
 */
proto.sp.rpc.leaderboard.GetRankingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sp.rpc.leaderboard.GetRankingResponse;
  return proto.sp.rpc.leaderboard.GetRankingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sp.rpc.leaderboard.GetRankingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sp.rpc.leaderboard.GetRankingResponse}
 */
proto.sp.rpc.leaderboard.GetRankingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sp.rpc.leaderboard.RankingEntry;
      reader.readMessage(value,proto.sp.rpc.leaderboard.RankingEntry.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sp.rpc.leaderboard.GetRankingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sp.rpc.leaderboard.GetRankingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sp.rpc.leaderboard.GetRankingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.GetRankingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sp.rpc.leaderboard.RankingEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RankingEntry entries = 1;
 * @return {!Array<!proto.sp.rpc.leaderboard.RankingEntry>}
 */
proto.sp.rpc.leaderboard.GetRankingResponse.prototype.getEntriesList = function() {
  return /** @type{!Array<!proto.sp.rpc.leaderboard.RankingEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sp.rpc.leaderboard.RankingEntry, 1));
};


/**
 * @param {!Array<!proto.sp.rpc.leaderboard.RankingEntry>} value
 * @return {!proto.sp.rpc.leaderboard.GetRankingResponse} returns this
*/
proto.sp.rpc.leaderboard.GetRankingResponse.prototype.setEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sp.rpc.leaderboard.RankingEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sp.rpc.leaderboard.RankingEntry}
 */
proto.sp.rpc.leaderboard.GetRankingResponse.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sp.rpc.leaderboard.RankingEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sp.rpc.leaderboard.GetRankingResponse} returns this
 */
proto.sp.rpc.leaderboard.GetRankingResponse.prototype.clearEntriesList = function() {
  return this.setEntriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sp.rpc.leaderboard.RankingEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.sp.rpc.leaderboard.RankingEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sp.rpc.leaderboard.RankingEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.RankingEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    userProfile: (f = msg.getUserProfile()) && SP_Rpc_UserProfile_user_profile_pb.UserProfile.toObject(includeInstance, f),
    score: jspb.Message.getFieldWithDefault(msg, 2, 0),
    position: jspb.Message.getFieldWithDefault(msg, 3, 0),
    rankingMetadata: (f = msg.getRankingMetadata()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sp.rpc.leaderboard.RankingEntry}
 */
proto.sp.rpc.leaderboard.RankingEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sp.rpc.leaderboard.RankingEntry;
  return proto.sp.rpc.leaderboard.RankingEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sp.rpc.leaderboard.RankingEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sp.rpc.leaderboard.RankingEntry}
 */
proto.sp.rpc.leaderboard.RankingEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new SP_Rpc_UserProfile_user_profile_pb.UserProfile;
      reader.readMessage(value,SP_Rpc_UserProfile_user_profile_pb.UserProfile.deserializeBinaryFromReader);
      msg.setUserProfile(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScore(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPosition(value);
      break;
    case 4:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setRankingMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sp.rpc.leaderboard.RankingEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sp.rpc.leaderboard.RankingEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sp.rpc.leaderboard.RankingEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.RankingEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserProfile();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      SP_Rpc_UserProfile_user_profile_pb.UserProfile.serializeBinaryToWriter
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPosition();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getRankingMetadata();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional sp.rpc.userprofile.UserProfile user_profile = 1;
 * @return {?proto.sp.rpc.userprofile.UserProfile}
 */
proto.sp.rpc.leaderboard.RankingEntry.prototype.getUserProfile = function() {
  return /** @type{?proto.sp.rpc.userprofile.UserProfile} */ (
    jspb.Message.getWrapperField(this, SP_Rpc_UserProfile_user_profile_pb.UserProfile, 1));
};


/**
 * @param {?proto.sp.rpc.userprofile.UserProfile|undefined} value
 * @return {!proto.sp.rpc.leaderboard.RankingEntry} returns this
*/
proto.sp.rpc.leaderboard.RankingEntry.prototype.setUserProfile = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sp.rpc.leaderboard.RankingEntry} returns this
 */
proto.sp.rpc.leaderboard.RankingEntry.prototype.clearUserProfile = function() {
  return this.setUserProfile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sp.rpc.leaderboard.RankingEntry.prototype.hasUserProfile = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 score = 2;
 * @return {number}
 */
proto.sp.rpc.leaderboard.RankingEntry.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sp.rpc.leaderboard.RankingEntry} returns this
 */
proto.sp.rpc.leaderboard.RankingEntry.prototype.setScore = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 position = 3;
 * @return {number}
 */
proto.sp.rpc.leaderboard.RankingEntry.prototype.getPosition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sp.rpc.leaderboard.RankingEntry} returns this
 */
proto.sp.rpc.leaderboard.RankingEntry.prototype.setPosition = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional google.protobuf.Any ranking_metadata = 4;
 * @return {?proto.google.protobuf.Any}
 */
proto.sp.rpc.leaderboard.RankingEntry.prototype.getRankingMetadata = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 4));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.sp.rpc.leaderboard.RankingEntry} returns this
*/
proto.sp.rpc.leaderboard.RankingEntry.prototype.setRankingMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sp.rpc.leaderboard.RankingEntry} returns this
 */
proto.sp.rpc.leaderboard.RankingEntry.prototype.clearRankingMetadata = function() {
  return this.setRankingMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sp.rpc.leaderboard.RankingEntry.prototype.hasRankingMetadata = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.sp.rpc.leaderboard.LeaderboardRequest.toObject(includeInstance, f),
    userId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    surroundingEntriesAmount: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest}
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest;
  return proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest}
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sp.rpc.leaderboard.LeaderboardRequest;
      reader.readMessage(value,proto.sp.rpc.leaderboard.LeaderboardRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSurroundingEntriesAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sp.rpc.leaderboard.LeaderboardRequest.serializeBinaryToWriter
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getSurroundingEntriesAmount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional LeaderboardRequest request = 1;
 * @return {?proto.sp.rpc.leaderboard.LeaderboardRequest}
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest.prototype.getRequest = function() {
  return /** @type{?proto.sp.rpc.leaderboard.LeaderboardRequest} */ (
    jspb.Message.getWrapperField(this, proto.sp.rpc.leaderboard.LeaderboardRequest, 1));
};


/**
 * @param {?proto.sp.rpc.leaderboard.LeaderboardRequest|undefined} value
 * @return {!proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest} returns this
*/
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest} returns this
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 user_id = 2;
 * @return {number}
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest} returns this
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 surrounding_entries_amount = 3;
 * @return {number}
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest.prototype.getSurroundingEntriesAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest} returns this
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesRequest.prototype.setSurroundingEntriesAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.sp.rpc.leaderboard.RankingEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse}
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse;
  return proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse}
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sp.rpc.leaderboard.RankingEntry;
      reader.readMessage(value,proto.sp.rpc.leaderboard.RankingEntry.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sp.rpc.leaderboard.RankingEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RankingEntry entries = 1;
 * @return {!Array<!proto.sp.rpc.leaderboard.RankingEntry>}
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse.prototype.getEntriesList = function() {
  return /** @type{!Array<!proto.sp.rpc.leaderboard.RankingEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sp.rpc.leaderboard.RankingEntry, 1));
};


/**
 * @param {!Array<!proto.sp.rpc.leaderboard.RankingEntry>} value
 * @return {!proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse} returns this
*/
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse.prototype.setEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sp.rpc.leaderboard.RankingEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sp.rpc.leaderboard.RankingEntry}
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sp.rpc.leaderboard.RankingEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse} returns this
 */
proto.sp.rpc.leaderboard.GetSurroundingUserEntriesResponse.prototype.clearEntriesList = function() {
  return this.setEntriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.sp.rpc.leaderboard.LeaderboardRequest.toObject(includeInstance, f),
    score: jspb.Message.getFieldWithDefault(msg, 2, 0),
    surroundingEntriesAmount: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest}
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest;
  return proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest}
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sp.rpc.leaderboard.LeaderboardRequest;
      reader.readMessage(value,proto.sp.rpc.leaderboard.LeaderboardRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScore(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSurroundingEntriesAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sp.rpc.leaderboard.LeaderboardRequest.serializeBinaryToWriter
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSurroundingEntriesAmount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional LeaderboardRequest request = 1;
 * @return {?proto.sp.rpc.leaderboard.LeaderboardRequest}
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest.prototype.getRequest = function() {
  return /** @type{?proto.sp.rpc.leaderboard.LeaderboardRequest} */ (
    jspb.Message.getWrapperField(this, proto.sp.rpc.leaderboard.LeaderboardRequest, 1));
};


/**
 * @param {?proto.sp.rpc.leaderboard.LeaderboardRequest|undefined} value
 * @return {!proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest} returns this
*/
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest} returns this
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 score = 2;
 * @return {number}
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest} returns this
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest.prototype.setScore = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 surrounding_entries_amount = 3;
 * @return {number}
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest.prototype.getSurroundingEntriesAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest} returns this
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesRequest.prototype.setSurroundingEntriesAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.sp.rpc.leaderboard.RankingEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse}
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse;
  return proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse}
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sp.rpc.leaderboard.RankingEntry;
      reader.readMessage(value,proto.sp.rpc.leaderboard.RankingEntry.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sp.rpc.leaderboard.RankingEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RankingEntry entries = 1;
 * @return {!Array<!proto.sp.rpc.leaderboard.RankingEntry>}
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse.prototype.getEntriesList = function() {
  return /** @type{!Array<!proto.sp.rpc.leaderboard.RankingEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sp.rpc.leaderboard.RankingEntry, 1));
};


/**
 * @param {!Array<!proto.sp.rpc.leaderboard.RankingEntry>} value
 * @return {!proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse} returns this
*/
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse.prototype.setEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sp.rpc.leaderboard.RankingEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sp.rpc.leaderboard.RankingEntry}
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sp.rpc.leaderboard.RankingEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse} returns this
 */
proto.sp.rpc.leaderboard.GetSurroundingScoreEntriesResponse.prototype.clearEntriesList = function() {
  return this.setEntriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sp.rpc.leaderboard.UpdateScoreRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sp.rpc.leaderboard.UpdateScoreRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sp.rpc.leaderboard.UpdateScoreRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.UpdateScoreRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.sp.rpc.leaderboard.LeaderboardRequest.toObject(includeInstance, f),
    score: jspb.Message.getFieldWithDefault(msg, 2, 0),
    policy: jspb.Message.getFieldWithDefault(msg, 3, 0),
    rankingMetadata: (f = msg.getRankingMetadata()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sp.rpc.leaderboard.UpdateScoreRequest}
 */
proto.sp.rpc.leaderboard.UpdateScoreRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sp.rpc.leaderboard.UpdateScoreRequest;
  return proto.sp.rpc.leaderboard.UpdateScoreRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sp.rpc.leaderboard.UpdateScoreRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sp.rpc.leaderboard.UpdateScoreRequest}
 */
proto.sp.rpc.leaderboard.UpdateScoreRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sp.rpc.leaderboard.LeaderboardRequest;
      reader.readMessage(value,proto.sp.rpc.leaderboard.LeaderboardRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScore(value);
      break;
    case 3:
      var value = /** @type {!proto.sp.rpc.leaderboard.UpdateScoreRequest.Policy} */ (reader.readEnum());
      msg.setPolicy(value);
      break;
    case 4:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setRankingMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sp.rpc.leaderboard.UpdateScoreRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sp.rpc.leaderboard.UpdateScoreRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sp.rpc.leaderboard.UpdateScoreRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.UpdateScoreRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sp.rpc.leaderboard.LeaderboardRequest.serializeBinaryToWriter
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPolicy();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getRankingMetadata();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.sp.rpc.leaderboard.UpdateScoreRequest.Policy = {
  ABSOLUTE: 0,
  RELATIVE: 1,
  HIGHER: 2,
  LOWER: 3
};

/**
 * optional LeaderboardRequest request = 1;
 * @return {?proto.sp.rpc.leaderboard.LeaderboardRequest}
 */
proto.sp.rpc.leaderboard.UpdateScoreRequest.prototype.getRequest = function() {
  return /** @type{?proto.sp.rpc.leaderboard.LeaderboardRequest} */ (
    jspb.Message.getWrapperField(this, proto.sp.rpc.leaderboard.LeaderboardRequest, 1));
};


/**
 * @param {?proto.sp.rpc.leaderboard.LeaderboardRequest|undefined} value
 * @return {!proto.sp.rpc.leaderboard.UpdateScoreRequest} returns this
*/
proto.sp.rpc.leaderboard.UpdateScoreRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sp.rpc.leaderboard.UpdateScoreRequest} returns this
 */
proto.sp.rpc.leaderboard.UpdateScoreRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sp.rpc.leaderboard.UpdateScoreRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 score = 2;
 * @return {number}
 */
proto.sp.rpc.leaderboard.UpdateScoreRequest.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sp.rpc.leaderboard.UpdateScoreRequest} returns this
 */
proto.sp.rpc.leaderboard.UpdateScoreRequest.prototype.setScore = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Policy policy = 3;
 * @return {!proto.sp.rpc.leaderboard.UpdateScoreRequest.Policy}
 */
proto.sp.rpc.leaderboard.UpdateScoreRequest.prototype.getPolicy = function() {
  return /** @type {!proto.sp.rpc.leaderboard.UpdateScoreRequest.Policy} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.sp.rpc.leaderboard.UpdateScoreRequest.Policy} value
 * @return {!proto.sp.rpc.leaderboard.UpdateScoreRequest} returns this
 */
proto.sp.rpc.leaderboard.UpdateScoreRequest.prototype.setPolicy = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional google.protobuf.Any ranking_metadata = 4;
 * @return {?proto.google.protobuf.Any}
 */
proto.sp.rpc.leaderboard.UpdateScoreRequest.prototype.getRankingMetadata = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 4));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.sp.rpc.leaderboard.UpdateScoreRequest} returns this
*/
proto.sp.rpc.leaderboard.UpdateScoreRequest.prototype.setRankingMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sp.rpc.leaderboard.UpdateScoreRequest} returns this
 */
proto.sp.rpc.leaderboard.UpdateScoreRequest.prototype.clearRankingMetadata = function() {
  return this.setRankingMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sp.rpc.leaderboard.UpdateScoreRequest.prototype.hasRankingMetadata = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sp.rpc.leaderboard.UpdateScoreResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sp.rpc.leaderboard.UpdateScoreResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sp.rpc.leaderboard.UpdateScoreResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.UpdateScoreResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sp.rpc.leaderboard.UpdateScoreResponse}
 */
proto.sp.rpc.leaderboard.UpdateScoreResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sp.rpc.leaderboard.UpdateScoreResponse;
  return proto.sp.rpc.leaderboard.UpdateScoreResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sp.rpc.leaderboard.UpdateScoreResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sp.rpc.leaderboard.UpdateScoreResponse}
 */
proto.sp.rpc.leaderboard.UpdateScoreResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sp.rpc.leaderboard.UpdateScoreResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sp.rpc.leaderboard.UpdateScoreResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sp.rpc.leaderboard.UpdateScoreResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.UpdateScoreResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sp.rpc.leaderboard.DeleteUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sp.rpc.leaderboard.DeleteUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sp.rpc.leaderboard.DeleteUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.DeleteUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.sp.rpc.leaderboard.LeaderboardRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sp.rpc.leaderboard.DeleteUserRequest}
 */
proto.sp.rpc.leaderboard.DeleteUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sp.rpc.leaderboard.DeleteUserRequest;
  return proto.sp.rpc.leaderboard.DeleteUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sp.rpc.leaderboard.DeleteUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sp.rpc.leaderboard.DeleteUserRequest}
 */
proto.sp.rpc.leaderboard.DeleteUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sp.rpc.leaderboard.LeaderboardRequest;
      reader.readMessage(value,proto.sp.rpc.leaderboard.LeaderboardRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sp.rpc.leaderboard.DeleteUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sp.rpc.leaderboard.DeleteUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sp.rpc.leaderboard.DeleteUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.DeleteUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sp.rpc.leaderboard.LeaderboardRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional LeaderboardRequest request = 1;
 * @return {?proto.sp.rpc.leaderboard.LeaderboardRequest}
 */
proto.sp.rpc.leaderboard.DeleteUserRequest.prototype.getRequest = function() {
  return /** @type{?proto.sp.rpc.leaderboard.LeaderboardRequest} */ (
    jspb.Message.getWrapperField(this, proto.sp.rpc.leaderboard.LeaderboardRequest, 1));
};


/**
 * @param {?proto.sp.rpc.leaderboard.LeaderboardRequest|undefined} value
 * @return {!proto.sp.rpc.leaderboard.DeleteUserRequest} returns this
*/
proto.sp.rpc.leaderboard.DeleteUserRequest.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sp.rpc.leaderboard.DeleteUserRequest} returns this
 */
proto.sp.rpc.leaderboard.DeleteUserRequest.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sp.rpc.leaderboard.DeleteUserRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sp.rpc.leaderboard.DeleteUserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sp.rpc.leaderboard.DeleteUserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sp.rpc.leaderboard.DeleteUserResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.DeleteUserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sp.rpc.leaderboard.DeleteUserResponse}
 */
proto.sp.rpc.leaderboard.DeleteUserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sp.rpc.leaderboard.DeleteUserResponse;
  return proto.sp.rpc.leaderboard.DeleteUserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sp.rpc.leaderboard.DeleteUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sp.rpc.leaderboard.DeleteUserResponse}
 */
proto.sp.rpc.leaderboard.DeleteUserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sp.rpc.leaderboard.DeleteUserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sp.rpc.leaderboard.DeleteUserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sp.rpc.leaderboard.DeleteUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sp.rpc.leaderboard.DeleteUserResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.sp.rpc.leaderboard);
