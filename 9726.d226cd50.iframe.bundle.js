"use strict";(self.webpackChunk_pautena_react_design_system=self.webpackChunk_pautena_react_design_system||[]).push([[9726],{"./node_modules/@mui/x-data-grid/DataGrid/DataGrid.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{_:()=>DataGrid});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types);var esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),objectWithoutPropertiesLoose=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"),clsx_m=__webpack_require__("./node_modules/clsx/dist/clsx.m.js"),capitalize=__webpack_require__("./node_modules/@mui/utils/esm/capitalize.js"),composeClasses=__webpack_require__("./node_modules/@mui/utils/esm/composeClasses/composeClasses.js"),useForkRef=__webpack_require__("./node_modules/@mui/utils/esm/useForkRef.js"),useEnhancedEffect=__webpack_require__("./node_modules/@mui/utils/esm/useEnhancedEffect.js"),colorManipulator=__webpack_require__("./node_modules/@mui/system/esm/colorManipulator.js"),styled=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),generateUtilityClass=__webpack_require__("./node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js"),generateUtilityClasses=__webpack_require__("./node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js");function getDataGridUtilityClass(slot){return(0,generateUtilityClass.Z)("MuiDataGrid",slot)}const gridClasses_gridClasses=(0,generateUtilityClasses.Z)("MuiDataGrid",["actionsCell","aggregationColumnHeader","aggregationColumnHeader--alignLeft","aggregationColumnHeader--alignCenter","aggregationColumnHeader--alignRight","autoHeight","booleanCell","cell--editable","cell--editing","cell--textCenter","cell--textLeft","cell--textRight","cell--withRenderer","cell--rangeTop","cell--rangeBottom","cell--rangeLeft","cell--rangeRight","cell","cellContent","cellCheckbox","cellSkeleton","checkboxInput","columnHeader--alignCenter","columnHeader--alignLeft","columnHeader--alignRight","columnHeader--dragging","columnHeader--moving","columnHeader--numeric","columnHeader--sortable","columnHeader--sorted","columnHeader--filtered","columnHeader","columnHeaderCheckbox","columnHeaderDraggableContainer","columnHeaderDropZone","columnHeaderTitle","columnHeaderTitleContainer","columnHeaderTitleContainerContent","columnGroupHeader","columnHeader--filledGroup","columnHeader--emptyGroup","columnHeader--showColumnBorder","columnHeaders","columnHeadersInner","columnHeadersInner--scrollable","columnSeparator--resizable","columnSeparator--resizing","columnSeparator--sideLeft","columnSeparator--sideRight","columnSeparator","columnsPanel","columnsPanelRow","detailPanel","detailPanels","detailPanelToggleCell","detailPanelToggleCell--expanded","footerCell","panel","panelHeader","panelWrapper","panelContent","panelFooter","paper","editBooleanCell","editInputCell","filterForm","filterFormDeleteIcon","filterFormLogicOperatorInput","filterFormColumnInput","filterFormOperatorInput","filterFormValueInput","filterIcon","footerContainer","iconButtonContainer","iconSeparator","main","menu","menuIcon","menuIconButton","menuOpen","menuList","overlay","root","root--densityStandard","root--densityComfortable","root--densityCompact","root--disableUserSelection","row","row--editable","row--editing","row--lastVisible","row--dragging","row--dynamicHeight","row--detailPanelExpanded","rowReorderCellPlaceholder","rowCount","rowReorderCellContainer","rowReorderCell","rowReorderCell--draggable","scrollArea--left","scrollArea--right","scrollArea","selectedRowCount","sortIcon","toolbarContainer","toolbarFilterList","virtualScroller","virtualScrollerContent","virtualScrollerContent--overflowed","virtualScrollerRenderZone","pinnedColumns","pinnedColumns--left","pinnedColumns--right","pinnedColumnHeaders","pinnedColumnHeaders--left","pinnedColumnHeaders--right","withBorderColor","cell--withRightBorder","columnHeader--withRightBorder","treeDataGroupingCell","treeDataGroupingCellToggle","groupingCriteriaCell","groupingCriteriaCellToggle","pinnedRows","pinnedRows--top","pinnedRows--bottom","pinnedRowsRenderZone"]);const GridRootStyles=(0,styled.ZP)("div",{name:"MuiDataGrid",slot:"Root",overridesResolver:(props,styles)=>[{[`&.${gridClasses_gridClasses.autoHeight}`]:styles.autoHeight},{[`&.${gridClasses_gridClasses.aggregationColumnHeader}`]:styles.aggregationColumnHeader},{[`&.${gridClasses_gridClasses["aggregationColumnHeader--alignLeft"]}`]:styles["aggregationColumnHeader--alignLeft"]},{[`&.${gridClasses_gridClasses["aggregationColumnHeader--alignCenter"]}`]:styles["aggregationColumnHeader--alignCenter"]},{[`&.${gridClasses_gridClasses["aggregationColumnHeader--alignRight"]}`]:styles["aggregationColumnHeader--alignRight"]},{[`&.${gridClasses_gridClasses.aggregationColumnHeaderLabel}`]:styles.aggregationColumnHeaderLabel},{[`&.${gridClasses_gridClasses["root--disableUserSelection"]} .${gridClasses_gridClasses.cell}`]:styles["root--disableUserSelection"]},{[`& .${gridClasses_gridClasses.editBooleanCell}`]:styles.editBooleanCell},{[`& .${gridClasses_gridClasses["cell--editing"]}`]:styles["cell--editing"]},{[`& .${gridClasses_gridClasses["cell--textCenter"]}`]:styles["cell--textCenter"]},{[`& .${gridClasses_gridClasses["cell--textLeft"]}`]:styles["cell--textLeft"]},{[`& .${gridClasses_gridClasses["cell--textRight"]}`]:styles["cell--textRight"]},{[`& .${gridClasses_gridClasses["cell--withRenderer"]}`]:styles["cell--withRenderer"]},{[`& .${gridClasses_gridClasses.cell}`]:styles.cell},{[`& .${gridClasses_gridClasses["cell--rangeTop"]}`]:styles["cell--rangeTop"]},{[`& .${gridClasses_gridClasses["cell--rangeBottom"]}`]:styles["cell--rangeBottom"]},{[`& .${gridClasses_gridClasses["cell--rangeLeft"]}`]:styles["cell--rangeLeft"]},{[`& .${gridClasses_gridClasses["cell--rangeRight"]}`]:styles["cell--rangeRight"]},{[`& .${gridClasses_gridClasses.cellContent}`]:styles.cellContent},{[`& .${gridClasses_gridClasses.cellCheckbox}`]:styles.cellCheckbox},{[`& .${gridClasses_gridClasses.cellSkeleton}`]:styles.cellSkeleton},{[`& .${gridClasses_gridClasses.checkboxInput}`]:styles.checkboxInput},{[`& .${gridClasses_gridClasses["columnHeader--alignCenter"]}`]:styles["columnHeader--alignCenter"]},{[`& .${gridClasses_gridClasses["columnHeader--alignLeft"]}`]:styles["columnHeader--alignLeft"]},{[`& .${gridClasses_gridClasses["columnHeader--alignRight"]}`]:styles["columnHeader--alignRight"]},{[`& .${gridClasses_gridClasses["columnHeader--dragging"]}`]:styles["columnHeader--dragging"]},{[`& .${gridClasses_gridClasses["columnHeader--moving"]}`]:styles["columnHeader--moving"]},{[`& .${gridClasses_gridClasses["columnHeader--numeric"]}`]:styles["columnHeader--numeric"]},{[`& .${gridClasses_gridClasses["columnHeader--sortable"]}`]:styles["columnHeader--sortable"]},{[`& .${gridClasses_gridClasses["columnHeader--sorted"]}`]:styles["columnHeader--sorted"]},{[`& .${gridClasses_gridClasses.columnHeader}`]:styles.columnHeader},{[`& .${gridClasses_gridClasses.columnHeaderCheckbox}`]:styles.columnHeaderCheckbox},{[`& .${gridClasses_gridClasses.columnHeaderDraggableContainer}`]:styles.columnHeaderDraggableContainer},{[`& .${gridClasses_gridClasses.columnHeaderTitleContainer}`]:styles.columnHeaderTitleContainer},{[`& .${gridClasses_gridClasses["columnSeparator--resizable"]}`]:styles["columnSeparator--resizable"]},{[`& .${gridClasses_gridClasses["columnSeparator--resizing"]}`]:styles["columnSeparator--resizing"]},{[`& .${gridClasses_gridClasses.columnSeparator}`]:styles.columnSeparator},{[`& .${gridClasses_gridClasses.filterIcon}`]:styles.filterIcon},{[`& .${gridClasses_gridClasses.iconSeparator}`]:styles.iconSeparator},{[`& .${gridClasses_gridClasses.menuIcon}`]:styles.menuIcon},{[`& .${gridClasses_gridClasses.menuIconButton}`]:styles.menuIconButton},{[`& .${gridClasses_gridClasses.menuOpen}`]:styles.menuOpen},{[`& .${gridClasses_gridClasses.menuList}`]:styles.menuList},{[`& .${gridClasses_gridClasses["row--editable"]}`]:styles["row--editable"]},{[`& .${gridClasses_gridClasses["row--editing"]}`]:styles["row--editing"]},{[`& .${gridClasses_gridClasses["row--dragging"]}`]:styles["row--dragging"]},{[`& .${gridClasses_gridClasses.row}`]:styles.row},{[`& .${gridClasses_gridClasses.rowReorderCellPlaceholder}`]:styles.rowReorderCellPlaceholder},{[`& .${gridClasses_gridClasses.rowReorderCell}`]:styles.rowReorderCell},{[`& .${gridClasses_gridClasses["rowReorderCell--draggable"]}`]:styles["rowReorderCell--draggable"]},{[`& .${gridClasses_gridClasses.sortIcon}`]:styles.sortIcon},{[`& .${gridClasses_gridClasses.withBorderColor}`]:styles.withBorderColor},{[`& .${gridClasses_gridClasses.treeDataGroupingCell}`]:styles.treeDataGroupingCell},{[`& .${gridClasses_gridClasses.treeDataGroupingCellToggle}`]:styles.treeDataGroupingCellToggle},{[`& .${gridClasses_gridClasses.detailPanelToggleCell}`]:styles.detailPanelToggleCell},{[`& .${gridClasses_gridClasses["detailPanelToggleCell--expanded"]}`]:styles["detailPanelToggleCell--expanded"]},styles.root]})((({theme})=>{const borderColor=function getBorderColor(theme){return theme.vars?theme.vars.palette.TableCell.border:"light"===theme.palette.mode?(0,colorManipulator.$n)((0,colorManipulator.Fq)(theme.palette.divider,1),.88):(0,colorManipulator._j)((0,colorManipulator.Fq)(theme.palette.divider,1),.68)}(theme),radius=theme.shape.borderRadius;return(0,esm_extends.Z)({"--unstable_DataGrid-radius":"number"==typeof radius?`${radius}px`:radius,"--unstable_DataGrid-headWeight":theme.typography.fontWeightMedium,"--unstable_DataGrid-overlayBackground":theme.vars?`rgba(${theme.vars.palette.background.defaultChannel} / ${theme.vars.palette.action.disabledOpacity})`:(0,colorManipulator.Fq)(theme.palette.background.default,theme.palette.action.disabledOpacity),flex:1,boxSizing:"border-box",position:"relative",borderWidth:"1px",borderStyle:"solid",borderColor,borderRadius:"var(--unstable_DataGrid-radius)",color:(theme.vars||theme).palette.text.primary},theme.typography.body2,{outline:"none",height:"100%",display:"flex",flexDirection:"column",overflowAnchor:"none",[`&.${gridClasses_gridClasses.autoHeight}`]:{height:"auto",[`& .${gridClasses_gridClasses["row--lastVisible"]} .${gridClasses_gridClasses.cell}`]:{borderBottomColor:"transparent"}},[`& .${gridClasses_gridClasses["virtualScrollerContent--overflowed"]} .${gridClasses_gridClasses["row--lastVisible"]} .${gridClasses_gridClasses.cell}`]:{borderBottomColor:"transparent"},[`& .${gridClasses_gridClasses.columnHeader}, & .${gridClasses_gridClasses.cell}`]:{WebkitTapHighlightColor:"transparent",lineHeight:null,padding:"0 10px",boxSizing:"border-box"},[`& .${gridClasses_gridClasses.columnHeader}:focus-within, & .${gridClasses_gridClasses.cell}:focus-within`]:{outline:`solid ${theme.vars?`rgba(${theme.vars.palette.primary.mainChannel} / 0.5)`:(0,colorManipulator.Fq)(theme.palette.primary.main,.5)} 1px`,outlineWidth:1,outlineOffset:-1},[`& .${gridClasses_gridClasses.columnHeader}:focus, & .${gridClasses_gridClasses.cell}:focus`]:{outline:`solid ${theme.palette.primary.main} 1px`},[`& .${gridClasses_gridClasses.columnHeaderCheckbox}, & .${gridClasses_gridClasses.cellCheckbox}`]:{padding:0,justifyContent:"center",alignItems:"center"},[`& .${gridClasses_gridClasses.columnHeader}`]:{position:"relative",display:"flex",alignItems:"center"},[`& .${gridClasses_gridClasses["columnHeader--sorted"]} .${gridClasses_gridClasses.iconButtonContainer}, & .${gridClasses_gridClasses["columnHeader--filtered"]} .${gridClasses_gridClasses.iconButtonContainer}`]:{visibility:"visible",width:"auto"},[`& .${gridClasses_gridClasses.columnHeader}:not(.${gridClasses_gridClasses["columnHeader--sorted"]}) .${gridClasses_gridClasses.sortIcon}`]:{opacity:0,transition:theme.transitions.create(["opacity"],{duration:theme.transitions.duration.shorter})},[`& .${gridClasses_gridClasses.columnHeader}:not(.${gridClasses_gridClasses["columnHeader--sorted"]}):hover .${gridClasses_gridClasses.sortIcon}`]:{opacity:.5},[`& .${gridClasses_gridClasses.columnHeaderTitleContainer}`]:{display:"flex",alignItems:"center",minWidth:0,flex:1,whiteSpace:"nowrap",overflow:"hidden"},[`& .${gridClasses_gridClasses.columnHeaderTitleContainerContent}`]:{overflow:"hidden",display:"flex",alignItems:"center"},[`& .${gridClasses_gridClasses["columnHeader--filledGroup"]} .${gridClasses_gridClasses.columnHeaderTitleContainer}`]:{borderBottomWidth:"1px",borderBottomStyle:"solid",boxSizing:"border-box"},[`& .${gridClasses_gridClasses["columnHeader--filledGroup"]}.${gridClasses_gridClasses["columnHeader--showColumnBorder"]} .${gridClasses_gridClasses.columnHeaderTitleContainer}`]:{borderBottom:"none"},[`& .${gridClasses_gridClasses["columnHeader--filledGroup"]}.${gridClasses_gridClasses["columnHeader--showColumnBorder"]}`]:{borderBottomWidth:"1px",borderBottomStyle:"solid",boxSizing:"border-box"},[`& .${gridClasses_gridClasses.sortIcon}, & .${gridClasses_gridClasses.filterIcon}`]:{fontSize:"inherit"},[`& .${gridClasses_gridClasses["columnHeader--sortable"]}`]:{cursor:"pointer"},[`& .${gridClasses_gridClasses["columnHeader--alignCenter"]} .${gridClasses_gridClasses.columnHeaderTitleContainer}`]:{justifyContent:"center"},[`& .${gridClasses_gridClasses["columnHeader--alignRight"]} .${gridClasses_gridClasses.columnHeaderDraggableContainer}, & .${gridClasses_gridClasses["columnHeader--alignRight"]} .${gridClasses_gridClasses.columnHeaderTitleContainer}`]:{flexDirection:"row-reverse"},[`& .${gridClasses_gridClasses["columnHeader--alignCenter"]} .${gridClasses_gridClasses.menuIcon}, & .${gridClasses_gridClasses["columnHeader--alignRight"]} .${gridClasses_gridClasses.menuIcon}`]:{marginRight:"auto",marginLeft:-6},[`& .${gridClasses_gridClasses["columnHeader--alignRight"]} .${gridClasses_gridClasses.menuIcon}, & .${gridClasses_gridClasses["columnHeader--alignRight"]} .${gridClasses_gridClasses.menuIcon}`]:{marginRight:"auto",marginLeft:-10},[`& .${gridClasses_gridClasses["columnHeader--moving"]}`]:{backgroundColor:(theme.vars||theme).palette.action.hover},[`& .${gridClasses_gridClasses.columnSeparator}`]:{visibility:"hidden",position:"absolute",zIndex:100,display:"flex",flexDirection:"column",justifyContent:"center",color:borderColor},[`& .${gridClasses_gridClasses.columnHeaders}:hover .${gridClasses_gridClasses.columnSeparator}, .${gridClasses_gridClasses["columnSeparator--resizing"]}`]:{visibility:"visible",width:"auto"},[`& .${gridClasses_gridClasses["columnSeparator--sideLeft"]}`]:{left:-12},[`& .${gridClasses_gridClasses["columnSeparator--sideRight"]}`]:{right:-12},[`& .${gridClasses_gridClasses["columnSeparator--resizable"]}`]:{cursor:"col-resize",touchAction:"none","&:hover":{color:(theme.vars||theme).palette.text.primary,"@media (hover: none)":{color:borderColor}},[`&.${gridClasses_gridClasses["columnSeparator--resizing"]}`]:{color:(theme.vars||theme).palette.text.primary},"& svg":{pointerEvents:"none"}},[`& .${gridClasses_gridClasses.iconSeparator}`]:{color:"inherit"},[`& .${gridClasses_gridClasses.menuIcon}`]:{width:0,visibility:"hidden",fontSize:20,marginRight:-10,display:"flex",alignItems:"center"},[`& .${gridClasses_gridClasses.columnHeader}:hover`]:{[`& .${gridClasses_gridClasses.iconButtonContainer}`]:{visibility:"visible",width:"auto"},[`& .${gridClasses_gridClasses.menuIcon}`]:{width:"auto",visibility:"visible"}},[`.${gridClasses_gridClasses.menuOpen}`]:{visibility:"visible",width:"auto"},[`& .${gridClasses_gridClasses.row}`]:{display:"flex",width:"fit-content",breakInside:"avoid","&:hover, &.Mui-hovered":{backgroundColor:(theme.vars||theme).palette.action.hover,"@media (hover: none)":{backgroundColor:"transparent"}},"&.Mui-selected":{backgroundColor:theme.vars?`rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})`:(0,colorManipulator.Fq)(theme.palette.primary.main,theme.palette.action.selectedOpacity),"&:hover, &.Mui-hovered":{backgroundColor:theme.vars?`rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity+theme.palette.action.hoverOpacity})`:(0,colorManipulator.Fq)(theme.palette.primary.main,theme.palette.action.selectedOpacity+theme.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:theme.vars?`rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})`:(0,colorManipulator.Fq)(theme.palette.primary.main,theme.palette.action.selectedOpacity)}}}},[`& .${gridClasses_gridClasses.cell}`]:{display:"flex",alignItems:"center",borderBottom:"1px solid","&.Mui-selected":{backgroundColor:theme.vars?`rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})`:(0,colorManipulator.Fq)(theme.palette.primary.main,theme.palette.action.selectedOpacity),"&:hover, &.Mui-hovered":{backgroundColor:theme.vars?`rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity+theme.palette.action.hoverOpacity})`:(0,colorManipulator.Fq)(theme.palette.primary.main,theme.palette.action.selectedOpacity+theme.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:theme.vars?`rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})`:(0,colorManipulator.Fq)(theme.palette.primary.main,theme.palette.action.selectedOpacity)}}}},[`&.${gridClasses_gridClasses["root--disableUserSelection"]} .${gridClasses_gridClasses.cell}`]:{userSelect:"none"},[`& .${gridClasses_gridClasses.row}:not(.${gridClasses_gridClasses["row--dynamicHeight"]}) > .${gridClasses_gridClasses.cell}`]:{overflow:"hidden",whiteSpace:"nowrap"},[`& .${gridClasses_gridClasses.cellContent}`]:{overflow:"hidden",textOverflow:"ellipsis"},[`& .${gridClasses_gridClasses.cell}.${gridClasses_gridClasses["cell--editing"]}`]:{padding:1,display:"flex",boxShadow:theme.shadows[2],backgroundColor:(theme.vars||theme).palette.background.paper,"&:focus-within":{outline:`solid ${(theme.vars||theme).palette.primary.main} 1px`,outlineOffset:"-1px"}},[`& .${gridClasses_gridClasses["row--editing"]}`]:{boxShadow:theme.shadows[2]},[`& .${gridClasses_gridClasses["row--editing"]} .${gridClasses_gridClasses.cell}`]:{boxShadow:theme.shadows[0],backgroundColor:(theme.vars||theme).palette.background.paper},[`& .${gridClasses_gridClasses.editBooleanCell}`]:{display:"flex",height:"100%",width:"100%",alignItems:"center",justifyContent:"center"},[`& .${gridClasses_gridClasses.booleanCell}[data-value="true"]`]:{color:(theme.vars||theme).palette.text.secondary},[`& .${gridClasses_gridClasses.booleanCell}[data-value="false"]`]:{color:(theme.vars||theme).palette.text.disabled},[`& .${gridClasses_gridClasses.actionsCell}`]:{display:"inline-flex",alignItems:"center",gridGap:theme.spacing(1)},[`& .${gridClasses_gridClasses.rowReorderCell}`]:{display:"inline-flex",flex:1,alignItems:"center",justifyContent:"center",opacity:(theme.vars||theme).palette.action.disabledOpacity},[`& .${gridClasses_gridClasses["rowReorderCell--draggable"]}`]:{cursor:"move",opacity:1},[`& .${gridClasses_gridClasses.rowReorderCellContainer}`]:{padding:0,alignItems:"stretch"},[`.${gridClasses_gridClasses.withBorderColor}`]:{borderColor},[`& .${gridClasses_gridClasses["cell--withRightBorder"]}`]:{borderRightWidth:"1px",borderRightStyle:"solid"},[`& .${gridClasses_gridClasses["columnHeader--withRightBorder"]}`]:{borderRightWidth:"1px",borderRightStyle:"solid"},[`& .${gridClasses_gridClasses["cell--textLeft"]}`]:{justifyContent:"flex-start"},[`& .${gridClasses_gridClasses["cell--textRight"]}`]:{justifyContent:"flex-end"},[`& .${gridClasses_gridClasses["cell--textCenter"]}`]:{justifyContent:"center"},[`& .${gridClasses_gridClasses.columnHeaderDraggableContainer}`]:{display:"flex",width:"100%",height:"100%"},[`& .${gridClasses_gridClasses.rowReorderCellPlaceholder}`]:{display:"none"},[`& .${gridClasses_gridClasses["columnHeader--dragging"]}, & .${gridClasses_gridClasses["row--dragging"]}`]:{background:(theme.vars||theme).palette.background.paper,padding:"0 12px",borderRadius:"var(--unstable_DataGrid-radius)",opacity:(theme.vars||theme).palette.action.disabledOpacity},[`& .${gridClasses_gridClasses["row--dragging"]}`]:{background:(theme.vars||theme).palette.background.paper,padding:"0 12px",borderRadius:"var(--unstable_DataGrid-radius)",opacity:(theme.vars||theme).palette.action.disabledOpacity,[`& .${gridClasses_gridClasses.rowReorderCellPlaceholder}`]:{display:"flex"}},[`& .${gridClasses_gridClasses.treeDataGroupingCell}`]:{display:"flex",alignItems:"center",width:"100%"},[`& .${gridClasses_gridClasses.treeDataGroupingCellToggle}`]:{flex:"0 0 28px",alignSelf:"stretch",marginRight:theme.spacing(2)},[`& .${gridClasses_gridClasses.groupingCriteriaCell}`]:{display:"flex",alignItems:"center",width:"100%"},[`& .${gridClasses_gridClasses.groupingCriteriaCellToggle}`]:{flex:"0 0 28px",alignSelf:"stretch",marginRight:theme.spacing(2)}})}));var NOT_FOUND="NOT_FOUND";var defaultEqualityCheck=function defaultEqualityCheck(a,b){return a===b};function defaultMemoize(func,equalityCheckOrOptions){var providedOptions="object"==typeof equalityCheckOrOptions?equalityCheckOrOptions:{equalityCheck:equalityCheckOrOptions},_providedOptions$equa=providedOptions.equalityCheck,equalityCheck=void 0===_providedOptions$equa?defaultEqualityCheck:_providedOptions$equa,_providedOptions$maxS=providedOptions.maxSize,maxSize=void 0===_providedOptions$maxS?1:_providedOptions$maxS,resultEqualityCheck=providedOptions.resultEqualityCheck,comparator=function createCacheKeyComparator(equalityCheck){return function areArgumentsShallowlyEqual(prev,next){if(null===prev||null===next||prev.length!==next.length)return!1;for(var length=prev.length,i=0;i<length;i++)if(!equalityCheck(prev[i],next[i]))return!1;return!0}}(equalityCheck),cache=1===maxSize?function createSingletonCache(equals){var entry;return{get:function get(key){return entry&&equals(entry.key,key)?entry.value:NOT_FOUND},put:function put(key,value){entry={key,value}},getEntries:function getEntries(){return entry?[entry]:[]},clear:function clear(){entry=void 0}}}(comparator):function createLruCache(maxSize,equals){var entries=[];function get(key){var cacheIndex=entries.findIndex((function(entry){return equals(key,entry.key)}));if(cacheIndex>-1){var entry=entries[cacheIndex];return cacheIndex>0&&(entries.splice(cacheIndex,1),entries.unshift(entry)),entry.value}return NOT_FOUND}return{get,put:function put(key,value){get(key)===NOT_FOUND&&(entries.unshift({key,value}),entries.length>maxSize&&entries.pop())},getEntries:function getEntries(){return entries},clear:function clear(){entries=[]}}}(maxSize,comparator);function memoized(){var value=cache.get(arguments);if(value===NOT_FOUND){if(value=func.apply(null,arguments),resultEqualityCheck){var matchingEntry=cache.getEntries().find((function(entry){return resultEqualityCheck(entry.value,value)}));matchingEntry&&(value=matchingEntry.value)}cache.put(arguments,value)}return value}return memoized.clearCache=function(){return cache.clear()},memoized}function createSelectorCreator(memoize){for(var _len=arguments.length,memoizeOptionsFromArgs=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++)memoizeOptionsFromArgs[_key-1]=arguments[_key];return function createSelector(){for(var _len2=arguments.length,funcs=new Array(_len2),_key2=0;_key2<_len2;_key2++)funcs[_key2]=arguments[_key2];var _lastResult,_recomputations=0,directlyPassedOptions={memoizeOptions:void 0},resultFunc=funcs.pop();if("object"==typeof resultFunc&&(directlyPassedOptions=resultFunc,resultFunc=funcs.pop()),"function"!=typeof resultFunc)throw new Error("createSelector expects an output function after the inputs, but received: ["+typeof resultFunc+"]");var _directlyPassedOption2=directlyPassedOptions.memoizeOptions,memoizeOptions=void 0===_directlyPassedOption2?memoizeOptionsFromArgs:_directlyPassedOption2,finalMemoizeOptions=Array.isArray(memoizeOptions)?memoizeOptions:[memoizeOptions],dependencies=function getDependencies(funcs){var dependencies=Array.isArray(funcs[0])?funcs[0]:funcs;if(!dependencies.every((function(dep){return"function"==typeof dep}))){var dependencyTypes=dependencies.map((function(dep){return"function"==typeof dep?"function "+(dep.name||"unnamed")+"()":typeof dep})).join(", ");throw new Error("createSelector expects all input-selectors to be functions, but received the following types: ["+dependencyTypes+"]")}return dependencies}(funcs),memoizedResultFunc=memoize.apply(void 0,[function recomputationWrapper(){return _recomputations++,resultFunc.apply(null,arguments)}].concat(finalMemoizeOptions)),selector=memoize((function dependenciesChecker(){for(var params=[],length=dependencies.length,i=0;i<length;i++)params.push(dependencies[i].apply(null,arguments));return _lastResult=memoizedResultFunc.apply(null,params)}));return Object.assign(selector,{resultFunc,memoizedResultFunc,dependencies,lastResult:function lastResult(){return _lastResult},recomputations:function recomputations(){return _recomputations},resetRecomputations:function resetRecomputations(){return _recomputations=0}}),selector}}var createSelector=createSelectorCreator(defaultMemoize),warning=__webpack_require__("./node_modules/@mui/x-data-grid/utils/warning.js");const cacheContainer={cache:null},createSelector_createSelector=((0,warning.b)(["MUI: A selector was called without passing the instance ID, which may impact the performance of the grid.","To fix, call it with `apiRef`, e.g. `mySelector(apiRef)`, or pass the instance ID explicitly, e.g `mySelector(state, apiRef.current.instanceId)`."]),(...args)=>{null===cacheContainer.cache&&(cacheContainer.cache={});const selector=(...selectorArgs)=>{const[stateOrApiRef,instanceId]=selectorArgs,isApiRef=!!stateOrApiRef.current,cacheKey=isApiRef?stateOrApiRef.current.instanceId:null!=instanceId?instanceId:"default",state=isApiRef?stateOrApiRef.current.state:stateOrApiRef;null===cacheContainer.cache&&(cacheContainer.cache={});const{cache}=cacheContainer;if(cache[cacheKey]&&cache[cacheKey].get(args))return cache[cacheKey].get(args)(state,cacheKey);const newSelector=createSelector(...args);return cache[cacheKey]||(cache[cacheKey]=new Map),cache[cacheKey].set(args,newSelector),newSelector(state,cacheKey)};return selector.acceptsApiRef=!0,selector}),gridColumnsStateSelector=state=>state.columns,gridColumnFieldsSelector=createSelector_createSelector(gridColumnsStateSelector,(columnsState=>columnsState.orderedFields)),gridColumnLookupSelector=createSelector_createSelector(gridColumnsStateSelector,(columnsState=>columnsState.lookup)),gridColumnDefinitionsSelector=createSelector_createSelector(gridColumnFieldsSelector,gridColumnLookupSelector,((allFields,lookup)=>allFields.map((field=>lookup[field])))),gridColumnVisibilityModelSelector=createSelector_createSelector(gridColumnsStateSelector,(columnsState=>columnsState.columnVisibilityModel)),gridVisibleColumnDefinitionsSelector=createSelector_createSelector(gridColumnDefinitionsSelector,gridColumnVisibilityModelSelector,((columns,columnVisibilityModel)=>columns.filter((column=>!1!==columnVisibilityModel[column.field])))),gridVisibleColumnFieldsSelector=createSelector_createSelector(gridVisibleColumnDefinitionsSelector,(visibleColumns=>visibleColumns.map((column=>column.field)))),gridColumnPositionsSelector=createSelector_createSelector(gridVisibleColumnDefinitionsSelector,(visibleColumns=>{const positions=[];let currentPosition=0;for(let i=0;i<visibleColumns.length;i+=1)positions.push(currentPosition),currentPosition+=visibleColumns[i].computedWidth;return positions})),gridColumnsTotalWidthSelector=createSelector_createSelector(gridVisibleColumnDefinitionsSelector,gridColumnPositionsSelector,((visibleColumns,positions)=>{const colCount=visibleColumns.length;return 0===colCount?0:positions[colCount-1]+visibleColumns[colCount-1].computedWidth})),gridFilterableColumnDefinitionsSelector=createSelector_createSelector(gridColumnDefinitionsSelector,(columns=>columns.filter((col=>col.filterable)))),gridFilterableColumnLookupSelector=createSelector_createSelector(gridColumnDefinitionsSelector,(columns=>columns.reduce(((acc,col)=>(col.filterable&&(acc[col.field]=col),acc)),{})));(0,warning.b)(["MUI: `useGridSelector` has been called before the initialization of the state.","This hook can only be used inside the context of the grid."]);const useGridSelector=(apiRef,selector)=>function isOutputSelector(selector){return selector.acceptsApiRef}(selector)?selector(apiRef):selector(apiRef.current.state),GridPrivateApiContext=react.createContext(void 0);function useGridPrivateApiContext(){const privateApiRef=react.useContext(GridPrivateApiContext);if(void 0===privateApiRef)throw new Error(["MUI: Could not find the data grid private context.","It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.","This can also happen if you are bundling multiple versions of the data grid."].join("\n"));return privateApiRef}var useGridRootProps=__webpack_require__("./node_modules/@mui/x-data-grid/hooks/utils/useGridRootProps.js");const gridDensitySelector=state=>state.density,gridDensityValueSelector=createSelector_createSelector(gridDensitySelector,(density=>density.value)),gridDensityFactorSelector=createSelector_createSelector(gridDensitySelector,(density=>density.factor)),gridColumnGroupingSelector=state=>state.columnGrouping,gridColumnGroupsUnwrappedModelSelector=createSelector_createSelector(gridColumnGroupingSelector,(columnGrouping=>{var _columnGrouping$unwra;return null!=(_columnGrouping$unwra=null==columnGrouping?void 0:columnGrouping.unwrappedGroupingModel)?_columnGrouping$unwra:{}})),gridColumnGroupsLookupSelector=createSelector_createSelector(gridColumnGroupingSelector,(columnGrouping=>{var _columnGrouping$looku;return null!=(_columnGrouping$looku=null==columnGrouping?void 0:columnGrouping.lookup)?_columnGrouping$looku:{}})),gridColumnGroupsHeaderStructureSelector=createSelector_createSelector(gridColumnGroupingSelector,(columnGrouping=>{var _columnGrouping$heade;return null!=(_columnGrouping$heade=null==columnGrouping?void 0:columnGrouping.headerStructure)?_columnGrouping$heade:[]})),gridColumnGroupsHeaderMaxDepthSelector=createSelector_createSelector(gridColumnGroupingSelector,(columnGrouping=>{var _columnGrouping$maxDe;return null!=(_columnGrouping$maxDe=null==columnGrouping?void 0:columnGrouping.maxDepth)?_columnGrouping$maxDe:0})),gridRowsStateSelector=state=>state.rows,gridRowCountSelector=createSelector_createSelector(gridRowsStateSelector,(rows=>rows.totalRowCount)),gridRowsLoadingSelector=createSelector_createSelector(gridRowsStateSelector,(rows=>rows.loading)),gridTopLevelRowCountSelector=createSelector_createSelector(gridRowsStateSelector,(rows=>rows.totalTopLevelRowCount)),gridRowsLookupSelector=createSelector_createSelector(gridRowsStateSelector,(rows=>rows.dataRowIdToModelLookup)),gridRowsDataRowIdToIdLookupSelector=createSelector_createSelector(gridRowsStateSelector,(rows=>rows.dataRowIdToIdLookup)),gridRowTreeSelector=createSelector_createSelector(gridRowsStateSelector,(rows=>rows.tree)),gridRowGroupingNameSelector=createSelector_createSelector(gridRowsStateSelector,(rows=>rows.groupingName)),gridRowTreeDepthsSelector=createSelector_createSelector(gridRowsStateSelector,(rows=>rows.treeDepths)),gridRowMaximumTreeDepthSelector=createSelector_createSelector(gridRowsStateSelector,(rows=>{const entries=Object.entries(rows.treeDepths);return 0===entries.length?1:entries.filter((([,nodeCount])=>nodeCount>0)).map((([depth])=>Number(depth))).sort(((a,b)=>b-a))[0]+1})),gridDataRowIdsSelector=createSelector_createSelector(gridRowsStateSelector,(rows=>rows.dataRowIds)),gridAdditionalRowGroupsSelector=createSelector_createSelector(gridRowsStateSelector,(rows=>null==rows?void 0:rows.additionalRowGroups)),gridPinnedRowsSelector=createSelector_createSelector(gridAdditionalRowGroupsSelector,(additionalRowGroups=>{var _rawPinnedRows$bottom,_rawPinnedRows$top;const rawPinnedRows=null==additionalRowGroups?void 0:additionalRowGroups.pinnedRows;return{bottom:null==rawPinnedRows||null==(_rawPinnedRows$bottom=rawPinnedRows.bottom)?void 0:_rawPinnedRows$bottom.map((rowEntry=>{var _rowEntry$model;return{id:rowEntry.id,model:null!=(_rowEntry$model=rowEntry.model)?_rowEntry$model:{}}})),top:null==rawPinnedRows||null==(_rawPinnedRows$top=rawPinnedRows.top)?void 0:_rawPinnedRows$top.map((rowEntry=>{var _rowEntry$model2;return{id:rowEntry.id,model:null!=(_rowEntry$model2=rowEntry.model)?_rowEntry$model2:{}}}))}})),gridPinnedRowsCountSelector=createSelector_createSelector(gridPinnedRowsSelector,(pinnedRows=>{var _pinnedRows$top,_pinnedRows$bottom;return((null==pinnedRows||null==(_pinnedRows$top=pinnedRows.top)?void 0:_pinnedRows$top.length)||0)+((null==pinnedRows||null==(_pinnedRows$bottom=pinnedRows.bottom)?void 0:_pinnedRows$bottom.length)||0)}));var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const _excluded=["children","className"],GridRoot=react.forwardRef((function GridRoot(props,ref){const rootProps=(0,useGridRootProps.B)(),{children,className}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,_excluded),apiRef=useGridPrivateApiContext(),visibleColumns=useGridSelector(apiRef,gridVisibleColumnDefinitionsSelector),totalRowCount=useGridSelector(apiRef,gridRowCountSelector),densityValue=useGridSelector(apiRef,gridDensityValueSelector),headerGroupingMaxDepth=useGridSelector(apiRef,gridColumnGroupsHeaderMaxDepthSelector),rootContainerRef=react.useRef(null),handleRef=(0,useForkRef.Z)(rootContainerRef,ref),pinnedRowsCount=useGridSelector(apiRef,gridPinnedRowsCountSelector),ownerState=(0,esm_extends.Z)({},rootProps,{density:densityValue}),classes=(ownerState=>{const{autoHeight,density,classes}=ownerState,slots={root:["root",autoHeight&&"autoHeight",`root--density${(0,capitalize.Z)(density)}`,"withBorderColor"]};return(0,composeClasses.Z)(slots,getDataGridUtilityClass,classes)})(ownerState);apiRef.current.register("public",{rootElementRef:rootContainerRef});const[mountedState,setMountedState]=react.useState(!1);return(0,useEnhancedEffect.Z)((()=>{setMountedState(!0)}),[]),(0,useEnhancedEffect.Z)((()=>{mountedState&&apiRef.current.updateGridDimensionsRef()}),[apiRef,mountedState]),mountedState?(0,jsx_runtime.jsx)(GridRootStyles,(0,esm_extends.Z)({ref:handleRef,className:(0,clsx_m.Z)(className,classes.root),ownerState,role:"grid","aria-colcount":visibleColumns.length,"aria-rowcount":headerGroupingMaxDepth+1+pinnedRowsCount+totalRowCount,"aria-multiselectable":!rootProps.disableMultipleRowSelection,"aria-label":rootProps["aria-label"],"aria-labelledby":rootProps["aria-labelledby"]},other,{children})):null})),GridHeader=react.forwardRef((function GridHeader(props,ref){var _rootProps$slotProps,_rootProps$slotProps2;const rootProps=(0,useGridRootProps.B)();return(0,jsx_runtime.jsxs)("div",(0,esm_extends.Z)({ref},props,{children:[(0,jsx_runtime.jsx)(rootProps.slots.preferencesPanel,(0,esm_extends.Z)({},null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.preferencesPanel)),rootProps.slots.toolbar&&(0,jsx_runtime.jsx)(rootProps.slots.toolbar,(0,esm_extends.Z)({},null==(_rootProps$slotProps2=rootProps.slotProps)?void 0:_rootProps$slotProps2.toolbar))]}))}));var esm_styled=__webpack_require__("./node_modules/@mui/system/esm/styled.js");const GridMainContainer_useUtilityClasses=ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["main"]},getDataGridUtilityClass,classes)},GridMainContainerRoot=(0,esm_styled.Z)("div",{name:"MuiDataGrid",slot:"Main",overridesResolver:(props,styles)=>styles.main})((()=>({position:"relative",flexGrow:1,display:"flex",flexDirection:"column",overflow:"hidden"})));function GridMainContainer(props){const rootProps=(0,useGridRootProps.B)(),classes=GridMainContainer_useUtilityClasses(rootProps);return(0,jsx_runtime.jsx)(GridMainContainerRoot,{className:classes.root,ownerState:rootProps,children:props.children})}var useEventCallback=__webpack_require__("./node_modules/@mui/utils/esm/useEventCallback.js"),ownerWindow=__webpack_require__("./node_modules/@mui/utils/esm/ownerWindow.js");function createDetectElementResize(nonce,hostWindow){var resetTriggers=function resetTriggers(element){var triggers=element.__resizeTriggers__,expand=triggers.firstElementChild,contract=triggers.lastElementChild,expandChild=expand.firstElementChild;contract.scrollLeft=contract.scrollWidth,contract.scrollTop=contract.scrollHeight,expandChild.style.width=expand.offsetWidth+1+"px",expandChild.style.height=expand.offsetHeight+1+"px",expand.scrollLeft=expand.scrollWidth,expand.scrollTop=expand.scrollHeight},scrollListener=function scrollListener(e){if(!(e.target.className.indexOf("contract-trigger")<0&&e.target.className.indexOf("expand-trigger")<0)){var element=this;resetTriggers(this),this.__resizeRAF__&&hostWindow.cancelAnimationFrame(this.__resizeRAF__),this.__resizeRAF__=hostWindow.requestAnimationFrame((function(){(function checkTriggers(element){return element.offsetWidth!=element.__resizeLast__.width||element.offsetHeight!=element.__resizeLast__.height})(element)&&(element.__resizeLast__.width=element.offsetWidth,element.__resizeLast__.height=element.offsetHeight,element.__resizeListeners__.forEach((function(fn){fn.call(element,e)})))}))}},animation=!1,keyframeprefix="",animationstartevent="animationstart",domPrefixes="Webkit Moz O ms".split(" "),startEvents="webkitAnimationStart animationstart oAnimationStart MSAnimationStart".split(" "),elm=document.createElement("fakeelement");if(void 0!==elm.style.animationName&&(animation=!0),!1===animation)for(var i=0;i<domPrefixes.length;i++)if(void 0!==elm.style[domPrefixes[i]+"AnimationName"]){keyframeprefix="-"+domPrefixes[i].toLowerCase()+"-",animationstartevent=startEvents[i],animation=!0;break}var animationKeyframes="@"+keyframeprefix+"keyframes resizeanim { from { opacity: 0; } to { opacity: 0; } } ",animationStyle=keyframeprefix+"animation: 1ms resizeanim; ";return{addResizeListener:function addResizeListener(element,fn){if(!element.__resizeTriggers__){var doc=element.ownerDocument,elementStyle=hostWindow.getComputedStyle(element);elementStyle&&"static"==elementStyle.position&&(element.style.position="relative"),function createStyles(doc,root){if(!root.getElementById("muiDetectElementResize")){var css=(animationKeyframes||"")+".Mui-resizeTriggers { "+(animationStyle||"")+'visibility: hidden; opacity: 0; } .Mui-resizeTriggers, .Mui-resizeTriggers > div, .contract-trigger:before { content: " "; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .Mui-resizeTriggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',container="ShadowRoot"===root.constructor.name?root:doc.head||doc.getElementsByTagName("head")[0],style=doc.createElement("style");style.id="muiDetectElementResize",style.type="text/css",null!=nonce&&style.setAttribute("nonce",nonce),style.styleSheet?style.styleSheet.cssText=css:style.appendChild(doc.createTextNode(css)),container.appendChild(style)}}(doc,element.getRootNode()),element.__resizeLast__={},element.__resizeListeners__=[],(element.__resizeTriggers__=doc.createElement("div")).className="Mui-resizeTriggers",element.__resizeTriggers__.innerHTML='<div class="expand-trigger"><div></div></div><div class="contract-trigger"></div>',element.appendChild(element.__resizeTriggers__),resetTriggers(element),element.addEventListener("scroll",scrollListener,!0),animationstartevent&&(element.__resizeTriggers__.__animationListener__=function animationListener(e){"resizeanim"==e.animationName&&resetTriggers(element)},element.__resizeTriggers__.addEventListener(animationstartevent,element.__resizeTriggers__.__animationListener__))}element.__resizeListeners__.push(fn)},removeResizeListener:function removeResizeListener(element,fn){if(element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn),1),!element.__resizeListeners__.length){element.removeEventListener("scroll",scrollListener,!0),element.__resizeTriggers__.__animationListener__&&(element.__resizeTriggers__.removeEventListener(animationstartevent,element.__resizeTriggers__.__animationListener__),element.__resizeTriggers__.__animationListener__=null);try{element.__resizeTriggers__=!element.removeChild(element.__resizeTriggers__)}catch(e){}}}}}const GridAutoSizer_excluded=["children","defaultHeight","defaultWidth","disableHeight","disableWidth","nonce","onResize","style"],GridAutoSizer=react.forwardRef((function AutoSizer(props,ref){const{children,defaultHeight=null,defaultWidth=null,disableHeight=!1,disableWidth=!1,nonce,onResize,style}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridAutoSizer_excluded),[state,setState]=react.useState({height:defaultHeight,width:defaultWidth}),rootRef=react.useRef(null),parentElement=react.useRef(null),handleResize=(0,useEventCallback.Z)((()=>{if(parentElement.current){const height=parentElement.current.offsetHeight||0,width=parentElement.current.offsetWidth||0,computedStyle=(0,ownerWindow.Z)(parentElement.current).getComputedStyle(parentElement.current),paddingLeft=parseInt(computedStyle.paddingLeft,10)||0,paddingRight=parseInt(computedStyle.paddingRight,10)||0,newHeight=height-(parseInt(computedStyle.paddingTop,10)||0)-(parseInt(computedStyle.paddingBottom,10)||0),newWidth=width-paddingLeft-paddingRight;(!disableHeight&&state.height!==newHeight||!disableWidth&&state.width!==newWidth)&&(setState({height:newHeight,width:newWidth}),onResize&&onResize({height:newHeight,width:newWidth}))}}));(0,useEnhancedEffect.Z)((()=>{var _parentElement$curren;if(parentElement.current=rootRef.current.parentElement,!parentElement)return;const win=(0,ownerWindow.Z)(null!=(_parentElement$curren=parentElement.current)?_parentElement$curren:void 0),detectElementResize=createDetectElementResize(nonce,win);return detectElementResize.addResizeListener(parentElement.current,handleResize),handleResize(),()=>{detectElementResize.removeResizeListener(parentElement.current,handleResize)}}),[nonce,handleResize]);const handleRef=(0,useForkRef.Z)(rootRef,ref);return(0,jsx_runtime.jsx)("div",(0,esm_extends.Z)({ref:handleRef,style:(0,esm_extends.Z)({flex:disableHeight?0:"1 1 0px",overflow:disableHeight?"visible":"auto"},style)},other,{children:null===state.height&&null===state.width?null:children}))})),gridSortingStateSelector=state=>state.sorting,gridSortedRowIdsSelector=createSelector_createSelector(gridSortingStateSelector,(sortingState=>sortingState.sortedRows)),gridSortedRowEntriesSelector=createSelector_createSelector(gridSortedRowIdsSelector,gridRowsLookupSelector,((sortedIds,idRowsLookup)=>sortedIds.map((id=>{var _idRowsLookup$id;return{id,model:null!=(_idRowsLookup$id=idRowsLookup[id])?_idRowsLookup$id:{}}})))),gridSortModelSelector=createSelector_createSelector(gridSortingStateSelector,(sorting=>sorting.sortModel)),gridSortColumnLookupSelector=createSelector_createSelector(gridSortModelSelector,(sortModel=>sortModel.reduce(((res,sortItem,index)=>(res[sortItem.field]={sortDirection:sortItem.sort,sortIndex:sortModel.length>1?index+1:void 0},res)),{}))),gridFilterStateSelector=state=>state.filter,gridFilterModelSelector=createSelector_createSelector(gridFilterStateSelector,(filterState=>filterState.filterModel)),gridVisibleRowsLookupSelector=(createSelector_createSelector(gridFilterModelSelector,(filterModel=>filterModel.quickFilterValues)),createSelector_createSelector(gridFilterStateSelector,(filterState=>filterState.visibleRowsLookup))),gridFilteredRowsLookupSelector=createSelector_createSelector(gridFilterStateSelector,(filterState=>filterState.filteredRowsLookup)),gridExpandedSortedRowEntriesSelector=(createSelector_createSelector(gridFilterStateSelector,(filterState=>filterState.filteredDescendantCountLookup)),createSelector_createSelector(gridVisibleRowsLookupSelector,gridSortedRowEntriesSelector,((visibleRowsLookup,sortedRows)=>sortedRows.filter((row=>!1!==visibleRowsLookup[row.id]))))),gridExpandedSortedRowIdsSelector=createSelector_createSelector(gridExpandedSortedRowEntriesSelector,(visibleSortedRowEntries=>visibleSortedRowEntries.map((row=>row.id)))),gridFilteredSortedRowEntriesSelector=createSelector_createSelector(gridFilteredRowsLookupSelector,gridSortedRowEntriesSelector,((filteredRowsLookup,sortedRows)=>sortedRows.filter((row=>!1!==filteredRowsLookup[row.id])))),gridFilteredSortedRowIdsSelector=createSelector_createSelector(gridFilteredSortedRowEntriesSelector,(filteredSortedRowEntries=>filteredSortedRowEntries.map((row=>row.id)))),gridFilteredSortedTopLevelRowEntriesSelector=createSelector_createSelector(gridExpandedSortedRowEntriesSelector,gridRowTreeSelector,gridRowMaximumTreeDepthSelector,((visibleSortedRows,rowTree,rowTreeDepth)=>rowTreeDepth<2?visibleSortedRows:visibleSortedRows.filter((row=>{var _rowTree$row$id;return 0===(null==(_rowTree$row$id=rowTree[row.id])?void 0:_rowTree$row$id.depth)})))),gridExpandedRowCountSelector=createSelector_createSelector(gridExpandedSortedRowEntriesSelector,(visibleSortedRows=>visibleSortedRows.length)),gridFilteredTopLevelRowCountSelector=createSelector_createSelector(gridFilteredSortedTopLevelRowEntriesSelector,(visibleSortedTopLevelRows=>visibleSortedTopLevelRows.length)),gridFilterActiveItemsSelector=createSelector_createSelector(gridFilterModelSelector,gridColumnLookupSelector,((filterModel,columnLookup)=>{var _filterModel$items;return null==(_filterModel$items=filterModel.items)?void 0:_filterModel$items.filter((item=>{var _column$filterOperato,_item$value;if(!item.field)return!1;const column=columnLookup[item.field];if(null==column||!column.filterOperators||0===(null==column||null==(_column$filterOperato=column.filterOperators)?void 0:_column$filterOperato.length))return!1;const filterOperator=column.filterOperators.find((operator=>operator.value===item.operator));return!!filterOperator&&(!filterOperator.InputComponent||null!=item.value&&""!==(null==(_item$value=item.value)?void 0:_item$value.toString()))}))})),gridFilterActiveItemsLookupSelector=createSelector_createSelector(gridFilterActiveItemsSelector,(activeFilters=>activeFilters.reduce(((res,filterItem)=>(res[filterItem.field]?res[filterItem.field].push(filterItem):res[filterItem.field]=[filterItem],res)),{}))),gridFocusStateSelector=state=>state.focus,gridFocusCellSelector=createSelector_createSelector(gridFocusStateSelector,(focusState=>focusState.cell)),gridFocusColumnHeaderSelector=createSelector_createSelector(gridFocusStateSelector,(focusState=>focusState.columnHeader)),unstable_gridFocusColumnGroupHeaderSelector=createSelector_createSelector(gridFocusStateSelector,(focusState=>focusState.columnGroupHeader)),gridTabIndexStateSelector=state=>state.tabIndex,gridTabIndexCellSelector=createSelector_createSelector(gridTabIndexStateSelector,(state=>state.cell)),gridTabIndexColumnHeaderSelector=createSelector_createSelector(gridTabIndexStateSelector,(state=>state.columnHeader)),unstable_gridTabIndexColumnGroupHeaderSelector=createSelector_createSelector(gridTabIndexStateSelector,(state=>state.columnGroupHeader)),gridColumnMenuSelector=state=>state.columnMenu;function GridBody(props){const{children,VirtualScrollerComponent,ColumnHeadersProps}=props,apiRef=useGridPrivateApiContext(),rootProps=(0,useGridRootProps.B)(),visibleColumns=useGridSelector(apiRef,gridVisibleColumnDefinitionsSelector),filterColumnLookup=useGridSelector(apiRef,gridFilterActiveItemsLookupSelector),sortColumnLookup=useGridSelector(apiRef,gridSortColumnLookupSelector),columnPositions=useGridSelector(apiRef,gridColumnPositionsSelector),columnHeaderTabIndexState=useGridSelector(apiRef,gridTabIndexColumnHeaderSelector),cellTabIndexState=useGridSelector(apiRef,gridTabIndexCellSelector),columnGroupHeaderTabIndexState=useGridSelector(apiRef,unstable_gridTabIndexColumnGroupHeaderSelector),columnHeaderFocus=useGridSelector(apiRef,gridFocusColumnHeaderSelector),columnGroupHeaderFocus=useGridSelector(apiRef,unstable_gridFocusColumnGroupHeaderSelector),densityFactor=useGridSelector(apiRef,gridDensityFactorSelector),headerGroupingMaxDepth=useGridSelector(apiRef,gridColumnGroupsHeaderMaxDepthSelector),columnMenuState=useGridSelector(apiRef,gridColumnMenuSelector),columnVisibility=useGridSelector(apiRef,gridColumnVisibilityModelSelector),columnGroupsHeaderStructure=useGridSelector(apiRef,gridColumnGroupsHeaderStructureSelector),hasOtherElementInTabSequence=!(null===columnGroupHeaderTabIndexState&&null===columnHeaderTabIndexState&&null===cellTabIndexState),[isVirtualizationDisabled,setIsVirtualizationDisabled]=react.useState(rootProps.disableVirtualization),disableVirtualization=react.useCallback((()=>{setIsVirtualizationDisabled(!0)}),[]),enableVirtualization=react.useCallback((()=>{setIsVirtualizationDisabled(!1)}),[]);react.useEffect((()=>{setIsVirtualizationDisabled(rootProps.disableVirtualization)}),[rootProps.disableVirtualization]),apiRef.current.unstable_disableVirtualization=disableVirtualization,apiRef.current.unstable_enableVirtualization=enableVirtualization;const columnHeadersRef=react.useRef(null),columnsContainerRef=react.useRef(null),virtualScrollerRef=react.useRef(null);apiRef.current.register("private",{columnHeadersContainerElementRef:columnsContainerRef,columnHeadersElementRef:columnHeadersRef,virtualScrollerRef});const handleResize=react.useCallback((size=>{apiRef.current.publishEvent("resize",size)}),[apiRef]);return(0,jsx_runtime.jsxs)(GridMainContainer,{children:[(0,jsx_runtime.jsx)(rootProps.slots.columnHeaders,(0,esm_extends.Z)({ref:columnsContainerRef,innerRef:columnHeadersRef,visibleColumns,filterColumnLookup,sortColumnLookup,columnPositions,columnHeaderTabIndexState,columnGroupHeaderTabIndexState,columnHeaderFocus,columnGroupHeaderFocus,densityFactor,headerGroupingMaxDepth,columnMenuState,columnVisibility,columnGroupsHeaderStructure,hasOtherElementInTabSequence},ColumnHeadersProps)),(0,jsx_runtime.jsx)(GridAutoSizer,{nonce:rootProps.nonce,disableHeight:rootProps.autoHeight,onResize:handleResize,children:(0,jsx_runtime.jsx)(VirtualScrollerComponent,{ref:virtualScrollerRef,disableVirtualization:isVirtualizationDisabled})}),children]})}function GridFooterPlaceholder(){var _rootProps$slotProps;const rootProps=(0,useGridRootProps.B)();return rootProps.hideFooter?null:(0,jsx_runtime.jsx)(rootProps.slots.footer,(0,esm_extends.Z)({},null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.footer))}var GridApiContext=__webpack_require__("./node_modules/@mui/x-data-grid/components/GridApiContext.js"),GridRootPropsContext=__webpack_require__("./node_modules/@mui/x-data-grid/context/GridRootPropsContext.js");function GridContextProvider({privateApiRef,props,children}){const apiRef=react.useRef(privateApiRef.current.getPublicApi());return(0,jsx_runtime.jsx)(GridRootPropsContext.G.Provider,{value:props,children:(0,jsx_runtime.jsx)(GridPrivateApiContext.Provider,{value:privateApiRef,children:(0,jsx_runtime.jsx)(GridApiContext.r.Provider,{value:apiRef,children})})})}function isFunction(value){return"function"==typeof value}function isObject(value){return"object"==typeof value&&null!==value}function escapeRegExp(value){return value.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&")}const clamp=(value,min,max)=>Math.max(min,Math.min(max,value));function isDeepEqual(a,b){if(a===b)return!0;if(a&&b&&"object"==typeof a&&"object"==typeof b){if(a.constructor!==b.constructor)return!1;if(Array.isArray(a)){const length=a.length;if(length!==b.length)return!1;for(let i=0;i<length;i+=1)if(!isDeepEqual(a[i],b[i]))return!1;return!0}if(a instanceof Map&&b instanceof Map){if(a.size!==b.size)return!1;const entriesA=Array.from(a.entries());for(let i=0;i<entriesA.length;i+=1)if(!b.has(entriesA[i][0]))return!1;for(let i=0;i<entriesA.length;i+=1){const entryA=entriesA[i];if(!isDeepEqual(entryA[1],b.get(entryA[0])))return!1}return!0}if(a instanceof Set&&b instanceof Set){if(a.size!==b.size)return!1;const entries=Array.from(a.entries());for(let i=0;i<entries.length;i+=1)if(!b.has(entries[i][0]))return!1;return!0}if(ArrayBuffer.isView(a)&&ArrayBuffer.isView(b)){const length=a.length;if(length!==b.length)return!1;for(let i=0;i<length;i+=1)if(a[i]!==b[i])return!1;return!0}if(a.constructor===RegExp)return a.source===b.source&&a.flags===b.flags;if(a.valueOf!==Object.prototype.valueOf)return a.valueOf()===b.valueOf();if(a.toString!==Object.prototype.toString)return a.toString()===b.toString();const keys=Object.keys(a),length=keys.length;if(length!==Object.keys(b).length)return!1;for(let i=0;i<length;i+=1)if(!Object.prototype.hasOwnProperty.call(b,keys[i]))return!1;for(let i=0;i<length;i+=1){const key=keys[i];if(!isDeepEqual(a[key],b[key]))return!1}return!0}return a!=a&&b!=b}function randomNumberBetween(seed,min,max){const random=function mulberry32(a){return()=>{let t=a+=1831565813;return t=Math.imul(t^t>>>15,1|t),t^=t+Math.imul(t^t>>>7,61|t),((t^t>>>14)>>>0)/4294967296}}(seed);return()=>min+(max-min)*random()}function deepClone(obj){return"function"==typeof structuredClone?structuredClone(obj):JSON.parse(JSON.stringify(obj))}function useGridApiMethod(privateApiRef,apiMethods,visibility){const apiMethodsRef=react.useRef(apiMethods),[apiMethodsNames]=react.useState(Object.keys(apiMethods)),installMethods=react.useCallback((()=>{privateApiRef.current&&apiMethodsNames.forEach((methodName=>{privateApiRef.current.hasOwnProperty(methodName)||privateApiRef.current.register(visibility,{[methodName]:(...args)=>(0,apiMethodsRef.current[methodName])(...args)})}))}),[apiMethodsNames,privateApiRef,visibility]);react.useEffect((()=>{apiMethodsRef.current=apiMethods}),[apiMethods]),react.useEffect((()=>{installMethods()}),[installMethods]),installMethods()}const forceDebug=function localStorageAvailable(){try{const key="__some_random_key_you_are_not_going_to_use__";return window.localStorage.setItem(key,key),window.localStorage.removeItem(key),!0}catch(err){return!1}}()&&null!=window.localStorage.getItem("DEBUG"),noop=()=>{},noopLogger={debug:noop,info:noop,warn:noop,error:noop},LOG_LEVELS=["debug","info","warn","error"];function getAppender(name,logLevel,appender=console){const minLogLevelIdx=LOG_LEVELS.indexOf(logLevel);if(-1===minLogLevelIdx)throw new Error(`MUI: Log level ${logLevel} not recognized.`);return LOG_LEVELS.reduce(((loggerObj,method,idx)=>(loggerObj[method]=idx>=minLogLevelIdx?(...args)=>{const[message,...other]=args;appender[method](`MUI: ${name} - ${message}`,...other)}:noop,loggerObj)),{})}class TimerBasedCleanupTracking{constructor(timeout=1e3){this.timeouts=new Map,this.cleanupTimeout=1e3,this.cleanupTimeout=timeout}register(object,unsubscribe,unregisterToken){this.timeouts||(this.timeouts=new Map);const timeout=setTimeout((()=>{"function"==typeof unsubscribe&&unsubscribe(),this.timeouts.delete(unregisterToken.cleanupToken)}),this.cleanupTimeout);this.timeouts.set(unregisterToken.cleanupToken,timeout)}unregister(unregisterToken){const timeout=this.timeouts.get(unregisterToken.cleanupToken);timeout&&(this.timeouts.delete(unregisterToken.cleanupToken),clearTimeout(timeout))}reset(){this.timeouts&&(this.timeouts.forEach(((value,key)=>{this.unregister({cleanupToken:key})})),this.timeouts=void 0)}}class FinalizationRegistryBasedCleanupTracking{constructor(){this.registry=new FinalizationRegistry((unsubscribe=>{"function"==typeof unsubscribe&&unsubscribe()}))}register(object,unsubscribe,unregisterToken){this.registry.register(object,unsubscribe,unregisterToken)}unregister(unregisterToken){this.registry.unregister(unregisterToken)}reset(){}}var GridSignature=function(GridSignature){return GridSignature.DataGrid="DataGrid",GridSignature.DataGridPro="DataGridPro",GridSignature}(GridSignature||{});class ObjectToBeRetainedByReact{}const registryContainer={registry:null},useGridApiEventHandler=function createUseGridApiEventHandler(registryContainer){let cleanupTokensCounter=0;return function useGridApiEventHandler(apiRef,eventName,handler,options){null===registryContainer.registry&&(registryContainer.registry="undefined"!=typeof FinalizationRegistry?new FinalizationRegistryBasedCleanupTracking:new TimerBasedCleanupTracking);const[objectRetainedByReact]=react.useState(new ObjectToBeRetainedByReact),subscription=react.useRef(null),handlerRef=react.useRef();handlerRef.current=handler;const cleanupTokenRef=react.useRef(null);if(!subscription.current&&handlerRef.current){const enhancedHandler=(params,event,details)=>{var _handlerRef$current;event.defaultMuiPrevented||(null==(_handlerRef$current=handlerRef.current)||_handlerRef$current.call(handlerRef,params,event,details))};subscription.current=apiRef.current.subscribeEvent(eventName,enhancedHandler,options),cleanupTokensCounter+=1,cleanupTokenRef.current={cleanupToken:cleanupTokensCounter},registryContainer.registry.register(objectRetainedByReact,(()=>{var _subscription$current;null==(_subscription$current=subscription.current)||_subscription$current.call(subscription),subscription.current=null,cleanupTokenRef.current=null}),cleanupTokenRef.current)}else!handlerRef.current&&subscription.current&&(subscription.current(),subscription.current=null,cleanupTokenRef.current&&(registryContainer.registry.unregister(cleanupTokenRef.current),cleanupTokenRef.current=null));react.useEffect((()=>{if(!subscription.current&&handlerRef.current){const enhancedHandler=(params,event,details)=>{var _handlerRef$current2;event.defaultMuiPrevented||(null==(_handlerRef$current2=handlerRef.current)||_handlerRef$current2.call(handlerRef,params,event,details))};subscription.current=apiRef.current.subscribeEvent(eventName,enhancedHandler,options)}return cleanupTokenRef.current&&registryContainer.registry&&(registryContainer.registry.unregister(cleanupTokenRef.current),cleanupTokenRef.current=null),()=>{var _subscription$current2;null==(_subscription$current2=subscription.current)||_subscription$current2.call(subscription),subscription.current=null}}),[apiRef,eventName,options])}}(registryContainer),optionsSubscriberOptions={isFirst:!0};function useGridApiOptionHandler(apiRef,eventName,handler){useGridApiEventHandler(apiRef,eventName,handler,optionsSubscriberOptions)}class EventManager{constructor(){this.maxListeners=10,this.warnOnce=!1,this.events={}}on(eventName,listener,options={}){let collection=this.events[eventName];collection||(collection={highPriority:new Map,regular:new Map},this.events[eventName]=collection),options.isFirst?collection.highPriority.set(listener,!0):collection.regular.set(listener,!0)}removeListener(eventName,listener){this.events[eventName]&&(this.events[eventName].regular.delete(listener),this.events[eventName].highPriority.delete(listener))}removeAllListeners(){this.events={}}emit(eventName,...args){const collection=this.events[eventName];if(!collection)return;const highPriorityListeners=Array.from(collection.highPriority.keys()),regularListeners=Array.from(collection.regular.keys());for(let i=highPriorityListeners.length-1;i>=0;i-=1){const listener=highPriorityListeners[i];collection.highPriority.has(listener)&&listener.apply(this,args)}for(let i=0;i<regularListeners.length;i+=1){const listener=regularListeners[i];collection.regular.has(listener)&&listener.apply(this,args)}}once(eventName,listener){const that=this;this.on(eventName,(function oneTimeListener(...args){that.removeListener(eventName,oneTimeListener),listener.apply(that,args)}))}}let globalId=0;function useGridApiInitialization(inputApiRef,props){const publicApiRef=react.useRef();publicApiRef.current||(publicApiRef.current={state:{},instanceId:globalId},globalId+=1);const privateApiRef=react.useRef();privateApiRef.current||(privateApiRef.current=(publicApi=>{const privateOnlyApi={getPublicApi:()=>publicApi,register:(visibility,methods)=>{Object.keys(methods).forEach((methodName=>{"public"===visibility?publicApi[methodName]=methods[methodName]:privateOnlyApi[methodName]=methods[methodName]}))}};return new Proxy(publicApi,{get:(obj,prop)=>prop in obj?obj[prop]:privateOnlyApi[prop],set:(obj,prop,value)=>(obj[prop]=value,!0)})})(publicApiRef.current),privateApiRef.current.register("private",{caches:{},eventManager:new EventManager})),react.useImperativeHandle(inputApiRef,(()=>publicApiRef.current),[publicApiRef]);const publishEvent=react.useCallback(((...args)=>{const[name,params,event={}]=args;if(event.defaultMuiPrevented=!1,(event=>void 0!==event.isPropagationStopped)(event)&&event.isPropagationStopped())return;const details=props.signature===GridSignature.DataGridPro?{api:privateApiRef.current.getPublicApi()}:{};privateApiRef.current.eventManager.emit(name,params,event,details)}),[privateApiRef,props.signature]),subscribeEvent=react.useCallback(((event,handler,options)=>{privateApiRef.current.eventManager.on(event,handler,options);const api=privateApiRef.current;return()=>{api.eventManager.removeListener(event,handler)}}),[privateApiRef]);return useGridApiMethod(privateApiRef,{subscribeEvent,publishEvent},"public"),react.useEffect((()=>{const api=privateApiRef.current;return()=>{var cacheKey;void 0!==(cacheKey=api.instanceId)?cacheContainer.cache&&cacheContainer.cache[cacheKey]&&delete cacheContainer.cache[cacheKey]:cacheContainer.cache=null,api.publishEvent("unmount")}}),[privateApiRef]),privateApiRef}function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!==_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!==_typeof(res))return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"===_typeof(key)?key:String(key)}const GRID_STRATEGIES_PROCESSORS={rowTreeCreation:"rowTree",filtering:"rowTree",sorting:"rowTree"},useGridStateInitialization_excluded=["stateId"],useGridInitialization=(inputApiRef,props)=>{const privateApiRef=useGridApiInitialization(inputApiRef,props);return((apiRef,props)=>{useGridApiMethod(apiRef,{getLogger:react.useCallback((name=>forceDebug?getAppender(name,"debug",props.logger):props.logLevel?getAppender(name,props.logLevel.toString(),props.logger):noopLogger),[props.logLevel,props.logger])},"private")})(privateApiRef,props),((apiRef,props)=>{const controlStateMapRef=react.useRef({}),[,rawForceUpdate]=react.useState(),registerControlState=react.useCallback((controlStateItem=>{const{stateId}=controlStateItem,others=(0,objectWithoutPropertiesLoose.Z)(controlStateItem,useGridStateInitialization_excluded);controlStateMapRef.current[stateId]=(0,esm_extends.Z)({},others,{stateId})}),[]),setState=react.useCallback(((state,reason)=>{let newState;if(newState=isFunction(state)?state(apiRef.current.state):state,apiRef.current.state===newState)return!1;let ignoreSetState=!1;const updatedControlStateIds=[];if(Object.keys(controlStateMapRef.current).forEach((stateId=>{const controlState=controlStateMapRef.current[stateId],oldSubState=controlState.stateSelector(apiRef.current.state,apiRef.current.instanceId),newSubState=controlState.stateSelector(newState,apiRef.current.instanceId);newSubState!==oldSubState&&(updatedControlStateIds.push({stateId:controlState.stateId,hasPropChanged:newSubState!==controlState.propModel}),void 0!==controlState.propModel&&newSubState!==controlState.propModel&&(ignoreSetState=!0))})),updatedControlStateIds.length>1)throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map((el=>el.stateId)).join(", ")} in the same transaction.`);if(ignoreSetState||(apiRef.current.state=newState,apiRef.current.publishEvent&&apiRef.current.publishEvent("stateChange",newState)),1===updatedControlStateIds.length){const{stateId,hasPropChanged}=updatedControlStateIds[0],controlState=controlStateMapRef.current[stateId],model=controlState.stateSelector(newState,apiRef.current.instanceId);if(controlState.propOnChange&&hasPropChanged){const details=props.signature===GridSignature.DataGridPro?{api:apiRef.current,reason}:{reason};controlState.propOnChange(model,details)}ignoreSetState||apiRef.current.publishEvent(controlState.changeEvent,model,{reason})}return!ignoreSetState}),[apiRef,props.signature]),updateControlState=react.useCallback(((key,state,reason)=>apiRef.current.setState((previousState=>(0,esm_extends.Z)({},previousState,{[key]:state(previousState[key])})),reason)),[apiRef]),forceUpdate=react.useCallback((()=>rawForceUpdate((()=>apiRef.current.state))),[apiRef]),privateStateApi={updateControlState,registerControlState};useGridApiMethod(apiRef,{setState,forceUpdate},"public"),useGridApiMethod(apiRef,privateStateApi,"private")})(privateApiRef,props),(apiRef=>{const processorsCache=react.useRef({}),runAppliers=react.useCallback((groupCache=>{groupCache&&Object.values(groupCache.appliers).forEach((callback=>{callback()}))}),[]),registerPipeProcessor=react.useCallback(((group,id,processor)=>{processorsCache.current[group]||(processorsCache.current[group]={processors:new Map,appliers:{}});const groupCache=processorsCache.current[group];return groupCache.processors.get(id)!==processor&&(groupCache.processors.set(id,processor),runAppliers(groupCache)),()=>{processorsCache.current[group].processors.set(id,null)}}),[runAppliers]),registerPipeApplier=react.useCallback(((group,id,applier)=>(processorsCache.current[group]||(processorsCache.current[group]={processors:new Map,appliers:{}}),processorsCache.current[group].appliers[id]=applier,()=>{const _appliers=processorsCache.current[group].appliers,otherAppliers=(0,objectWithoutPropertiesLoose.Z)(_appliers,[id].map(_toPropertyKey));processorsCache.current[group].appliers=otherAppliers})),[]),requestPipeProcessorsApplication=react.useCallback((group=>{const groupCache=processorsCache.current[group];runAppliers(groupCache)}),[runAppliers]),preProcessingPublicApi={unstable_applyPipeProcessors:react.useCallback(((...args)=>{const[group,value,context]=args;return processorsCache.current[group]?Array.from(processorsCache.current[group].processors.values()).reduce(((acc,preProcessor)=>preProcessor?preProcessor(acc,context):acc),value):value}),[])};useGridApiMethod(apiRef,{registerPipeProcessor,registerPipeApplier,requestPipeProcessorsApplication},"private"),useGridApiMethod(apiRef,preProcessingPublicApi,"public")})(privateApiRef),(apiRef=>{const availableStrategies=react.useRef(new Map),strategiesCache=react.useRef({}),registerStrategyProcessor=react.useCallback(((strategyName,processorName,processor)=>{const cleanup=()=>{const _ref=strategiesCache.current[processorName],otherProcessors=(0,objectWithoutPropertiesLoose.Z)(_ref,[strategyName].map(_toPropertyKey));strategiesCache.current[processorName]=otherProcessors};strategiesCache.current[processorName]||(strategiesCache.current[processorName]={});const groupPreProcessors=strategiesCache.current[processorName],previousProcessor=groupPreProcessors[strategyName];return groupPreProcessors[strategyName]=processor,previousProcessor&&previousProcessor!==processor?(strategyName===apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])&&apiRef.current.publishEvent("activeStrategyProcessorChange",processorName),cleanup):cleanup}),[apiRef]),applyStrategyProcessor=react.useCallback(((processorName,params)=>{const activeStrategy=apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);if(null==activeStrategy)throw new Error("Can't apply a strategy processor before defining an active strategy");const groupCache=strategiesCache.current[processorName];if(!groupCache||!groupCache[activeStrategy])throw new Error(`No processor found for processor "${processorName}" on strategy "${activeStrategy}"`);return(0,groupCache[activeStrategy])(params)}),[apiRef]),getActiveStrategy=react.useCallback((strategyGroup=>{var _availableStrategyEnt;const availableStrategyEntry=Array.from(availableStrategies.current.entries()).find((([,strategy])=>strategy.group===strategyGroup&&strategy.isAvailable()));return null!=(_availableStrategyEnt=null==availableStrategyEntry?void 0:availableStrategyEntry[0])?_availableStrategyEnt:"none"}),[]),setStrategyAvailability=react.useCallback(((strategyGroup,strategyName,isAvailable)=>{availableStrategies.current.set(strategyName,{group:strategyGroup,isAvailable}),apiRef.current.publishEvent("strategyAvailabilityChange")}),[apiRef]);useGridApiMethod(apiRef,{registerStrategyProcessor,applyStrategyProcessor,getActiveStrategy,setStrategyAvailability},"private")})(privateApiRef),((apiRef,props)=>{const getLocaleText=react.useCallback((key=>{if(null==props.localeText[key])throw new Error(`Missing translation for key ${key}.`);return props.localeText[key]}),[props.localeText]);apiRef.current.register("public",{getLocaleText})})(privateApiRef,props),privateApiRef},useGridInitializeState=(initializer,privateApiRef,props)=>{const isInitialized=react.useRef(!1);isInitialized.current||(privateApiRef.current.state=initializer(privateApiRef.current.state,props,privateApiRef),isInitialized.current=!0)};function useGridLogger(privateApiRef,name){const logger=react.useRef(null);if(logger.current)return logger.current;const newLogger=privateApiRef.current.getLogger(name);return logger.current=newLogger,newLogger}function writeToClipboardPolyfill(data){const span=document.createElement("span");span.style.whiteSpace="pre",span.style.userSelect="all",span.style.opacity="0px",span.textContent=data,document.body.appendChild(span);const range=document.createRange();range.selectNode(span);const selection=window.getSelection();selection.removeAllRanges(),selection.addRange(range);try{document.execCommand("copy")}finally{document.body.removeChild(span)}}const useGridClipboard=apiRef=>{const copySelectedRowsToClipboard=react.useCallback((()=>{if(0===apiRef.current.getSelectedRows().size)return;const data=apiRef.current.getDataAsCsv({includeHeaders:!1,delimiter:"\t"});navigator.clipboard?navigator.clipboard.writeText(data).catch((()=>{writeToClipboardPolyfill(data)})):writeToClipboardPolyfill(data)}),[apiRef]),handleKeydown=react.useCallback((event=>{const isModifierKeyPressed=event.ctrlKey||event.metaKey;"C"===String.fromCharCode(event.keyCode)&&isModifierKeyPressed&&(function hasNativeSelection(element){var _window$getSelection;return!(null==(_window$getSelection=window.getSelection())||!_window$getSelection.toString())||!!(element&&(element.selectionEnd||0)-(element.selectionStart||0)>0)}(event.target)||apiRef.current.unstable_copySelectedRowsToClipboard())}),[apiRef]);((apiRef,ref,eventName,handler,options)=>{const logger=useGridLogger(apiRef,"useNativeEventListener"),[added,setAdded]=react.useState(!1),handlerRef=react.useRef(handler),wrapHandler=react.useCallback((event=>handlerRef.current&&handlerRef.current(event)),[]);react.useEffect((()=>{handlerRef.current=handler}),[handler]),react.useEffect((()=>{let targetElement;if(targetElement=isFunction(ref)?ref():ref&&ref.current?ref.current:null,targetElement&&eventName&&!added){logger.debug(`Binding native ${eventName} event`),targetElement.addEventListener(eventName,wrapHandler,options);const boundElem=targetElement;setAdded(!0);const unsubscribe=()=>{logger.debug(`Clearing native ${eventName} event`),boundElem.removeEventListener(eventName,wrapHandler,options)};apiRef.current.subscribeEvent("unmount",unsubscribe)}}),[ref,wrapHandler,eventName,added,logger,options,apiRef])})(apiRef,apiRef.current.rootElementRef,"keydown",handleKeydown);useGridApiMethod(apiRef,{unstable_copySelectedRowsToClipboard:copySelectedRowsToClipboard},"public")},columnMenuStateInitializer=state=>(0,esm_extends.Z)({},state,{columnMenu:{open:!1}}),useFirstRender=callback=>{const isFirstRender=react.useRef(!0);isFirstRender.current&&(isFirstRender.current=!1,callback())},useGridRegisterPipeProcessor=(apiRef,group,callback)=>{const cleanup=react.useRef(),id=react.useRef(`mui-${Math.round(1e9*Math.random())}`),registerPreProcessor=react.useCallback((()=>{cleanup.current=apiRef.current.registerPipeProcessor(group,id.current,callback)}),[apiRef,callback,group]);useFirstRender((()=>{registerPreProcessor()}));const isFirstRender=react.useRef(!0);react.useEffect((()=>(isFirstRender.current?isFirstRender.current=!1:registerPreProcessor(),()=>{cleanup.current&&(cleanup.current(),cleanup.current=null)})),[registerPreProcessor])},useGridRegisterPipeApplier=(apiRef,group,callback)=>{const cleanup=react.useRef(),id=react.useRef(`mui-${Math.round(1e9*Math.random())}`),registerPreProcessor=react.useCallback((()=>{cleanup.current=apiRef.current.registerPipeApplier(group,id.current,callback)}),[apiRef,callback,group]);useFirstRender((()=>{registerPreProcessor()}));const isFirstRender=react.useRef(!0);react.useEffect((()=>(isFirstRender.current?isFirstRender.current=!1:registerPreProcessor(),()=>{cleanup.current&&(cleanup.current(),cleanup.current=null)})),[registerPreProcessor])};var InputBase=__webpack_require__("./node_modules/@mui/material/InputBase/InputBase.js"),utils_useGridApiContext=__webpack_require__("./node_modules/@mui/x-data-grid/hooks/utils/useGridApiContext.js");const GridEditInputCell_excluded=["id","value","formattedValue","api","field","row","rowNode","colDef","cellMode","isEditable","tabIndex","hasFocus","isValidating","debounceMs","isProcessingProps","onValueChange"],GridEditInputCellRoot=(0,styled.ZP)(InputBase.ZP,{name:"MuiDataGrid",slot:"EditInputCell",overridesResolver:(props,styles)=>styles.editInputCell})((({theme})=>(0,esm_extends.Z)({},theme.typography.body2,{padding:"1px 0","& input":{padding:"0 16px",height:"100%"}}))),GridEditInputCell=react.forwardRef(((props,ref)=>{const rootProps=(0,useGridRootProps.B)(),{id,value,field,colDef,hasFocus,debounceMs=200,isProcessingProps,onValueChange}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridEditInputCell_excluded),apiRef=(0,utils_useGridApiContext.l)(),inputRef=react.useRef(),[valueState,setValueState]=react.useState(value),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["editInputCell"]},getDataGridUtilityClass,classes)})(rootProps),handleChange=react.useCallback((async event=>{const newValue=event.target.value;onValueChange&&await onValueChange(event,newValue);const column=apiRef.current.getColumn(field);let parsedValue=newValue;column.valueParser&&(parsedValue=column.valueParser(newValue,apiRef.current.getCellParams(id,field))),setValueState(parsedValue),apiRef.current.setEditCellValue({id,field,value:parsedValue,debounceMs,unstable_skipValueParser:!0},event)}),[apiRef,debounceMs,field,id,onValueChange]),meta=apiRef.current.unstable_getEditCellMeta?apiRef.current.unstable_getEditCellMeta(id,field):{};return react.useEffect((()=>{"debouncedSetEditCellValue"!==meta.changeReason&&setValueState(value)}),[meta.changeReason,value]),(0,useEnhancedEffect.Z)((()=>{hasFocus&&inputRef.current.focus()}),[hasFocus]),(0,jsx_runtime.jsx)(GridEditInputCellRoot,(0,esm_extends.Z)({ref,inputRef,className:classes.root,ownerState:rootProps,fullWidth:!0,type:"number"===colDef.type?colDef.type:"text",value:null!=valueState?valueState:"",onChange:handleChange,endAdornment:isProcessingProps?(0,jsx_runtime.jsx)(rootProps.slots.loadIcon,{}):void 0},other))}));var gridSortingUtils=__webpack_require__("./node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js"),useId=__webpack_require__("./node_modules/@mui/utils/esm/useId.js");const GridFilterInputValue_excluded=["item","applyValue","type","apiRef","focusElementRef"];function GridFilterInputValue(props){var _item$value,_rootProps$slotProps;const{item,applyValue,type,apiRef,focusElementRef}=props,others=(0,objectWithoutPropertiesLoose.Z)(props,GridFilterInputValue_excluded),filterTimeout=react.useRef(),[filterValueState,setFilterValueState]=react.useState(null!=(_item$value=item.value)?_item$value:""),[applying,setIsApplying]=react.useState(!1),id=(0,useId.Z)(),rootProps=(0,useGridRootProps.B)(),onFilterChange=react.useCallback((event=>{const{value}=event.target;clearTimeout(filterTimeout.current),setFilterValueState(String(value)),setIsApplying(!0),filterTimeout.current=setTimeout((()=>{applyValue((0,esm_extends.Z)({},item,{value})),setIsApplying(!1)}),500)}),[applyValue,item]);react.useEffect((()=>()=>{clearTimeout(filterTimeout.current)}),[]),react.useEffect((()=>{var _item$value2;const itemValue=null!=(_item$value2=item.value)?_item$value2:"";setFilterValueState(String(itemValue))}),[item.value]);const InputProps=applying?{endAdornment:(0,jsx_runtime.jsx)(rootProps.slots.loadIcon,{})}:others.InputProps;return(0,jsx_runtime.jsx)(rootProps.slots.baseTextField,(0,esm_extends.Z)({id,label:apiRef.current.getLocaleText("filterPanelInputLabel"),placeholder:apiRef.current.getLocaleText("filterPanelInputPlaceholder"),value:filterValueState,onChange:onFilterChange,variant:"standard",type:type||"text",InputProps,InputLabelProps:{shrink:!0},inputRef:focusElementRef},others,null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.baseTextField))}var Autocomplete=__webpack_require__("./node_modules/@mui/material/Autocomplete/Autocomplete.js"),Chip=__webpack_require__("./node_modules/@mui/material/Chip/Chip.js");const GridFilterInputMultipleValue_excluded=["item","applyValue","type","apiRef","focusElementRef","color","error","helperText","size","variant"];function GridFilterInputMultipleValue(props){const{item,applyValue,type,apiRef,focusElementRef,color,error,helperText,size,variant}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridFilterInputMultipleValue_excluded),TextFieldProps={color,error,helperText,size,variant},[filterValueState,setFilterValueState]=react.useState(item.value||[]),id=(0,useId.Z)(),rootProps=(0,useGridRootProps.B)();react.useEffect((()=>{var _item$value;const itemValue=null!=(_item$value=item.value)?_item$value:[];setFilterValueState(itemValue.map(String))}),[item.value]);const handleChange=react.useCallback(((event,value)=>{setFilterValueState(value.map(String)),applyValue((0,esm_extends.Z)({},item,{value:[...value]}))}),[applyValue,item]);return(0,jsx_runtime.jsx)(Autocomplete.Z,(0,esm_extends.Z)({multiple:!0,freeSolo:!0,options:[],filterOptions:(options,params)=>{const{inputValue}=params;return null==inputValue||""===inputValue?[]:[inputValue]},id,value:filterValueState,onChange:handleChange,renderTags:(value,getTagProps)=>value.map(((option,index)=>(0,jsx_runtime.jsx)(Chip.Z,(0,esm_extends.Z)({variant:"outlined",size:"small",label:option},getTagProps({index}))))),renderInput:params=>{var _rootProps$slotProps;return(0,jsx_runtime.jsx)(rootProps.slots.baseTextField,(0,esm_extends.Z)({},params,{label:apiRef.current.getLocaleText("filterPanelInputLabel"),placeholder:apiRef.current.getLocaleText("filterPanelInputPlaceholder"),InputLabelProps:(0,esm_extends.Z)({},params.InputLabelProps,{shrink:!0}),inputRef:focusElementRef,type:type||"text"},TextFieldProps,null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.baseTextField))}},other))}const GRID_STRING_COL_DEF={width:100,minWidth:50,maxWidth:1/0,hideable:!0,sortable:!0,resizable:!0,filterable:!0,groupable:!0,pinnable:!0,aggregable:!0,editable:!1,sortComparator:gridSortingUtils.Id,type:"string",align:"left",filterOperators:((disableTrim=!1)=>[{value:"contains",getApplyFilterFn:filterItem=>{if(!filterItem.value)return null;const filterItemValue=disableTrim?filterItem.value:filterItem.value.trim(),filterRegex=new RegExp(escapeRegExp(filterItemValue),"i");return({value})=>null!=value&&filterRegex.test(value.toString())},InputComponent:GridFilterInputValue},{value:"equals",getApplyFilterFn:filterItem=>{if(!filterItem.value)return null;const filterItemValue=disableTrim?filterItem.value:filterItem.value.trim(),collator=new Intl.Collator(void 0,{sensitivity:"base",usage:"search"});return({value})=>null!=value&&0===collator.compare(filterItemValue,value.toString())},InputComponent:GridFilterInputValue},{value:"startsWith",getApplyFilterFn:filterItem=>{if(!filterItem.value)return null;const filterItemValue=disableTrim?filterItem.value:filterItem.value.trim(),filterRegex=new RegExp(`^${escapeRegExp(filterItemValue)}.*$`,"i");return({value})=>null!=value&&filterRegex.test(value.toString())},InputComponent:GridFilterInputValue},{value:"endsWith",getApplyFilterFn:filterItem=>{if(!filterItem.value)return null;const filterItemValue=disableTrim?filterItem.value:filterItem.value.trim(),filterRegex=new RegExp(`.*${escapeRegExp(filterItemValue)}$`,"i");return({value})=>null!=value&&filterRegex.test(value.toString())},InputComponent:GridFilterInputValue},{value:"isEmpty",getApplyFilterFn:()=>({value})=>""===value||null==value,requiresFilterValue:!1},{value:"isNotEmpty",getApplyFilterFn:()=>({value})=>""!==value&&null!=value,requiresFilterValue:!1},{value:"isAnyOf",getApplyFilterFn:filterItem=>{if(!Array.isArray(filterItem.value)||0===filterItem.value.length)return null;const filterItemValue=disableTrim?filterItem.value:filterItem.value.map((val=>val.trim())),collator=new Intl.Collator(void 0,{sensitivity:"base",usage:"search"});return({value})=>null!=value&&filterItemValue.some((filterValue=>0===collator.compare(filterValue,value.toString()||"")))},InputComponent:GridFilterInputMultipleValue}])(),renderEditCell:params=>(0,jsx_runtime.jsx)(GridEditInputCell,(0,esm_extends.Z)({},params)),getApplyQuickFilterFn:value=>{if(!value)return null;const filterRegex=new RegExp(escapeRegExp(value),"i");return({formattedValue:columnValue})=>null!=columnValue&&filterRegex.test(columnValue.toString())}},parseNumericValue=value=>null==value?null:Number(value),GRID_NUMERIC_COL_DEF=(0,esm_extends.Z)({},GRID_STRING_COL_DEF,{type:"number",align:"right",headerAlign:"right",sortComparator:gridSortingUtils.GH,valueParser:value=>""===value?null:Number(value),valueFormatter:({value})=>function isNumber(value){return"number"==typeof value}(value)?value.toLocaleString():value||"",filterOperators:[{label:"=",value:"=",getApplyFilterFn:filterItem=>null==filterItem.value||Number.isNaN(filterItem.value)?null:({value})=>parseNumericValue(value)===filterItem.value,InputComponent:GridFilterInputValue,InputComponentProps:{type:"number"}},{label:"!=",value:"!=",getApplyFilterFn:filterItem=>null==filterItem.value||Number.isNaN(filterItem.value)?null:({value})=>parseNumericValue(value)!==filterItem.value,InputComponent:GridFilterInputValue,InputComponentProps:{type:"number"}},{label:">",value:">",getApplyFilterFn:filterItem=>null==filterItem.value||Number.isNaN(filterItem.value)?null:({value})=>null!=value&&parseNumericValue(value)>filterItem.value,InputComponent:GridFilterInputValue,InputComponentProps:{type:"number"}},{label:">=",value:">=",getApplyFilterFn:filterItem=>null==filterItem.value||Number.isNaN(filterItem.value)?null:({value})=>null!=value&&parseNumericValue(value)>=filterItem.value,InputComponent:GridFilterInputValue,InputComponentProps:{type:"number"}},{label:"<",value:"<",getApplyFilterFn:filterItem=>null==filterItem.value||Number.isNaN(filterItem.value)?null:({value})=>null!=value&&parseNumericValue(value)<filterItem.value,InputComponent:GridFilterInputValue,InputComponentProps:{type:"number"}},{label:"<=",value:"<=",getApplyFilterFn:filterItem=>null==filterItem.value||Number.isNaN(filterItem.value)?null:({value})=>null!=value&&parseNumericValue(value)<=filterItem.value,InputComponent:GridFilterInputValue,InputComponentProps:{type:"number"}},{value:"isEmpty",getApplyFilterFn:()=>({value})=>null==value,requiresFilterValue:!1},{value:"isNotEmpty",getApplyFilterFn:()=>({value})=>null!=value,requiresFilterValue:!1},{value:"isAnyOf",getApplyFilterFn:filterItem=>Array.isArray(filterItem.value)&&0!==filterItem.value.length?({value})=>null!=value&&filterItem.value.includes(Number(value)):null,InputComponent:GridFilterInputMultipleValue,InputComponentProps:{type:"number"}}],getApplyQuickFilterFn:value=>null==value||Number.isNaN(value)||""===value?null:({value:columnValue})=>parseNumericValue(columnValue)===parseNumericValue(value)}),GridFilterInputDate_excluded=["item","applyValue","type","apiRef","focusElementRef","InputProps"];function GridFilterInputDate(props){var _item$value,_rootProps$slotProps;const{item,applyValue,type,apiRef,focusElementRef,InputProps}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridFilterInputDate_excluded),filterTimeout=react.useRef(),[filterValueState,setFilterValueState]=react.useState(null!=(_item$value=item.value)?_item$value:""),[applying,setIsApplying]=react.useState(!1),id=(0,useId.Z)(),rootProps=(0,useGridRootProps.B)(),onFilterChange=react.useCallback((event=>{const value=event.target.value;clearTimeout(filterTimeout.current),setFilterValueState(String(value)),setIsApplying(!0),filterTimeout.current=setTimeout((()=>{applyValue((0,esm_extends.Z)({},item,{value})),setIsApplying(!1)}),500)}),[applyValue,item]);return react.useEffect((()=>()=>{clearTimeout(filterTimeout.current)}),[]),react.useEffect((()=>{var _item$value2;const itemValue=null!=(_item$value2=item.value)?_item$value2:"";setFilterValueState(String(itemValue))}),[item.value]),(0,jsx_runtime.jsx)(rootProps.slots.baseTextField,(0,esm_extends.Z)({id,label:apiRef.current.getLocaleText("filterPanelInputLabel"),placeholder:apiRef.current.getLocaleText("filterPanelInputPlaceholder"),value:filterValueState,onChange:onFilterChange,variant:"standard",type:type||"text",InputLabelProps:{shrink:!0},inputRef:focusElementRef,InputProps:(0,esm_extends.Z)({},applying?{endAdornment:(0,jsx_runtime.jsx)(rootProps.slots.loadIcon,{})}:{},InputProps,{inputProps:(0,esm_extends.Z)({max:"datetime-local"===type?"9999-12-31T23:59":"9999-12-31"},null==InputProps?void 0:InputProps.inputProps)})},other,null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.baseTextField))}const dateRegex=/(\d+)-(\d+)-(\d+)/,dateTimeRegex=/(\d+)-(\d+)-(\d+)T(\d+):(\d+)/;function buildApplyFilterFn(filterItem,compareFn,showTime,keepHours){if(!filterItem.value)return null;const[year,month,day,hour,minute]=filterItem.value.match(showTime?dateTimeRegex:dateRegex).slice(1).map(Number),time=new Date(year,month-1,day,hour||0,minute||0).getTime();return({value})=>{if(!value)return!1;if(keepHours)return compareFn(value.getTime(),time);const timeToCompare=new Date(value).setHours(showTime?value.getHours():0,showTime?value.getMinutes():0,0,0);return compareFn(timeToCompare,time)}}const getGridDateOperators=showTime=>[{value:"is",getApplyFilterFn:filterItem=>buildApplyFilterFn(filterItem,((value1,value2)=>value1===value2),showTime),InputComponent:GridFilterInputDate,InputComponentProps:{type:showTime?"datetime-local":"date"}},{value:"not",getApplyFilterFn:filterItem=>buildApplyFilterFn(filterItem,((value1,value2)=>value1!==value2),showTime),InputComponent:GridFilterInputDate,InputComponentProps:{type:showTime?"datetime-local":"date"}},{value:"after",getApplyFilterFn:filterItem=>buildApplyFilterFn(filterItem,((value1,value2)=>value1>value2),showTime),InputComponent:GridFilterInputDate,InputComponentProps:{type:showTime?"datetime-local":"date"}},{value:"onOrAfter",getApplyFilterFn:filterItem=>buildApplyFilterFn(filterItem,((value1,value2)=>value1>=value2),showTime),InputComponent:GridFilterInputDate,InputComponentProps:{type:showTime?"datetime-local":"date"}},{value:"before",getApplyFilterFn:filterItem=>buildApplyFilterFn(filterItem,((value1,value2)=>value1<value2),showTime,!showTime),InputComponent:GridFilterInputDate,InputComponentProps:{type:showTime?"datetime-local":"date"}},{value:"onOrBefore",getApplyFilterFn:filterItem=>buildApplyFilterFn(filterItem,((value1,value2)=>value1<=value2),showTime),InputComponent:GridFilterInputDate,InputComponentProps:{type:showTime?"datetime-local":"date"}},{value:"isEmpty",getApplyFilterFn:()=>({value})=>null==value,requiresFilterValue:!1},{value:"isNotEmpty",getApplyFilterFn:()=>({value})=>null!=value,requiresFilterValue:!1}],GridEditDateCell_excluded=["id","value","formattedValue","api","field","row","rowNode","colDef","cellMode","isEditable","tabIndex","hasFocus","inputProps","isValidating","isProcessingProps","onValueChange"],StyledInputBase=(0,styled.ZP)(InputBase.ZP)({fontSize:"inherit"});function GridEditDateCell(props){const{id,value:valueProp,field,colDef,hasFocus,inputProps,onValueChange}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridEditDateCell_excluded),isDateTime="dateTime"===colDef.type,apiRef=(0,utils_useGridApiContext.l)(),inputRef=react.useRef(),valueTransformed=react.useMemo((()=>{let parsedDate,formattedDate;if(parsedDate=null==valueProp?null:valueProp instanceof Date?valueProp:new Date((null!=valueProp?valueProp:"").toString()),null==parsedDate||Number.isNaN(parsedDate.getTime()))formattedDate="";else{formattedDate=new Date(parsedDate.getTime()-60*parsedDate.getTimezoneOffset()*1e3).toISOString().substr(0,isDateTime?16:10)}return{parsed:parsedDate,formatted:formattedDate}}),[valueProp,isDateTime]),[valueState,setValueState]=react.useState(valueTransformed),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["editInputCell"]},getDataGridUtilityClass,classes)})({classes:(0,useGridRootProps.B)().classes}),handleChange=react.useCallback((async event=>{const newFormattedDate=event.target.value;let newParsedDate;if(""===newFormattedDate)newParsedDate=null;else{const[date,time]=newFormattedDate.split("T"),[year,month,day]=date.split("-");if(newParsedDate=new Date,newParsedDate.setFullYear(Number(year),Number(month)-1,Number(day)),newParsedDate.setHours(0,0,0,0),time){const[hours,minutes]=time.split(":");newParsedDate.setHours(Number(hours),Number(minutes),0,0)}}onValueChange&&await onValueChange(event,newParsedDate),setValueState({parsed:newParsedDate,formatted:newFormattedDate}),apiRef.current.setEditCellValue({id,field,value:newParsedDate},event)}),[apiRef,field,id,onValueChange]);return react.useEffect((()=>{setValueState((state=>{var _valueTransformed$par,_state$parsed;return valueTransformed.parsed!==state.parsed&&(null==(_valueTransformed$par=valueTransformed.parsed)?void 0:_valueTransformed$par.getTime())!==(null==(_state$parsed=state.parsed)?void 0:_state$parsed.getTime())?valueTransformed:state}))}),[valueTransformed]),(0,useEnhancedEffect.Z)((()=>{hasFocus&&inputRef.current.focus()}),[hasFocus]),(0,jsx_runtime.jsx)(StyledInputBase,(0,esm_extends.Z)({inputRef,fullWidth:!0,className:classes.root,type:isDateTime?"datetime-local":"date",inputProps:(0,esm_extends.Z)({max:isDateTime?"9999-12-31T23:59":"9999-12-31"},inputProps),value:valueState.formatted,onChange:handleChange},other))}const renderEditDateCell=params=>(0,jsx_runtime.jsx)(GridEditDateCell,(0,esm_extends.Z)({},params));function throwIfNotDateObject({value,columnType,rowId,field}){if(!(value instanceof Date))throw new Error([`MUI: \`${columnType}\` column type only accepts \`Date\` objects as values.`,"Use `valueGetter` to transform the value into a `Date` object.",`Row ID: ${rowId}, field: "${field}".`].join("\n"))}const GRID_DATE_COL_DEF=(0,esm_extends.Z)({},GRID_STRING_COL_DEF,{type:"date",sortComparator:gridSortingUtils.mA,valueFormatter:function gridDateFormatter({value,field,id}){return value?(throwIfNotDateObject({value,columnType:"date",rowId:id,field}),value.toLocaleDateString()):""},filterOperators:getGridDateOperators(),renderEditCell:renderEditDateCell,getApplyQuickFilterFn:void 0}),GRID_DATETIME_COL_DEF=(0,esm_extends.Z)({},GRID_STRING_COL_DEF,{type:"dateTime",sortComparator:gridSortingUtils.mA,valueFormatter:function gridDateTimeFormatter({value,field,id}){return value?(throwIfNotDateObject({value,columnType:"dateTime",rowId:id,field}),value.toLocaleString()):""},filterOperators:getGridDateOperators(!0),renderEditCell:renderEditDateCell,getApplyQuickFilterFn:void 0}),GRID_ROOT_GROUP_ID="auto-generated-group-node-root";const getRowIdFromRowModel=(rowModel,getRowId,detailErrorMessage)=>{const id=getRowId?getRowId(rowModel):rowModel.id;return function checkGridRowIdIsValid(id,row,detailErrorMessage="A row was provided without id in the rows prop:"){if(null==id)throw new Error(["MUI: The data grid component requires all rows to have a unique `id` property.","Alternatively, you can use the `getRowId` prop to specify a custom id for each row.",detailErrorMessage,JSON.stringify(row)].join("\n"))}(id,rowModel,detailErrorMessage),id},createRowsInternalCache=({rows,getRowId,loading,rowCount})=>{const updates={type:"full",rows:[]},dataRowIdToModelLookup={},dataRowIdToIdLookup={};for(let i=0;i<rows.length;i+=1){const model=rows[i],id=getRowIdFromRowModel(model,getRowId);dataRowIdToModelLookup[id]=model,dataRowIdToIdLookup[id]=id,updates.rows.push(id)}return{rowsBeforePartialUpdates:rows,loadingPropBeforePartialUpdates:loading,rowCountPropBeforePartialUpdates:rowCount,updates,dataRowIdToIdLookup,dataRowIdToModelLookup}},getTopLevelRowCount=({tree,rowCountProp=0})=>{const rootGroupNode=tree[GRID_ROOT_GROUP_ID];return Math.max(rowCountProp,rootGroupNode.children.length+(null==rootGroupNode.footerId?0:1))},getRowsStateFromCache=({apiRef,rowCountProp=0,loadingProp,previousTree,previousTreeDepths})=>{const cache=apiRef.current.caches.rows,{tree:unProcessedTree,treeDepths:unProcessedTreeDepths,dataRowIds:unProcessedDataRowIds,groupingName}=apiRef.current.applyStrategyProcessor("rowTreeCreation",{previousTree,previousTreeDepths,updates:cache.updates,dataRowIdToIdLookup:cache.dataRowIdToIdLookup,dataRowIdToModelLookup:cache.dataRowIdToModelLookup}),groupingParamsWithHydrateRows=apiRef.current.unstable_applyPipeProcessors("hydrateRows",{tree:unProcessedTree,treeDepths:unProcessedTreeDepths,dataRowIdToIdLookup:cache.dataRowIdToIdLookup,dataRowIds:unProcessedDataRowIds,dataRowIdToModelLookup:cache.dataRowIdToModelLookup});return apiRef.current.caches.rows.updates={type:"partial",actions:{insert:[],modify:[],remove:[]},idToActionLookup:{}},(0,esm_extends.Z)({},groupingParamsWithHydrateRows,{totalRowCount:Math.max(rowCountProp,groupingParamsWithHydrateRows.dataRowIds.length),totalTopLevelRowCount:getTopLevelRowCount({tree:groupingParamsWithHydrateRows.tree,rowCountProp}),groupingName,loading:loadingProp})},isAutoGeneratedRow=rowNode=>"skeletonRow"===rowNode.type||"footer"===rowNode.type||"group"===rowNode.type&&rowNode.isAutoGenerated||"pinnedRow"===rowNode.type&&rowNode.isAutoGenerated,getTreeNodeDescendants=(tree,parentId,skipAutoGeneratedRows)=>{const node=tree[parentId];if("group"!==node.type)return[];const validDescendants=[];for(let i=0;i<node.children.length;i+=1){const child=node.children[i];skipAutoGeneratedRows&&isAutoGeneratedRow(tree[child])||validDescendants.push(child),validDescendants.push(...getTreeNodeDescendants(tree,child,skipAutoGeneratedRows))}return skipAutoGeneratedRows||null==node.footerId||validDescendants.push(node.footerId),validDescendants};function calculatePinnedRowsHeight(apiRef){var _pinnedRows$top,_pinnedRows$bottom;const pinnedRows=gridPinnedRowsSelector(apiRef);return{top:(null==pinnedRows||null==(_pinnedRows$top=pinnedRows.top)?void 0:_pinnedRows$top.reduce(((acc,value)=>acc+=apiRef.current.unstable_getRowHeight(value.id)),0))||0,bottom:(null==pinnedRows||null==(_pinnedRows$bottom=pinnedRows.bottom)?void 0:_pinnedRows$bottom.reduce(((acc,value)=>acc+=apiRef.current.unstable_getRowHeight(value.id)),0))||0}}function getMinimalContentHeight(apiRef,rowHeight){const densityFactor=gridDensityFactorSelector(apiRef);return 2*Math.floor(rowHeight*densityFactor)}const GridBooleanCell_excluded=["id","value","formattedValue","api","field","row","rowNode","colDef","cellMode","isEditable","hasFocus","tabIndex"];function GridBooleanCellRaw(props){const{value}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridBooleanCell_excluded),apiRef=(0,utils_useGridApiContext.l)(),rootProps=(0,useGridRootProps.B)(),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["booleanCell"]},getDataGridUtilityClass,classes)})({classes:rootProps.classes}),Icon=react.useMemo((()=>value?rootProps.slots.booleanCellTrueIcon:rootProps.slots.booleanCellFalseIcon),[rootProps.slots.booleanCellFalseIcon,rootProps.slots.booleanCellTrueIcon,value]);return(0,jsx_runtime.jsx)(Icon,(0,esm_extends.Z)({fontSize:"small",className:classes.root,titleAccess:apiRef.current.getLocaleText(value?"booleanCellTrueLabel":"booleanCellFalseLabel"),"data-value":Boolean(value)},other))}const GridBooleanCell=react.memo(GridBooleanCellRaw),GridEditBooleanCell_excluded=["id","value","formattedValue","api","field","row","rowNode","colDef","cellMode","isEditable","tabIndex","className","hasFocus","isValidating","isProcessingProps","error","onValueChange"];function GridEditBooleanCell(props){var _rootProps$slotProps;const{id:idProp,value,field,className,hasFocus,onValueChange}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridEditBooleanCell_excluded),apiRef=(0,utils_useGridApiContext.l)(),inputRef=react.useRef(null),id=(0,useId.Z)(),[valueState,setValueState]=react.useState(value),rootProps=(0,useGridRootProps.B)(),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["editBooleanCell"]},getDataGridUtilityClass,classes)})({classes:rootProps.classes}),handleChange=react.useCallback((async event=>{const newValue=event.target.checked;onValueChange&&await onValueChange(event,newValue),setValueState(newValue),await apiRef.current.setEditCellValue({id:idProp,field,value:newValue},event)}),[apiRef,field,idProp,onValueChange]);return react.useEffect((()=>{setValueState(value)}),[value]),(0,useEnhancedEffect.Z)((()=>{hasFocus&&inputRef.current.focus()}),[hasFocus]),(0,jsx_runtime.jsx)("label",(0,esm_extends.Z)({htmlFor:id,className:(0,clsx_m.Z)(classes.root,className)},other,{children:(0,jsx_runtime.jsx)(rootProps.slots.baseCheckbox,(0,esm_extends.Z)({id,inputRef,checked:Boolean(valueState),onChange:handleChange,size:"small"},null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.baseCheckbox))}))}const GridFilterInputBoolean_excluded=["item","applyValue","apiRef","focusElementRef"];function GridFilterInputBoolean(props){var _rootProps$slotProps,_baseSelectProps$nati,_rootProps$slotProps2,_rootProps$slotProps3,_rootProps$slotProps4;const{item,applyValue,apiRef,focusElementRef}=props,others=(0,objectWithoutPropertiesLoose.Z)(props,GridFilterInputBoolean_excluded),[filterValueState,setFilterValueState]=react.useState(item.value||""),rootProps=(0,useGridRootProps.B)(),isSelectNative=null==(_baseSelectProps$nati=((null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.baseSelect)||{}).native)||_baseSelectProps$nati,baseSelectOptionProps=(null==(_rootProps$slotProps2=rootProps.slotProps)?void 0:_rootProps$slotProps2.baseSelectOption)||{},onFilterChange=react.useCallback((event=>{const value=event.target.value;setFilterValueState(value),applyValue((0,esm_extends.Z)({},item,{value}))}),[applyValue,item]);return react.useEffect((()=>{setFilterValueState(item.value||"")}),[item.value]),(0,jsx_runtime.jsxs)(rootProps.slots.baseTextField,(0,esm_extends.Z)({label:apiRef.current.getLocaleText("filterPanelInputLabel"),value:filterValueState,onChange:onFilterChange,select:!0,variant:"standard",SelectProps:(0,esm_extends.Z)({native:isSelectNative,displayEmpty:!0},null==(_rootProps$slotProps3=rootProps.slotProps)?void 0:_rootProps$slotProps3.baseSelect),InputLabelProps:{shrink:!0},inputRef:focusElementRef},others,null==(_rootProps$slotProps4=rootProps.slotProps)?void 0:_rootProps$slotProps4.baseTextField,{children:[(0,jsx_runtime.jsx)(rootProps.slots.baseSelectOption,(0,esm_extends.Z)({},baseSelectOptionProps,{native:isSelectNative,value:"",children:apiRef.current.getLocaleText("filterValueAny")})),(0,jsx_runtime.jsx)(rootProps.slots.baseSelectOption,(0,esm_extends.Z)({},baseSelectOptionProps,{native:isSelectNative,value:"true",children:apiRef.current.getLocaleText("filterValueTrue")})),(0,jsx_runtime.jsx)(rootProps.slots.baseSelectOption,(0,esm_extends.Z)({},baseSelectOptionProps,{native:isSelectNative,value:"false",children:apiRef.current.getLocaleText("filterValueFalse")}))]}))}const GRID_BOOLEAN_COL_DEF=(0,esm_extends.Z)({},GRID_STRING_COL_DEF,{type:"boolean",align:"center",headerAlign:"center",renderCell:params=>isAutoGeneratedRow(params.rowNode)?"":(0,jsx_runtime.jsx)(GridBooleanCell,(0,esm_extends.Z)({},params)),renderEditCell:params=>(0,jsx_runtime.jsx)(GridEditBooleanCell,(0,esm_extends.Z)({},params)),sortComparator:gridSortingUtils.GH,valueFormatter:function gridBooleanFormatter({value,api}){return value?api.getLocaleText("booleanCellTrueLabel"):api.getLocaleText("booleanCellFalseLabel")},filterOperators:[{value:"is",getApplyFilterFn:filterItem=>{if(!filterItem.value)return null;const valueAsBoolean="true"===filterItem.value;return({value})=>Boolean(value)===valueAsBoolean},InputComponent:GridFilterInputBoolean}],getApplyQuickFilterFn:void 0,aggregable:!1}),isEscapeKey=key=>"Escape"===key,isEnterKey=key=>"Enter"===key,isTabKey=key=>"Tab"===key,isSpaceKey=key=>" "===key;function isPrintableKey(event){return 1===event.key.length&&!1===event.ctrlKey&&!1===event.metaKey}const isNavigationKey=key=>(key=>"Home"===key||"End"===key)(key)||(key=>0===key.indexOf("Arrow"))(key)||(key=>0===key.indexOf("Page"))(key)||isSpaceKey(key);var gridEditRowModel=__webpack_require__("./node_modules/@mui/x-data-grid/models/gridEditRowModel.js");function isSingleSelectColDef(colDef){return"singleSelect"===(null==colDef?void 0:colDef.type)}function getValueFromValueOptions(value,valueOptions,getOptionValue){if(void 0===valueOptions)return;const result=valueOptions.find((option=>{const optionValue=getOptionValue(option);return String(optionValue)===String(value)}));return getOptionValue(result)}const GridEditSingleSelectCell_excluded=["id","value","formattedValue","api","field","row","rowNode","colDef","cellMode","isEditable","tabIndex","className","hasFocus","isValidating","isProcessingProps","error","onValueChange","initialOpen","getOptionLabel","getOptionValue"],_excluded2=["MenuProps"];function GridEditSingleSelectCell(props){var _rootProps$slotProps,_baseSelectProps$nati,_rootProps$slotProps2;const rootProps=(0,useGridRootProps.B)(),{id,value:valueProp,field,row,colDef,hasFocus,error,onValueChange,initialOpen=rootProps.editMode===gridEditRowModel.r2.Cell,getOptionLabel:getOptionLabelProp,getOptionValue:getOptionValueProp}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridEditSingleSelectCell_excluded),apiRef=(0,utils_useGridApiContext.l)(),ref=react.useRef(),inputRef=react.useRef(),[open,setOpen]=react.useState(initialOpen),isSelectNative=null!=(_baseSelectProps$nati=((null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.baseSelect)||{}).native)&&_baseSelectProps$nati,_ref=(null==(_rootProps$slotProps2=rootProps.slotProps)?void 0:_rootProps$slotProps2.baseSelect)||{},{MenuProps}=_ref,otherBaseSelectProps=(0,objectWithoutPropertiesLoose.Z)(_ref,_excluded2);if((0,useEnhancedEffect.Z)((()=>{var _inputRef$current;hasFocus&&(null==(_inputRef$current=inputRef.current)||_inputRef$current.focus())}),[hasFocus]),!isSingleSelectColDef(colDef))return null;let valueOptions;if(valueOptions="function"==typeof(null==colDef?void 0:colDef.valueOptions)?null==colDef?void 0:colDef.valueOptions({id,row,field}):null==colDef?void 0:colDef.valueOptions,!valueOptions)return null;const getOptionValue=getOptionValueProp||colDef.getOptionValue,getOptionLabel=getOptionLabelProp||colDef.getOptionLabel;return valueOptions&&colDef?(0,jsx_runtime.jsx)(rootProps.slots.baseSelect,(0,esm_extends.Z)({ref,inputRef,value:valueProp,onChange:async event=>{if(!isSingleSelectColDef(colDef)||!valueOptions)return;setOpen(!1);const formattedTargetValue=getValueFromValueOptions(event.target.value,valueOptions,getOptionValue);onValueChange&&await onValueChange(event,formattedTargetValue),await apiRef.current.setEditCellValue({id,field,value:formattedTargetValue},event)},open,onOpen:event=>{(function GridEditSingleSelectCell_isKeyboardEvent(event){return!!event.key})(event)&&"Enter"===event.key||setOpen(!0)},MenuProps:(0,esm_extends.Z)({onClose:(event,reason)=>{rootProps.editMode!==gridEditRowModel.r2.Row?("backdropClick"===reason||isEscapeKey(event.key))&&apiRef.current.stopCellEditMode({id,field,ignoreModifications:!0}):setOpen(!1)}},MenuProps),error,native:isSelectNative,fullWidth:!0},other,otherBaseSelectProps,{children:valueOptions.map((valueOption=>{var _rootProps$slotProps3;const value=getOptionValue(valueOption);return(0,react.createElement)(rootProps.slots.baseSelectOption,(0,esm_extends.Z)({},(null==(_rootProps$slotProps3=rootProps.slotProps)?void 0:_rootProps$slotProps3.baseSelectOption)||{},{native:isSelectNative,key:value,value}),getOptionLabel(valueOption))}))})):null}const GridFilterInputSingleSelect_excluded=["item","applyValue","type","apiRef","focusElementRef","getOptionLabel","getOptionValue"],renderSingleSelectOptions=({column:{valueOptions,field},OptionComponent,getOptionLabel,getOptionValue,isSelectNative,baseSelectOptionProps})=>("function"==typeof valueOptions?["",...valueOptions({field})]:["",...valueOptions||[]]).map((option=>{const value=getOptionValue(option),label=getOptionLabel(option);return(0,react.createElement)(OptionComponent,(0,esm_extends.Z)({},baseSelectOptionProps,{native:isSelectNative,key:value,value}),label)}));function GridFilterInputSingleSelect(props){var _item$value,_rootProps$slotProps,_baseSelectProps$nati,_rootProps$slotProps2,_resolvedColumn,_resolvedColumn2,_rootProps$slotProps3,_rootProps$slotProps4;const{item,applyValue,type,apiRef,focusElementRef,getOptionLabel:getOptionLabelProp,getOptionValue:getOptionValueProp}=props,others=(0,objectWithoutPropertiesLoose.Z)(props,GridFilterInputSingleSelect_excluded),[filterValueState,setFilterValueState]=react.useState(null!=(_item$value=item.value)?_item$value:""),id=(0,useId.Z)(),rootProps=(0,useGridRootProps.B)(),isSelectNative=null==(_baseSelectProps$nati=((null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.baseSelect)||{}).native)||_baseSelectProps$nati,baseSelectOptionProps=(null==(_rootProps$slotProps2=rootProps.slotProps)?void 0:_rootProps$slotProps2.baseSelectOption)||{};let resolvedColumn=null;if(item.field){const column=apiRef.current.getColumn(item.field);isSingleSelectColDef(column)&&(resolvedColumn=column)}const getOptionValue=getOptionValueProp||(null==(_resolvedColumn=resolvedColumn)?void 0:_resolvedColumn.getOptionValue),getOptionLabel=getOptionLabelProp||(null==(_resolvedColumn2=resolvedColumn)?void 0:_resolvedColumn2.getOptionLabel),currentValueOptions=react.useMemo((()=>{if(resolvedColumn)return"function"==typeof resolvedColumn.valueOptions?resolvedColumn.valueOptions({field:resolvedColumn.field}):resolvedColumn.valueOptions}),[resolvedColumn]),onFilterChange=react.useCallback((event=>{let value=event.target.value;value=getValueFromValueOptions(value,currentValueOptions,getOptionValue),setFilterValueState(String(value)),applyValue((0,esm_extends.Z)({},item,{value}))}),[currentValueOptions,getOptionValue,applyValue,item]);return react.useEffect((()=>{var _itemValue;let itemValue;if(void 0!==currentValueOptions){if(itemValue=getValueFromValueOptions(item.value,currentValueOptions,getOptionValue),itemValue!==item.value)return void applyValue((0,esm_extends.Z)({},item,{value:itemValue}))}else itemValue=item.value;itemValue=null!=(_itemValue=itemValue)?_itemValue:"",setFilterValueState(String(itemValue))}),[item,currentValueOptions,applyValue,getOptionValue]),isSingleSelectColDef(resolvedColumn)&&isSingleSelectColDef(resolvedColumn)?(0,jsx_runtime.jsx)(rootProps.slots.baseTextField,(0,esm_extends.Z)({id,label:apiRef.current.getLocaleText("filterPanelInputLabel"),placeholder:apiRef.current.getLocaleText("filterPanelInputPlaceholder"),value:filterValueState,onChange:onFilterChange,variant:"standard",type:type||"text",InputLabelProps:{shrink:!0},inputRef:focusElementRef,select:!0,SelectProps:(0,esm_extends.Z)({native:isSelectNative},null==(_rootProps$slotProps3=rootProps.slotProps)?void 0:_rootProps$slotProps3.baseSelect)},others,null==(_rootProps$slotProps4=rootProps.slotProps)?void 0:_rootProps$slotProps4.baseTextField,{children:renderSingleSelectOptions({column:resolvedColumn,OptionComponent:rootProps.slots.baseSelectOption,getOptionLabel,getOptionValue,isSelectNative,baseSelectOptionProps})})):null}var useAutocomplete=__webpack_require__("./node_modules/@mui/base/useAutocomplete/useAutocomplete.js");const GridFilterInputMultipleSingleSelect_excluded=["item","applyValue","type","apiRef","focusElementRef","color","error","helperText","size","variant","getOptionLabel","getOptionValue"],filter=(0,useAutocomplete.D)();function GridFilterInputMultipleSingleSelect(props){var _resolvedColumn,_resolvedColumn2;const{item,applyValue,apiRef,focusElementRef,color,error,helperText,size,variant="standard",getOptionLabel:getOptionLabelProp,getOptionValue:getOptionValueProp}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridFilterInputMultipleSingleSelect_excluded),TextFieldProps={color,error,helperText,size,variant},id=(0,useId.Z)(),rootProps=(0,useGridRootProps.B)();let resolvedColumn=null;if(item.field){const column=apiRef.current.getColumn(item.field);isSingleSelectColDef(column)&&(resolvedColumn=column)}const getOptionValue=getOptionValueProp||(null==(_resolvedColumn=resolvedColumn)?void 0:_resolvedColumn.getOptionValue),getOptionLabel=getOptionLabelProp||(null==(_resolvedColumn2=resolvedColumn)?void 0:_resolvedColumn2.getOptionLabel),isOptionEqualToValue=react.useCallback(((option,value)=>getOptionValue(option)===getOptionValue(value)),[getOptionValue]),resolvedValueOptions=react.useMemo((()=>{var _resolvedColumn3;return null!=(_resolvedColumn3=resolvedColumn)&&_resolvedColumn3.valueOptions?"function"==typeof resolvedColumn.valueOptions?resolvedColumn.valueOptions({field:resolvedColumn.field}):resolvedColumn.valueOptions:[]}),[resolvedColumn]),resolvedFormattedValueOptions=react.useMemo((()=>null==resolvedValueOptions?void 0:resolvedValueOptions.map(getOptionValue)),[resolvedValueOptions,getOptionValue]),filteredValues=react.useMemo((()=>{if(!Array.isArray(item.value))return[];if(void 0!==resolvedValueOptions){return item.value.map((element=>null==resolvedFormattedValueOptions?void 0:resolvedFormattedValueOptions.findIndex((formattedOption=>formattedOption===element)))).filter((index=>index>=0)).map((index=>resolvedValueOptions[index]))}return item.value}),[item.value,resolvedValueOptions,resolvedFormattedValueOptions]);react.useEffect((()=>{Array.isArray(item.value)&&filteredValues.length===item.value.length||applyValue((0,esm_extends.Z)({},item,{value:filteredValues.map(getOptionValue)}))}),[item,filteredValues,applyValue,getOptionValue]);const handleChange=react.useCallback(((event,value)=>{applyValue((0,esm_extends.Z)({},item,{value:value.map(getOptionValue)}))}),[applyValue,item,getOptionValue]);return(0,jsx_runtime.jsx)(Autocomplete.Z,(0,esm_extends.Z)({multiple:!0,options:resolvedValueOptions,isOptionEqualToValue,filterOptions:filter,id,value:filteredValues,onChange:handleChange,getOptionLabel,renderTags:(value,getTagProps)=>value.map(((option,index)=>(0,jsx_runtime.jsx)(Chip.Z,(0,esm_extends.Z)({variant:"outlined",size:"small",label:getOptionLabel(option)},getTagProps({index}))))),renderInput:params=>{var _rootProps$slotProps;return(0,jsx_runtime.jsx)(rootProps.slots.baseTextField,(0,esm_extends.Z)({},params,{label:apiRef.current.getLocaleText("filterPanelInputLabel"),placeholder:apiRef.current.getLocaleText("filterPanelInputPlaceholder"),InputLabelProps:(0,esm_extends.Z)({},params.InputLabelProps,{shrink:!0}),inputRef:focusElementRef,type:"singleSelect"},TextFieldProps,null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.baseTextField))}},other))}const parseObjectValue=value=>null!=value&&isObject(value)?value.value:value,GRID_SINGLE_SELECT_COL_DEF=(0,esm_extends.Z)({},GRID_STRING_COL_DEF,{type:"singleSelect",getOptionLabel:value=>isObject(value)?value.label:String(value),getOptionValue:value=>isObject(value)?value.value:value,valueFormatter(params){const{id,field,value,api}=params,colDef=params.api.getColumn(field);if(!isSingleSelectColDef(colDef))return"";let valueOptions;if(valueOptions="function"==typeof colDef.valueOptions?colDef.valueOptions({id,row:id?api.getRow(id):null,field}):colDef.valueOptions,null==value)return"";if(!valueOptions)return value;if("object"!=typeof valueOptions[0])return colDef.getOptionLabel(value);const valueOption=valueOptions.find((option=>colDef.getOptionValue(option)===value));return valueOption?colDef.getOptionLabel(valueOption):""},renderEditCell:params=>(0,jsx_runtime.jsx)(GridEditSingleSelectCell,(0,esm_extends.Z)({},params)),filterOperators:[{value:"is",getApplyFilterFn:filterItem=>null==filterItem.value||""===filterItem.value?null:({value})=>parseObjectValue(value)===parseObjectValue(filterItem.value),InputComponent:GridFilterInputSingleSelect},{value:"not",getApplyFilterFn:filterItem=>null==filterItem.value||""===filterItem.value?null:({value})=>parseObjectValue(value)!==parseObjectValue(filterItem.value),InputComponent:GridFilterInputSingleSelect},{value:"isAnyOf",getApplyFilterFn:filterItem=>{if(!Array.isArray(filterItem.value)||0===filterItem.value.length)return null;const filterItemValues=filterItem.value.map(parseObjectValue);return({value})=>filterItemValues.includes(parseObjectValue(value))},InputComponent:GridFilterInputMultipleSingleSelect}]});var MenuList=__webpack_require__("./node_modules/@mui/material/MenuList/MenuList.js"),useTheme=__webpack_require__("./node_modules/@mui/material/styles/useTheme.js"),ClickAwayListener=__webpack_require__("./node_modules/@mui/base/ClickAwayListener/ClickAwayListener.js"),Grow=__webpack_require__("./node_modules/@mui/material/Grow/Grow.js"),Paper=__webpack_require__("./node_modules/@mui/material/Paper/Paper.js"),Popper=__webpack_require__("./node_modules/@mui/material/Popper/Popper.js");const GridMenu_excluded=["open","target","onClickAway","children","position","className","onExited"],GridMenu_useUtilityClasses=ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["menu"]},getDataGridUtilityClass,classes)},GridMenuRoot=(0,styled.ZP)(Popper.Z,{name:"MuiDataGrid",slot:"Menu",overridesResolver:(_,styles)=>styles.menu})((({theme})=>({zIndex:theme.zIndex.modal,[`& .${gridClasses_gridClasses.menuList}`]:{outline:0}}))),transformOrigin={"bottom-start":"top left","bottom-end":"top right"};function GridMenu(props){var _rootProps$slotProps;const{open,target,onClickAway,children,position,className,onExited}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridMenu_excluded),apiRef=(0,utils_useGridApiContext.l)(),rootProps=(0,useGridRootProps.B)(),classes=GridMenu_useUtilityClasses(rootProps);react.useEffect((()=>{const eventName=open?"menuOpen":"menuClose";apiRef.current.publishEvent(eventName,{target})}),[apiRef,open,target]);return(0,jsx_runtime.jsx)(GridMenuRoot,(0,esm_extends.Z)({as:rootProps.slots.basePopper,className:(0,clsx_m.Z)(className,classes.root),ownerState:rootProps,open,anchorEl:target,transition:!0,placement:position},other,null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.basePopper,{children:({TransitionProps,placement})=>{return(0,jsx_runtime.jsx)(ClickAwayListener.Z,{onClickAway,mouseEvent:"onMouseDown",children:(0,jsx_runtime.jsx)(Grow.Z,(0,esm_extends.Z)({},TransitionProps,{style:{transformOrigin:transformOrigin[placement]},onExited:(popperOnExited=null==TransitionProps?void 0:TransitionProps.onExited,node=>{popperOnExited&&popperOnExited(),onExited&&onExited(node)}),children:(0,jsx_runtime.jsx)(Paper.Z,{children})}))});var popperOnExited}}))}const GridActionsCell_excluded=["colDef","id","hasFocus","isEditable","field","value","formattedValue","row","rowNode","cellMode","tabIndex","position","focusElementRef"];function GridActionsCell(props){var _rootProps$slotProps;const{colDef,id,hasFocus,tabIndex,position="bottom-end",focusElementRef}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridActionsCell_excluded),[focusedButtonIndex,setFocusedButtonIndex]=react.useState(-1),[open,setOpen]=react.useState(!1),apiRef=(0,utils_useGridApiContext.l)(),rootRef=react.useRef(null),buttonRef=react.useRef(null),ignoreCallToFocus=react.useRef(!1),touchRippleRefs=react.useRef({}),theme=(0,useTheme.Z)(),menuId=(0,useId.Z)(),buttonId=(0,useId.Z)(),rootProps=(0,useGridRootProps.B)();if(!(colDef=>"function"==typeof colDef.getActions)(colDef))throw new Error("MUI: Missing the `getActions` property in the `GridColDef`.");const options=colDef.getActions(apiRef.current.getRowParams(id)),iconButtons=options.filter((option=>!option.props.showInMenu)),menuButtons=options.filter((option=>option.props.showInMenu)),numberOfButtons=iconButtons.length+(menuButtons.length?1:0);react.useLayoutEffect((()=>{hasFocus||Object.entries(touchRippleRefs.current).forEach((([index,ref])=>{null==ref||ref.stop({},(()=>{delete touchRippleRefs.current[index]}))}))}),[hasFocus]),react.useEffect((()=>{if(focusedButtonIndex<0||!rootRef.current)return;if(focusedButtonIndex>=rootRef.current.children.length)return;rootRef.current.children[focusedButtonIndex].focus({preventScroll:!0})}),[focusedButtonIndex]),react.useEffect((()=>{hasFocus||(setFocusedButtonIndex(-1),ignoreCallToFocus.current=!1)}),[hasFocus]),react.useImperativeHandle(focusElementRef,(()=>({focus(){ignoreCallToFocus.current||setFocusedButtonIndex(0)}})),[]),react.useEffect((()=>{focusedButtonIndex>=numberOfButtons&&setFocusedButtonIndex(numberOfButtons-1)}),[focusedButtonIndex,numberOfButtons]);const hideMenu=()=>{setOpen(!1)},handleTouchRippleRef=index=>instance=>{touchRippleRefs.current[index]=instance},handleButtonClick=(index,onClick)=>event=>{setFocusedButtonIndex(index),ignoreCallToFocus.current=!0,onClick&&onClick(event)};return(0,jsx_runtime.jsxs)("div",(0,esm_extends.Z)({role:"menu",ref:rootRef,tabIndex:-1,className:gridClasses_gridClasses.actionsCell,onKeyDown:event=>{if(numberOfButtons<=1)return;let newIndex=focusedButtonIndex;"ArrowRight"===event.key?"rtl"===theme.direction?newIndex-=1:newIndex+=1:"ArrowLeft"===event.key&&("rtl"===theme.direction?newIndex+=1:newIndex-=1),newIndex<0||newIndex>=numberOfButtons||newIndex!==focusedButtonIndex&&(event.preventDefault(),event.stopPropagation(),setFocusedButtonIndex(newIndex))}},other,{children:[iconButtons.map(((button,index)=>react.cloneElement(button,{key:index,touchRippleRef:handleTouchRippleRef(index),onClick:handleButtonClick(index,button.props.onClick),tabIndex:focusedButtonIndex===index?tabIndex:-1}))),menuButtons.length>0&&buttonId&&(0,jsx_runtime.jsx)(rootProps.slots.baseIconButton,(0,esm_extends.Z)({ref:buttonRef,id:buttonId,"aria-label":apiRef.current.getLocaleText("actionsCellMore"),"aria-controls":menuId,"aria-expanded":open?"true":void 0,"aria-haspopup":"true",role:"menuitem",size:"small",onClick:()=>{setOpen(!0),setFocusedButtonIndex(numberOfButtons-1),ignoreCallToFocus.current=!0},touchRippleRef:handleTouchRippleRef(buttonId),tabIndex:focusedButtonIndex===iconButtons.length?tabIndex:-1},null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.baseIconButton,{children:(0,jsx_runtime.jsx)(rootProps.slots.moreActionsIcon,{fontSize:"small"})})),menuButtons.length>0&&(0,jsx_runtime.jsx)(GridMenu,{onClickAway:hideMenu,onClick:hideMenu,open,target:buttonRef.current,position,children:(0,jsx_runtime.jsx)(MenuList.Z,{id:menuId,className:gridClasses_gridClasses.menuList,onKeyDown:event=>{"Tab"===event.key&&event.preventDefault(),["Tab","Enter","Escape"].includes(event.key)&&hideMenu()},"aria-labelledby":buttonId,variant:"menu",autoFocusItem:!0,children:menuButtons.map(((button,index)=>react.cloneElement(button,{key:index})))})})]}))}const GRID_ACTIONS_COL_DEF=(0,esm_extends.Z)({},GRID_STRING_COL_DEF,{sortable:!1,filterable:!1,aggregable:!1,width:100,align:"center",headerAlign:"center",headerName:"",disableColumnMenu:!0,disableExport:!0,renderCell:params=>(0,jsx_runtime.jsx)(GridActionsCell,(0,esm_extends.Z)({},params)),getApplyQuickFilterFn:void 0}),COLUMNS_DIMENSION_PROPERTIES=["maxWidth","minWidth","width","flex"];const hydrateColumnsWidth=(rawState,viewportInnerWidth)=>{const columnsLookup={};let totalFlexUnits=0,widthAllocatedBeforeFlex=0;const flexColumns=[];rawState.orderedFields.forEach((columnField=>{const newColumn=(0,esm_extends.Z)({},rawState.lookup[columnField]);if(!1===rawState.columnVisibilityModel[columnField])newColumn.computedWidth=0;else{let computedWidth;newColumn.flex&&newColumn.flex>0?(totalFlexUnits+=newColumn.flex,computedWidth=0,flexColumns.push(newColumn)):computedWidth=clamp(newColumn.width,newColumn.minWidth,newColumn.maxWidth),widthAllocatedBeforeFlex+=computedWidth,newColumn.computedWidth=computedWidth}columnsLookup[columnField]=newColumn}));const initialFreeSpace=Math.max(viewportInnerWidth-widthAllocatedBeforeFlex,0);if(totalFlexUnits>0&&viewportInnerWidth>0){const computedColumnWidths=function computeFlexColumnsWidth({initialFreeSpace,totalFlexUnits,flexColumns}){const flexColumnsLookup={all:{},frozenFields:[],freeze:field=>{const value=flexColumnsLookup.all[field];value&&!0!==value.frozen&&(flexColumnsLookup.all[field].frozen=!0,flexColumnsLookup.frozenFields.push(field))}};return function loopOverFlexItems(){if(flexColumnsLookup.frozenFields.length===flexColumns.length)return;const violationsLookup={min:{},max:{}};let remainingFreeSpace=initialFreeSpace,flexUnits=totalFlexUnits,totalViolation=0;flexColumnsLookup.frozenFields.forEach((field=>{remainingFreeSpace-=flexColumnsLookup.all[field].computedWidth,flexUnits-=flexColumnsLookup.all[field].flex}));for(let i=0;i<flexColumns.length;i+=1){const column=flexColumns[i];if(flexColumnsLookup.all[column.field]&&!0===flexColumnsLookup.all[column.field].frozen)continue;let computedWidth=remainingFreeSpace/flexUnits*column.flex;computedWidth<column.minWidth?(totalViolation+=column.minWidth-computedWidth,computedWidth=column.minWidth,violationsLookup.min[column.field]=!0):computedWidth>column.maxWidth&&(totalViolation+=column.maxWidth-computedWidth,computedWidth=column.maxWidth,violationsLookup.max[column.field]=!0),flexColumnsLookup.all[column.field]={frozen:!1,computedWidth,flex:column.flex}}totalViolation<0?Object.keys(violationsLookup.max).forEach((field=>{flexColumnsLookup.freeze(field)})):totalViolation>0?Object.keys(violationsLookup.min).forEach((field=>{flexColumnsLookup.freeze(field)})):flexColumns.forEach((({field})=>{flexColumnsLookup.freeze(field)})),loopOverFlexItems()}(),flexColumnsLookup.all}({initialFreeSpace,totalFlexUnits,flexColumns});Object.keys(computedColumnWidths).forEach((field=>{columnsLookup[field].computedWidth=computedColumnWidths[field].computedWidth}))}return(0,esm_extends.Z)({},rawState,{lookup:columnsLookup})},createColumnsState=({apiRef,columnsToUpsert,initialState,columnTypes,columnVisibilityModel=gridColumnVisibilityModelSelector(apiRef),keepOnlyColumnsToUpsert=!1})=>{var _apiRef$current$getRo,_apiRef$current$getRo2,_apiRef$current,_apiRef$current$getRo3;const isInsideStateInitializer=!apiRef.current.state.columns;let columnsState;if(isInsideStateInitializer)columnsState={orderedFields:[],lookup:{},columnVisibilityModel};else{const currentState=gridColumnsStateSelector(apiRef.current.state);columnsState={orderedFields:keepOnlyColumnsToUpsert?[]:[...currentState.orderedFields],lookup:(0,esm_extends.Z)({},currentState.lookup),columnVisibilityModel}}let columnsToKeep={};keepOnlyColumnsToUpsert&&!isInsideStateInitializer&&(columnsToKeep=Object.keys(columnsState.lookup).reduce(((acc,key)=>(0,esm_extends.Z)({},acc,{[key]:!1})),{}));const columnsToUpsertLookup={};columnsToUpsert.forEach((newColumn=>{const{field}=newColumn;columnsToUpsertLookup[field]=!0,columnsToKeep[field]=!0;let existingState=columnsState.lookup[field];if(null==existingState){let colDef=columnTypes.__default__;newColumn.type&&columnTypes[newColumn.type]&&(colDef=columnTypes[newColumn.type]),existingState=(0,esm_extends.Z)({},colDef,{field,hasBeenResized:!1}),columnsState.orderedFields.push(field)}else keepOnlyColumnsToUpsert&&columnsState.orderedFields.push(field);let hasBeenResized=existingState.hasBeenResized;COLUMNS_DIMENSION_PROPERTIES.forEach((key=>{void 0!==newColumn[key]&&(hasBeenResized=!0,-1===newColumn[key]&&(newColumn[key]=1/0))})),columnsState.lookup[field]=(0,esm_extends.Z)({},existingState,newColumn,{hasBeenResized})})),keepOnlyColumnsToUpsert&&!isInsideStateInitializer&&Object.keys(columnsState.lookup).forEach((field=>{columnsToKeep[field]||delete columnsState.lookup[field]}));const columnsStateWithPortableColumns=((columnsState,initialState)=>{if(!initialState)return columnsState;const{orderedFields=[],dimensions={}}=initialState,columnsWithUpdatedDimensions=Object.keys(dimensions);if(0===columnsWithUpdatedDimensions.length&&0===orderedFields.length)return columnsState;const orderedFieldsLookup={},cleanOrderedFields=[];for(let i=0;i<orderedFields.length;i+=1){const field=orderedFields[i];columnsState.lookup[field]&&(orderedFieldsLookup[field]=!0,cleanOrderedFields.push(field))}const newOrderedFields=0===cleanOrderedFields.length?columnsState.orderedFields:[...cleanOrderedFields,...columnsState.orderedFields.filter((field=>!orderedFieldsLookup[field]))],newColumnLookup=(0,esm_extends.Z)({},columnsState.lookup);for(let i=0;i<columnsWithUpdatedDimensions.length;i+=1){const field=columnsWithUpdatedDimensions[i],newColDef=(0,esm_extends.Z)({},newColumnLookup[field],{hasBeenResized:!0});Object.entries(dimensions[field]).forEach((([key,value])=>{newColDef[key]=-1===value?1/0:value})),newColumnLookup[field]=newColDef}return(0,esm_extends.Z)({},columnsState,{orderedFields:newOrderedFields,lookup:newColumnLookup})})(apiRef.current.unstable_applyPipeProcessors("hydrateColumns",columnsState),initialState);return hydrateColumnsWidth(columnsStateWithPortableColumns,null!=(_apiRef$current$getRo=null==(_apiRef$current$getRo2=(_apiRef$current=apiRef.current).getRootDimensions)||null==(_apiRef$current$getRo3=_apiRef$current$getRo2.call(_apiRef$current))?void 0:_apiRef$current$getRo3.viewportInnerSize.width)?_apiRef$current$getRo:0)},mergeColumnsState=columnsState=>state=>(0,esm_extends.Z)({},state,{columns:columnsState});function getFirstNonSpannedColumnToRender({firstColumnToRender,apiRef,firstRowToRender,lastRowToRender,visibleRows}){let firstNonSpannedColumnToRender=firstColumnToRender;for(let i=firstRowToRender;i<lastRowToRender;i+=1){if(visibleRows[i]){const rowId=visibleRows[i].id,cellColSpanInfo=apiRef.current.unstable_getCellColSpanInfo(rowId,firstColumnToRender);cellColSpanInfo&&cellColSpanInfo.spannedByColSpan&&(firstNonSpannedColumnToRender=cellColSpanInfo.leftVisibleCellIndex)}}return firstNonSpannedColumnToRender}function getFirstColumnIndexToRender({firstColumnIndex,minColumnIndex,columnBuffer,firstRowToRender,lastRowToRender,apiRef,visibleRows}){return getFirstNonSpannedColumnToRender({firstColumnToRender:Math.max(firstColumnIndex-columnBuffer,minColumnIndex),apiRef,firstRowToRender,lastRowToRender,visibleRows})}function getTotalHeaderHeight(apiRef,headerHeight){const densityFactor=gridDensityFactorSelector(apiRef),maxDepth=gridColumnGroupsHeaderMaxDepthSelector(apiRef);return Math.floor(headerHeight*densityFactor)*((null!=maxDepth?maxDepth:0)+1)}var GridPreferencePanelsValue=function(GridPreferencePanelsValue){return GridPreferencePanelsValue.filters="filters",GridPreferencePanelsValue.columns="columns",GridPreferencePanelsValue}(GridPreferencePanelsValue||{});const defaultColumnTypes={string:GRID_STRING_COL_DEF,number:GRID_NUMERIC_COL_DEF,date:GRID_DATE_COL_DEF,dateTime:GRID_DATETIME_COL_DEF,boolean:GRID_BOOLEAN_COL_DEF,singleSelect:GRID_SINGLE_SELECT_COL_DEF,actions:GRID_ACTIONS_COL_DEF,__default__:GRID_STRING_COL_DEF},columnsStateInitializer=(state,props,apiRef)=>{var _props$initialState,_ref,_props$columnVisibili,_props$initialState2,_props$initialState2$;const columnsState=createColumnsState({apiRef,columnTypes:defaultColumnTypes,columnsToUpsert:props.columns,initialState:null==(_props$initialState=props.initialState)?void 0:_props$initialState.columns,columnVisibilityModel:null!=(_ref=null!=(_props$columnVisibili=props.columnVisibilityModel)?_props$columnVisibili:null==(_props$initialState2=props.initialState)||null==(_props$initialState2$=_props$initialState2.columns)?void 0:_props$initialState2$.columnVisibilityModel)?_ref:{},keepOnlyColumnsToUpsert:!0});return(0,esm_extends.Z)({},state,{columns:columnsState})};const DENSITY_FACTORS={compact:.7,comfortable:1.3,standard:1},densityStateInitializer=(state,props)=>(0,esm_extends.Z)({},state,{density:{value:props.density,factor:DENSITY_FACTORS[props.density]}});const GridCellCheckboxRenderer_excluded=["field","id","value","formattedValue","row","rowNode","colDef","isEditable","cellMode","hasFocus","tabIndex","api"],GridCellCheckboxRenderer=react.forwardRef((function GridCellCheckboxRenderer(props,ref){var _rootProps$slotProps;const{field,id,value:isChecked,rowNode,hasFocus,tabIndex}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridCellCheckboxRenderer_excluded),apiRef=(0,utils_useGridApiContext.l)(),rootProps=(0,useGridRootProps.B)(),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["checkboxInput"]},getDataGridUtilityClass,classes)})({classes:rootProps.classes}),checkboxElement=react.useRef(null),rippleRef=react.useRef(),handleRef=(0,useForkRef.Z)(checkboxElement,ref),element=apiRef.current.getCellElement(id,field);react.useLayoutEffect((()=>{0===tabIndex&&element&&(element.tabIndex=-1)}),[element,tabIndex]),react.useEffect((()=>{if(hasFocus){var _checkboxElement$curr;const input=null==(_checkboxElement$curr=checkboxElement.current)?void 0:_checkboxElement$curr.querySelector("input");null==input||input.focus({preventScroll:!0})}else rippleRef.current&&rippleRef.current.stop({})}),[hasFocus]);const handleKeyDown=react.useCallback((event=>{isSpaceKey(event.key)&&event.stopPropagation()}),[]);if("footer"===rowNode.type||"pinnedRow"===rowNode.type)return null;const isSelectable=apiRef.current.isRowSelectable(id),label=apiRef.current.getLocaleText(isChecked?"checkboxSelectionUnselectRow":"checkboxSelectionSelectRow");return(0,jsx_runtime.jsx)(rootProps.slots.baseCheckbox,(0,esm_extends.Z)({ref:handleRef,tabIndex,checked:isChecked,onChange:event=>{const params={value:event.target.checked,id};apiRef.current.publishEvent("rowSelectionCheckboxChange",params,event)},className:classes.root,inputProps:{"aria-label":label},onKeyDown:handleKeyDown,disabled:!isSelectable,touchRippleRef:rippleRef},null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.baseCheckbox,other))})),gridRowSelectionStateSelector=state=>state.rowSelection,selectedGridRowsCountSelector=createSelector_createSelector(gridRowSelectionStateSelector,(selection=>selection.length)),selectedGridRowsSelector=createSelector_createSelector(gridRowSelectionStateSelector,gridRowsLookupSelector,((selectedRows,rowsLookup)=>new Map(selectedRows.map((id=>[id,rowsLookup[id]]))))),selectedIdsLookupSelector=createSelector_createSelector(gridRowSelectionStateSelector,(selection=>selection.reduce(((lookup,rowId)=>(lookup[rowId]=rowId,lookup)),{}))),getPageCount=(rowCount,pageSize)=>pageSize>0&&rowCount>0?Math.ceil(rowCount/pageSize):0,getDefaultGridPaginationModel=((0,warning.b)(["MUI: the 'rowCount' prop is undefined while using paginationMode='server'","For more detail, see http://mui.com/components/data-grid/pagination/#basic-implementation"],"error"),autoPageSize=>({page:0,pageSize:autoPageSize?0:100})),throwIfPageSizeExceedsTheLimit=(pageSize,signatureProp)=>{if(signatureProp===GridSignature.DataGrid&&pageSize>100)throw new Error(["MUI: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.","You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature."].join("\n"))},gridPaginationSelector=state=>state.pagination,gridPaginationModelSelector=createSelector_createSelector(gridPaginationSelector,(pagination=>pagination.paginationModel)),gridPageSelector=createSelector_createSelector(gridPaginationModelSelector,(paginationModel=>paginationModel.page)),gridPageSizeSelector=createSelector_createSelector(gridPaginationModelSelector,(paginationModel=>paginationModel.pageSize)),gridPaginationRowRangeSelector=(createSelector_createSelector(gridPaginationModelSelector,gridFilteredTopLevelRowCountSelector,((paginationModel,visibleTopLevelRowCount)=>getPageCount(visibleTopLevelRowCount,paginationModel.pageSize))),createSelector_createSelector(gridPaginationModelSelector,gridRowTreeSelector,gridRowMaximumTreeDepthSelector,gridExpandedSortedRowEntriesSelector,gridFilteredSortedTopLevelRowEntriesSelector,((paginationModel,rowTree,rowTreeDepth,visibleSortedRowEntries,visibleSortedTopLevelRowEntries)=>{const visibleTopLevelRowCount=visibleSortedTopLevelRowEntries.length,topLevelFirstRowIndex=Math.min(paginationModel.pageSize*paginationModel.page,visibleTopLevelRowCount-1),topLevelLastRowIndex=Math.min(topLevelFirstRowIndex+paginationModel.pageSize-1,visibleTopLevelRowCount-1);if(-1===topLevelFirstRowIndex||-1===topLevelLastRowIndex)return null;if(rowTreeDepth<2)return{firstRowIndex:topLevelFirstRowIndex,lastRowIndex:topLevelLastRowIndex};const topLevelFirstRow=visibleSortedTopLevelRowEntries[topLevelFirstRowIndex],topLevelRowsInCurrentPageCount=topLevelLastRowIndex-topLevelFirstRowIndex+1,firstRowIndex=visibleSortedRowEntries.findIndex((row=>row.id===topLevelFirstRow.id));let lastRowIndex=firstRowIndex,topLevelRowAdded=0;for(;lastRowIndex<visibleSortedRowEntries.length&&topLevelRowAdded<=topLevelRowsInCurrentPageCount;){const depth=rowTree[visibleSortedRowEntries[lastRowIndex].id].depth;(topLevelRowAdded<topLevelRowsInCurrentPageCount||depth>0)&&(lastRowIndex+=1),0===depth&&(topLevelRowAdded+=1)}return{firstRowIndex,lastRowIndex:lastRowIndex-1}}))),gridPaginatedVisibleSortedGridRowEntriesSelector=createSelector_createSelector(gridExpandedSortedRowEntriesSelector,gridPaginationRowRangeSelector,((visibleSortedRowEntries,paginationRange)=>paginationRange?visibleSortedRowEntries.slice(paginationRange.firstRowIndex,paginationRange.lastRowIndex+1):[])),gridPaginatedVisibleSortedGridRowIdsSelector=createSelector_createSelector(gridExpandedSortedRowIdsSelector,gridPaginationRowRangeSelector,((visibleSortedRowIds,paginationRange)=>paginationRange?visibleSortedRowIds.slice(paginationRange.firstRowIndex,paginationRange.lastRowIndex+1):[])),GridHeaderCheckbox_excluded=["field","colDef"],GridHeaderCheckbox=react.forwardRef((function GridHeaderCheckbox(props,ref){var _rootProps$slotProps;const other=(0,objectWithoutPropertiesLoose.Z)(props,GridHeaderCheckbox_excluded),[,forceUpdate]=react.useState(!1),apiRef=(0,utils_useGridApiContext.l)(),rootProps=(0,useGridRootProps.B)(),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["checkboxInput"]},getDataGridUtilityClass,classes)})({classes:rootProps.classes}),tabIndexState=useGridSelector(apiRef,gridTabIndexColumnHeaderSelector),selection=useGridSelector(apiRef,gridRowSelectionStateSelector),visibleRowIds=useGridSelector(apiRef,gridExpandedSortedRowIdsSelector),paginatedVisibleRowIds=useGridSelector(apiRef,gridPaginatedVisibleSortedGridRowIdsSelector),filteredSelection=react.useMemo((()=>"function"!=typeof rootProps.isRowSelectable?selection:selection.filter((id=>!!apiRef.current.getRow(id)&&rootProps.isRowSelectable(apiRef.current.getRowParams(id))))),[apiRef,rootProps.isRowSelectable,selection]),selectionCandidates=react.useMemo((()=>(rootProps.pagination&&rootProps.checkboxSelectionVisibleOnly?paginatedVisibleRowIds:visibleRowIds).reduce(((acc,id)=>(acc[id]=!0,acc)),{})),[rootProps.pagination,rootProps.checkboxSelectionVisibleOnly,paginatedVisibleRowIds,visibleRowIds]),currentSelectionSize=react.useMemo((()=>filteredSelection.filter((id=>selectionCandidates[id])).length),[filteredSelection,selectionCandidates]),isIndeterminate=currentSelectionSize>0&&currentSelectionSize<Object.keys(selectionCandidates).length,isChecked=currentSelectionSize>0,tabIndex=null!==tabIndexState&&tabIndexState.field===props.field?0:-1;react.useLayoutEffect((()=>{const element=apiRef.current.getColumnHeaderElement(props.field);0===tabIndex&&element&&(element.tabIndex=-1)}),[tabIndex,apiRef,props.field]);const handleKeyDown=react.useCallback((event=>{" "===event.key&&apiRef.current.publishEvent("headerSelectionCheckboxChange",{value:!isChecked})}),[apiRef,isChecked]),handleSelectionChange=react.useCallback((()=>{forceUpdate((p=>!p))}),[]);react.useEffect((()=>apiRef.current.subscribeEvent("rowSelectionChange",handleSelectionChange)),[apiRef,handleSelectionChange]);const label=apiRef.current.getLocaleText(isChecked?"checkboxSelectionUnselectAllRows":"checkboxSelectionSelectAllRows");return(0,jsx_runtime.jsx)(rootProps.slots.baseCheckbox,(0,esm_extends.Z)({ref,indeterminate:isIndeterminate,checked:isChecked,onChange:event=>{const params={value:event.target.checked};apiRef.current.publishEvent("headerSelectionCheckboxChange",params)},className:classes.root,inputProps:{"aria-label":label},tabIndex,onKeyDown:handleKeyDown},null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.baseCheckbox,other))})),GRID_CHECKBOX_SELECTION_COL_DEF=(0,esm_extends.Z)({},GRID_BOOLEAN_COL_DEF,{field:"__check__",type:"checkboxSelection",width:50,resizable:!1,sortable:!1,filterable:!1,aggregable:!1,disableColumnMenu:!0,disableReorder:!0,disableExport:!0,getApplyQuickFilterFn:void 0,valueGetter:params=>void 0!==selectedIdsLookupSelector(params.api.state,params.api.instanceId)[params.id],renderHeader:params=>(0,jsx_runtime.jsx)(GridHeaderCheckbox,(0,esm_extends.Z)({},params)),renderCell:params=>(0,jsx_runtime.jsx)(GridCellCheckboxRenderer,(0,esm_extends.Z)({},params))}),serializeCellValue=(value,delimiterCharacter)=>{if("string"==typeof value){const formattedValue=value.replace(/"/g,'""');return[delimiterCharacter,"\n","\r"].some((delimiter=>formattedValue.includes(delimiter)))?`"${formattedValue}"`:formattedValue}return value};(0,warning.b)(["MUI: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.","You can provide a `valueFormatter` with a string representation to be used."]);function buildCSV(options){const{columns,rowIds,getCellParams,delimiterCharacter,includeHeaders}=options,CSVBody=rowIds.reduce(((acc,id)=>`${acc}${((id,columns,getCellParams,delimiterCharacter)=>columns.map((column=>{const cellParams=getCellParams(id,column.field);return serializeCellValue(cellParams.formattedValue,delimiterCharacter)})))(id,columns,getCellParams,delimiterCharacter).join(delimiterCharacter)}\r\n`),"").trim();if(!includeHeaders)return CSVBody;return`${`${columns.filter((column=>column.field!==GRID_CHECKBOX_SELECTION_COL_DEF.field)).map((column=>serializeCellValue(column.headerName||column.field,delimiterCharacter))).join(delimiterCharacter)}\r\n`}${CSVBody}`.trim()}const getColumnsToExport=({apiRef,options})=>{const columns=gridColumnDefinitionsSelector(apiRef);if(options.fields)return options.fields.map((field=>columns.find((column=>column.field===field)))).filter((column=>!!column));return(options.allColumns?columns:gridVisibleColumnDefinitionsSelector(apiRef)).filter((column=>!column.disableExport))},defaultGetRowsToExport=({apiRef})=>{var _pinnedRows$top,_pinnedRows$bottom;const filteredSortedRowIds=gridFilteredSortedRowIdsSelector(apiRef),rowTree=gridRowTreeSelector(apiRef),selectedRows=apiRef.current.getSelectedRows(),bodyRows=filteredSortedRowIds.filter((id=>"footer"!==rowTree[id].type)),pinnedRows=gridPinnedRowsSelector(apiRef),topPinnedRowsIds=(null==pinnedRows||null==(_pinnedRows$top=pinnedRows.top)?void 0:_pinnedRows$top.map((row=>row.id)))||[],bottomPinnedRowsIds=(null==pinnedRows||null==(_pinnedRows$bottom=pinnedRows.bottom)?void 0:_pinnedRows$bottom.map((row=>row.id)))||[];return bodyRows.unshift(...topPinnedRowsIds),bodyRows.push(...bottomPinnedRowsIds),selectedRows.size>0?bodyRows.filter((id=>selectedRows.has(id))):bodyRows};var MenuItem=__webpack_require__("./node_modules/@mui/material/MenuItem/MenuItem.js");const GridToolbarExport_excluded=["hideMenu","options"],GridToolbarExport_excluded2=["hideMenu","options"];function GridCsvExportMenuItem(props){const apiRef=(0,utils_useGridApiContext.l)(),{hideMenu,options}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridToolbarExport_excluded);return(0,jsx_runtime.jsx)(MenuItem.Z,(0,esm_extends.Z)({onClick:()=>{apiRef.current.exportDataAsCsv(options),null==hideMenu||hideMenu()}},other,{children:apiRef.current.getLocaleText("toolbarExportCSV")}))}function GridPrintExportMenuItem(props){const apiRef=(0,utils_useGridApiContext.l)(),{hideMenu,options}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridToolbarExport_excluded2);return(0,jsx_runtime.jsx)(MenuItem.Z,(0,esm_extends.Z)({onClick:()=>{apiRef.current.exportDataAsPrint(options),null==hideMenu||hideMenu()}},other,{children:apiRef.current.getLocaleText("toolbarExportPrint")}))}const useGridCsvExport=apiRef=>{const logger=useGridLogger(apiRef,"useGridCsvExport"),getDataAsCsv=react.useCallback(((options={})=>{var _options$getRowsToExp,_options$includeHeade;logger.debug("Get data as CSV");return buildCSV({columns:getColumnsToExport({apiRef,options}),rowIds:(null!=(_options$getRowsToExp=options.getRowsToExport)?_options$getRowsToExp:defaultGetRowsToExport)({apiRef}),getCellParams:apiRef.current.getCellParams,delimiterCharacter:options.delimiter||",",includeHeaders:null==(_options$includeHeade=options.includeHeaders)||_options$includeHeade})}),[logger,apiRef]),exportDataAsCsv=react.useCallback((options=>{logger.debug("Export data as CSV");const csv=getDataAsCsv(options);!function exportAs(blob,extension="csv",filename=document.title||"untitled"){const fullName=`${filename}.${extension}`;if("download"in HTMLAnchorElement.prototype){const url=URL.createObjectURL(blob),a=document.createElement("a");return a.href=url,a.download=fullName,a.click(),void setTimeout((()=>{URL.revokeObjectURL(url)}))}throw new Error("MUI: exportAs not supported")}(new Blob([null!=options&&options.utf8WithBom?new Uint8Array([239,187,191]):"",csv],{type:"text/csv"}),"csv",null==options?void 0:options.fileName)}),[logger,getDataAsCsv]);useGridApiMethod(apiRef,{getDataAsCsv,exportDataAsCsv},"public");const addExportMenuButtons=react.useCallback(((initialValue,options)=>{var _options$csvOptions;return null!=(_options$csvOptions=options.csvOptions)&&_options$csvOptions.disableToolbarButton?initialValue:[...initialValue,{component:(0,jsx_runtime.jsx)(GridCsvExportMenuItem,{options:options.csvOptions}),componentName:"csvExport"}]}),[]);useGridRegisterPipeProcessor(apiRef,"exportMenu",addExportMenuButtons)};var ownerDocument=__webpack_require__("./node_modules/@mui/utils/esm/ownerDocument.js");const gridRowsMetaSelector=state=>state.rowsMeta;const useGridPrintExport=(apiRef,props)=>{const logger=useGridLogger(apiRef,"useGridPrintExport"),doc=react.useRef(null),previousGridState=react.useRef(null),previousColumnVisibility=react.useRef({});react.useEffect((()=>{doc.current=(0,ownerDocument.Z)(apiRef.current.rootElementRef.current)}),[apiRef]);const updateGridColumnsForPrint=react.useCallback(((fields,allColumns)=>new Promise((resolve=>{if(!fields&&!allColumns)return void resolve();const exportedColumnFields=getColumnsToExport({apiRef,options:{fields,allColumns}}).map((column=>column.field)),columns=gridColumnDefinitionsSelector(apiRef),newColumnVisibilityModel={};columns.forEach((column=>{newColumnVisibilityModel[column.field]=exportedColumnFields.includes(column.field)})),apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel),resolve()}))),[apiRef]),handlePrintWindowLoad=react.useCallback(((printWindow,options)=>{var _querySelector,_querySelector2;const normalizeOptions=(0,esm_extends.Z)({copyStyles:!0,hideToolbar:!1,hideFooter:!1},options),printDoc=printWindow.contentDocument;if(!printDoc)return;const rowsMeta=gridRowsMetaSelector(apiRef.current.state),gridRootElement=apiRef.current.rootElementRef.current,gridClone=gridRootElement.cloneNode(!0);gridClone.querySelector(`.${gridClasses_gridClasses.main}`).style.overflow="visible",gridClone.style.contain="size";gridClone.querySelector(`.${gridClasses_gridClasses.columnHeaders}`).querySelector(`.${gridClasses_gridClasses.columnHeadersInner}`).style.width="100%";let gridToolbarElementHeight=(null==(_querySelector=gridRootElement.querySelector(`.${gridClasses_gridClasses.toolbarContainer}`))?void 0:_querySelector.offsetHeight)||0,gridFooterElementHeight=(null==(_querySelector2=gridRootElement.querySelector(`.${gridClasses_gridClasses.footerContainer}`))?void 0:_querySelector2.offsetHeight)||0;var _gridClone$querySelec,_gridClone$querySelec2;normalizeOptions.hideToolbar&&(null==(_gridClone$querySelec=gridClone.querySelector(`.${gridClasses_gridClasses.toolbarContainer}`))||_gridClone$querySelec.remove(),gridToolbarElementHeight=0);normalizeOptions.hideFooter&&(null==(_gridClone$querySelec2=gridClone.querySelector(`.${gridClasses_gridClasses.footerContainer}`))||_gridClone$querySelec2.remove(),gridFooterElementHeight=0);gridClone.style.height=`${rowsMeta.currentPageTotalHeight+getTotalHeaderHeight(apiRef,props.columnHeaderHeight)+gridToolbarElementHeight+gridFooterElementHeight}px`,gridClone.style.boxSizing="content-box";const container=document.createElement("div");container.appendChild(gridClone),printDoc.body.innerHTML=container.innerHTML;const defaultPageStyle="function"==typeof normalizeOptions.pageStyle?normalizeOptions.pageStyle():normalizeOptions.pageStyle;if("string"==typeof defaultPageStyle){const styleElement=printDoc.createElement("style");styleElement.appendChild(printDoc.createTextNode(defaultPageStyle)),printDoc.head.appendChild(styleElement)}if(normalizeOptions.bodyClassName&&printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(" ")),normalizeOptions.copyStyles){const headStyleElements=doc.current.querySelectorAll("style, link[rel='stylesheet']");for(let i=0;i<headStyleElements.length;i+=1){const node=headStyleElements[i];if("STYLE"===node.tagName){const newHeadStyleElements=printDoc.createElement(node.tagName),sheet=node.sheet;if(sheet){let styleCSS="";for(let j=0;j<sheet.cssRules.length;j+=1)"string"==typeof sheet.cssRules[j].cssText&&(styleCSS+=`${sheet.cssRules[j].cssText}\r\n`);newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS)),printDoc.head.appendChild(newHeadStyleElements)}}else if(node.getAttribute("href")){const newHeadStyleElements=printDoc.createElement(node.tagName);for(let j=0;j<node.attributes.length;j+=1){const attr=node.attributes[j];attr&&newHeadStyleElements.setAttribute(attr.nodeName,attr.nodeValue||"")}printDoc.head.appendChild(newHeadStyleElements)}}}printWindow.contentWindow.print()}),[apiRef,doc,props.columnHeaderHeight]),handlePrintWindowAfterPrint=react.useCallback((printWindow=>{var _previousGridState$cu,_previousGridState$cu2;doc.current.body.removeChild(printWindow),apiRef.current.restoreState(previousGridState.current||{}),null!=(_previousGridState$cu=previousGridState.current)&&null!=(_previousGridState$cu2=_previousGridState$cu.columns)&&_previousGridState$cu2.columnVisibilityModel||apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current),apiRef.current.unstable_enableVirtualization(),previousGridState.current=null,previousColumnVisibility.current={}}),[apiRef]),exportDataAsPrint=react.useCallback((async options=>{if(logger.debug("Export data as Print"),!apiRef.current.rootElementRef.current)throw new Error("MUI: No grid root element available.");if(previousGridState.current=apiRef.current.exportState(),previousColumnVisibility.current=gridColumnVisibilityModelSelector(apiRef),props.pagination){const visibleRowCount=gridExpandedRowCountSelector(apiRef);apiRef.current.setPageSize(visibleRowCount)}await updateGridColumnsForPrint(null==options?void 0:options.fields,null==options?void 0:options.allColumns),apiRef.current.unstable_disableVirtualization(),await function raf(){return new Promise((resolve=>{requestAnimationFrame((()=>{resolve()}))}))}();const printWindow=function buildPrintWindow(title){const iframeEl=document.createElement("iframe");return iframeEl.style.position="absolute",iframeEl.style.width="0px",iframeEl.style.height="0px",iframeEl.title=title||document.title,iframeEl}(null==options?void 0:options.fileName);printWindow.onload=()=>{handlePrintWindowLoad(printWindow,options);printWindow.contentWindow.matchMedia("print").addEventListener("change",(mql=>{!1===mql.matches&&handlePrintWindowAfterPrint(printWindow)}))},doc.current.body.appendChild(printWindow)}),[props,logger,apiRef,handlePrintWindowLoad,handlePrintWindowAfterPrint,updateGridColumnsForPrint]);useGridApiMethod(apiRef,{exportDataAsPrint},"public");const addExportMenuButtons=react.useCallback(((initialValue,options)=>{var _options$printOptions;return null!=(_options$printOptions=options.printOptions)&&_options$printOptions.disableToolbarButton?initialValue:[...initialValue,{component:(0,jsx_runtime.jsx)(GridPrintExportMenuItem,{options:options.printOptions}),componentName:"printExport"}]}),[]);useGridRegisterPipeProcessor(apiRef,"exportMenu",addExportMenuButtons)};var GridLogicOperator=function(GridLogicOperator){return GridLogicOperator.And="and",GridLogicOperator.Or="or",GridLogicOperator}(GridLogicOperator||{});const getDefaultGridFilterModel=()=>({items:[],logicOperator:GridLogicOperator.And,quickFilterValues:[],quickFilterLogicOperator:GridLogicOperator.And}),useGridRegisterStrategyProcessor=(apiRef,strategyName,group,processor)=>{const registerPreProcessor=react.useCallback((()=>{apiRef.current.registerStrategyProcessor(strategyName,group,processor)}),[apiRef,processor,group,strategyName]);useFirstRender((()=>{registerPreProcessor()}));const isFirstRender=react.useRef(!0);react.useEffect((()=>{isFirstRender.current?isFirstRender.current=!1:registerPreProcessor()}),[registerPreProcessor])},cleanFilterItem=(item,apiRef)=>{const cleanItem=(0,esm_extends.Z)({},item);if(null==cleanItem.id&&(cleanItem.id=Math.round(1e5*Math.random())),null==cleanItem.operator){const column=gridColumnLookupSelector(apiRef)[cleanItem.field];cleanItem.operator=column&&column.filterOperators[0].value}return cleanItem},filterModelDisableMultiColumnsFilteringWarning=(0,warning.b)(["MUI: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.","If you are using the community version of the `DataGrid`, this prop is always `true`."],"error"),filterModelMissingItemIdWarning=(0,warning.b)("MUI: The `id` field is required on `filterModel.items` when you use multiple filters.","error"),filterModelMissingItemOperatorWarning=(0,warning.b)("MUI: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.","error"),sanitizeFilterModel=(model,disableMultipleColumnsFiltering,apiRef)=>{const hasSeveralItems=model.items.length>1;let items;hasSeveralItems&&disableMultipleColumnsFiltering?(filterModelDisableMultiColumnsFilteringWarning(),items=[model.items[0]]):items=model.items;const hasItemsWithoutIds=hasSeveralItems&&items.some((item=>null==item.id)),hasItemWithoutOperator=items.some((item=>null==item.operator));return hasItemsWithoutIds&&filterModelMissingItemIdWarning(),hasItemWithoutOperator&&filterModelMissingItemOperatorWarning(),hasItemWithoutOperator||hasItemsWithoutIds?(0,esm_extends.Z)({},model,{items:items.map((item=>cleanFilterItem(item,apiRef)))}):model.items!==items?(0,esm_extends.Z)({},model,{items}):model},mergeStateWithFilterModel=(filterModel,disableMultipleColumnsFiltering,apiRef)=>filteringState=>(0,esm_extends.Z)({},filteringState,{filterModel:sanitizeFilterModel(filterModel,disableMultipleColumnsFiltering,apiRef)}),getFilterCallbackFromItem=(filterItem,apiRef)=>{if(!filterItem.field||!filterItem.operator)return null;const column=apiRef.current.getColumn(filterItem.field);if(!column)return null;let parsedValue;if(column.valueParser){var _filterItem$value;const parser=column.valueParser;parsedValue=Array.isArray(filterItem.value)?null==(_filterItem$value=filterItem.value)?void 0:_filterItem$value.map((x=>parser(x))):parser(filterItem.value)}else parsedValue=filterItem.value;const newFilterItem=(0,esm_extends.Z)({},filterItem,{value:parsedValue}),filterOperators=column.filterOperators;if(null==filterOperators||!filterOperators.length)throw new Error(`MUI: No filter operators found for column '${column.field}'.`);const filterOperator=filterOperators.find((operator=>operator.value===newFilterItem.operator));if(!filterOperator)throw new Error(`MUI: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);const applyFilterOnRow=filterOperator.getApplyFilterFn(newFilterItem,column);if("function"!=typeof applyFilterOnRow)return null;return{fn:rowId=>{const cellParams=apiRef.current.getCellParams(rowId,newFilterItem.field);return applyFilterOnRow(cellParams)},item:newFilterItem}},buildAggregatedFilterApplier=(filterModel,apiRef)=>{const isRowMatchingFilterItems=((filterModel,apiRef)=>{const{items}=filterModel,appliers=items.map((item=>getFilterCallbackFromItem(item,apiRef))).filter((callback=>!!callback));return 0===appliers.length?null:(rowId,shouldApplyFilter)=>{const resultPerItemId={};return(shouldApplyFilter?appliers.filter((applier=>shouldApplyFilter(applier.item.field))):appliers).forEach((applier=>{resultPerItemId[applier.item.id]=applier.fn(rowId)})),resultPerItemId}})(filterModel,apiRef),isRowMatchingQuickFilter=((filterModel,apiRef)=>{const{quickFilterValues=[]}=filterModel;if(0===quickFilterValues.length)return null;const columnsFields=gridColumnFieldsSelector(apiRef),appliersPerField={};columnsFields.forEach((field=>{const column=apiRef.current.getColumn(field),getApplyQuickFilterFn=null==column?void 0:column.getApplyQuickFilterFn;getApplyQuickFilterFn&&(appliersPerField[field]=quickFilterValues.map((value=>getApplyQuickFilterFn(value,column,apiRef))))}));const sanitizedQuickFilterValues=quickFilterValues.filter(((value,index)=>Object.keys(appliersPerField).some((field=>null!=appliersPerField[field][index]))));return 0===sanitizedQuickFilterValues.length?null:(rowId,shouldApplyFilter)=>{const usedCellParams={},fieldsToFilter=[];Object.keys(appliersPerField).forEach((field=>{shouldApplyFilter&&!shouldApplyFilter(field)||(usedCellParams[field]=apiRef.current.getCellParams(rowId,field),fieldsToFilter.push(field))}));const quickFilterValueResult={};return sanitizedQuickFilterValues.forEach(((value,index)=>{const isPassing=fieldsToFilter.some((field=>{var _appliersPerField$fie,_appliersPerField$fie2;return null!=appliersPerField[field][index]&&(null==(_appliersPerField$fie=(_appliersPerField$fie2=appliersPerField[field])[index])?void 0:_appliersPerField$fie.call(_appliersPerField$fie2,usedCellParams[field]))}));quickFilterValueResult[value]=isPassing})),quickFilterValueResult}})(filterModel,apiRef);return(rowId,shouldApplyFilter)=>({passingFilterItems:isRowMatchingFilterItems&&isRowMatchingFilterItems(rowId,shouldApplyFilter),passingQuickFilterValues:isRowMatchingQuickFilter&&isRowMatchingQuickFilter(rowId,shouldApplyFilter)})},passFilterLogic=(allFilterItemResults,allQuickFilterResults,filterModel,apiRef)=>{var _filterModel$quickFil,_filterModel$logicOpe;const cleanedFilterItems=filterModel.items.filter((item=>null!==getFilterCallbackFromItem(item,apiRef))),cleanedAllFilterItemResults=allFilterItemResults.filter((result=>null!=result)),cleanedAllQuickFilterResults=allQuickFilterResults.filter((result=>null!=result)),quickFilterLogicOperator=null!=(_filterModel$quickFil=filterModel.quickFilterLogicOperator)?_filterModel$quickFil:getDefaultGridFilterModel().quickFilterLogicOperator,logicOperator=null!=(_filterModel$logicOpe=filterModel.logicOperator)?_filterModel$logicOpe:getDefaultGridFilterModel().logicOperator;if(cleanedAllFilterItemResults.length>0){const filterItemPredicate=item=>cleanedAllFilterItemResults.some((filterItemResult=>filterItemResult[item.id]));if(logicOperator===GridLogicOperator.And){if(!cleanedFilterItems.every(filterItemPredicate))return!1}else{if(!cleanedFilterItems.some(filterItemPredicate))return!1}}if(cleanedAllQuickFilterResults.length>0&&null!=filterModel.quickFilterValues){const quickFilterValuePredicate=value=>cleanedAllQuickFilterResults.some((quickFilterValueResult=>quickFilterValueResult[value]));if(quickFilterLogicOperator===GridLogicOperator.And){if(!filterModel.quickFilterValues.every(quickFilterValuePredicate))return!1}else{if(!filterModel.quickFilterValues.some(quickFilterValuePredicate))return!1}}return!0},filterStateInitializer=(state,props,apiRef)=>{var _ref,_props$filterModel,_props$initialState,_props$initialState$f;const filterModel=null!=(_ref=null!=(_props$filterModel=props.filterModel)?_props$filterModel:null==(_props$initialState=props.initialState)||null==(_props$initialState$f=_props$initialState.filter)?void 0:_props$initialState$f.filterModel)?_ref:getDefaultGridFilterModel();return(0,esm_extends.Z)({},state,{filter:{filterModel:sanitizeFilterModel(filterModel,props.disableMultipleColumnsFiltering,apiRef),visibleRowsLookup:{},filteredDescendantCountLookup:{}}})},getVisibleRows=(apiRef,props)=>{let rows,range;return props.pagination&&"client"===props.paginationMode?(range=gridPaginationRowRangeSelector(apiRef),rows=gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef)):(rows=gridExpandedSortedRowEntriesSelector(apiRef),range=0===rows.length?null:{firstRowIndex:0,lastRowIndex:rows.length-1}),{rows,range}},useGridVisibleRows=(apiRef,props)=>{const response=getVisibleRows(apiRef,props);return react.useMemo((()=>({rows:response.rows,range:response.range})),[response.rows,response.range])},focusStateInitializer=state=>(0,esm_extends.Z)({},state,{focus:{cell:null,columnHeader:null,columnGroupHeader:null},tabIndex:{cell:null,columnHeader:null,columnGroupHeader:null}});const getLeftColumnIndex=({currentColIndex,firstColIndex,lastColIndex,direction})=>{if("rtl"===direction){if(currentColIndex<lastColIndex)return currentColIndex+1}else if("ltr"===direction&&currentColIndex>firstColIndex)return currentColIndex-1;return null},getRightColumnIndex=({currentColIndex,firstColIndex,lastColIndex,direction})=>{if("rtl"===direction){if(currentColIndex>firstColIndex)return currentColIndex-1}else if("ltr"===direction&&currentColIndex<lastColIndex)return currentColIndex+1;return null},useGridKeyboardNavigation=(apiRef,props)=>{const logger=useGridLogger(apiRef,"useGridKeyboardNavigation"),initialCurrentPageRows=useGridVisibleRows(apiRef,props).rows,theme=(0,useTheme.Z)(),currentPageRows=react.useMemo((()=>function enrichPageRowsWithPinnedRows(apiRef,rows){const pinnedRows=gridPinnedRowsSelector(apiRef)||{};return[...pinnedRows.top||[],...rows,...pinnedRows.bottom||[]]}(apiRef,initialCurrentPageRows)),[apiRef,initialCurrentPageRows]),goToCell=react.useCallback(((colIndex,rowId,closestColumnToUse="left")=>{const visibleSortedRows=gridExpandedSortedRowEntriesSelector(apiRef),nextCellColSpanInfo=apiRef.current.unstable_getCellColSpanInfo(rowId,colIndex);nextCellColSpanInfo&&nextCellColSpanInfo.spannedByColSpan&&("left"===closestColumnToUse?colIndex=nextCellColSpanInfo.leftVisibleCellIndex:"right"===closestColumnToUse&&(colIndex=nextCellColSpanInfo.rightVisibleCellIndex));const rowIndexRelativeToAllRows=visibleSortedRows.findIndex((row=>row.id===rowId));logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`),apiRef.current.scrollToIndexes({colIndex,rowIndex:rowIndexRelativeToAllRows});const field=apiRef.current.getVisibleColumns()[colIndex].field;apiRef.current.setCellFocus(rowId,field)}),[apiRef,logger]),goToHeader=react.useCallback(((colIndex,event)=>{logger.debug(`Navigating to header col ${colIndex}`),apiRef.current.scrollToIndexes({colIndex});const field=apiRef.current.getVisibleColumns()[colIndex].field;apiRef.current.setColumnHeaderFocus(field,event)}),[apiRef,logger]),goToGroupHeader=react.useCallback(((colIndex,depth,event)=>{logger.debug(`Navigating to header col ${colIndex}`),apiRef.current.scrollToIndexes({colIndex});const{field}=apiRef.current.getVisibleColumns()[colIndex];apiRef.current.setColumnGroupHeaderFocus(field,depth,event)}),[apiRef,logger]),getRowIdFromIndex=react.useCallback((rowIndex=>currentPageRows[rowIndex].id),[currentPageRows]),handleColumnHeaderKeyDown=react.useCallback(((params,event)=>{const headerTitleNode=event.currentTarget.querySelector(`.${gridClasses_gridClasses.columnHeaderTitleContainerContent}`);if(!!headerTitleNode&&headerTitleNode.contains(event.target)&&params.field!==GRID_CHECKBOX_SELECTION_COL_DEF.field)return;if(!apiRef.current.getRootDimensions())return;const viewportPageSize=apiRef.current.getViewportPageSize(),colIndexBefore=params.field?apiRef.current.getColumnIndex(params.field):0,lastRowIndexInPage=currentPageRows.length-1,lastColIndex=gridVisibleColumnDefinitionsSelector(apiRef).length-1,columnGroupMaxDepth=gridColumnGroupsHeaderMaxDepthSelector(apiRef);let shouldPreventDefault=!0;switch(event.key){case"ArrowDown":goToCell(colIndexBefore,getRowIdFromIndex(0));break;case"ArrowRight":{const rightColIndex=getRightColumnIndex({currentColIndex:colIndexBefore,firstColIndex:0,lastColIndex,direction:theme.direction});null!==rightColIndex&&goToHeader(rightColIndex,event);break}case"ArrowLeft":{const leftColIndex=getLeftColumnIndex({currentColIndex:colIndexBefore,firstColIndex:0,lastColIndex,direction:theme.direction});null!==leftColIndex&&goToHeader(leftColIndex,event);break}case"ArrowUp":columnGroupMaxDepth>0&&goToGroupHeader(colIndexBefore,columnGroupMaxDepth-1,event);break;case"PageDown":null!==lastRowIndexInPage&&goToCell(colIndexBefore,getRowIdFromIndex(Math.min(0+viewportPageSize,lastRowIndexInPage)));break;case"Home":goToHeader(0,event);break;case"End":goToHeader(lastColIndex,event);break;case"Enter":(event.ctrlKey||event.metaKey)&&apiRef.current.toggleColumnMenu(params.field);break;case" ":break;default:shouldPreventDefault=!1}shouldPreventDefault&&event.preventDefault()}),[apiRef,currentPageRows.length,theme.direction,goToCell,getRowIdFromIndex,goToHeader,goToGroupHeader]),focusedColumnGroup=useGridSelector(apiRef,unstable_gridFocusColumnGroupHeaderSelector),handleColumnGroupHeaderKeyDown=react.useCallback(((params,event)=>{if(!apiRef.current.getRootDimensions())return;if(null===focusedColumnGroup)return;const{field:currentField,depth:currentDepth}=focusedColumnGroup,{fields,depth,maxDepth}=params,viewportPageSize=apiRef.current.getViewportPageSize(),currentColIndex=apiRef.current.getColumnIndex(currentField),colIndexBefore=currentField?apiRef.current.getColumnIndex(currentField):0,lastRowIndexInPage=currentPageRows.length-1,lastColIndex=gridVisibleColumnDefinitionsSelector(apiRef).length-1;let shouldPreventDefault=!0;switch(event.key){case"ArrowDown":depth===maxDepth-1?goToHeader(currentColIndex,event):goToGroupHeader(currentColIndex,currentDepth+1,event);break;case"ArrowUp":depth>0&&goToGroupHeader(currentColIndex,currentDepth-1,event);break;case"ArrowRight":{const remainingRightColumns=fields.length-fields.indexOf(currentField)-1;currentColIndex+remainingRightColumns+1<=lastColIndex&&goToGroupHeader(currentColIndex+remainingRightColumns+1,currentDepth,event);break}case"ArrowLeft":{const remainingLeftColumns=fields.indexOf(currentField);currentColIndex-remainingLeftColumns-1>=0&&goToGroupHeader(currentColIndex-remainingLeftColumns-1,currentDepth,event);break}case"PageDown":null!==lastRowIndexInPage&&goToCell(colIndexBefore,getRowIdFromIndex(Math.min(0+viewportPageSize,lastRowIndexInPage)));break;case"Home":goToGroupHeader(0,currentDepth,event);break;case"End":goToGroupHeader(lastColIndex,currentDepth,event);break;case" ":break;default:shouldPreventDefault=!1}shouldPreventDefault&&event.preventDefault()}),[apiRef,focusedColumnGroup,currentPageRows.length,goToHeader,goToGroupHeader,goToCell,getRowIdFromIndex]),handleCellKeyDown=react.useCallback(((params,event)=>{if(!event.currentTarget.contains(event.target))return;const cellParams=apiRef.current.getCellParams(params.id,params.field);if(cellParams.cellMode===gridEditRowModel.Vl.Edit||!isNavigationKey(event.key))return;if(!apiRef.current.unstable_applyPipeProcessors("canUpdateFocus",!0,{event,cell:cellParams}))return;const dimensions=apiRef.current.getRootDimensions();if(0===currentPageRows.length||!dimensions)return;const direction=theme.direction,viewportPageSize=apiRef.current.getViewportPageSize(),colIndexBefore=params.field?apiRef.current.getColumnIndex(params.field):0,rowIndexBefore=currentPageRows.findIndex((row=>row.id===params.id)),lastRowIndexInPage=currentPageRows.length-1,lastColIndex=gridVisibleColumnDefinitionsSelector(apiRef).length-1;let shouldPreventDefault=!0;switch(event.key){case"ArrowDown":rowIndexBefore<lastRowIndexInPage&&goToCell(colIndexBefore,getRowIdFromIndex(rowIndexBefore+1));break;case"ArrowUp":rowIndexBefore>0?goToCell(colIndexBefore,getRowIdFromIndex(rowIndexBefore-1)):goToHeader(colIndexBefore,event);break;case"ArrowRight":{const rightColIndex=getRightColumnIndex({currentColIndex:colIndexBefore,firstColIndex:0,lastColIndex,direction});null!==rightColIndex&&goToCell(rightColIndex,getRowIdFromIndex(rowIndexBefore),"rtl"===direction?"left":"right");break}case"ArrowLeft":{const leftColIndex=getLeftColumnIndex({currentColIndex:colIndexBefore,firstColIndex:0,lastColIndex,direction});null!==leftColIndex&&goToCell(leftColIndex,getRowIdFromIndex(rowIndexBefore),"rtl"===direction?"right":"left");break}case"Tab":event.shiftKey&&colIndexBefore>0?goToCell(colIndexBefore-1,getRowIdFromIndex(rowIndexBefore),"left"):!event.shiftKey&&colIndexBefore<lastColIndex&&goToCell(colIndexBefore+1,getRowIdFromIndex(rowIndexBefore),"right");break;case" ":{if("__detail_panel_toggle__"===params.field)break;const colDef=params.colDef;if(colDef&&"treeDataGroup"===colDef.type)break;!event.shiftKey&&rowIndexBefore<lastRowIndexInPage&&goToCell(colIndexBefore,getRowIdFromIndex(Math.min(rowIndexBefore+viewportPageSize,lastRowIndexInPage)));break}case"PageDown":rowIndexBefore<lastRowIndexInPage&&goToCell(colIndexBefore,getRowIdFromIndex(Math.min(rowIndexBefore+viewportPageSize,lastRowIndexInPage)));break;case"PageUp":{const nextRowIndex=Math.max(rowIndexBefore-viewportPageSize,0);nextRowIndex!==rowIndexBefore&&nextRowIndex>=0?goToCell(colIndexBefore,getRowIdFromIndex(nextRowIndex)):goToHeader(colIndexBefore,event);break}case"Home":event.ctrlKey||event.metaKey||event.shiftKey?goToCell(0,getRowIdFromIndex(0)):goToCell(0,getRowIdFromIndex(rowIndexBefore));break;case"End":event.ctrlKey||event.metaKey||event.shiftKey?goToCell(lastColIndex,getRowIdFromIndex(lastRowIndexInPage)):goToCell(lastColIndex,getRowIdFromIndex(rowIndexBefore));break;default:shouldPreventDefault=!1}shouldPreventDefault&&event.preventDefault()}),[apiRef,currentPageRows,theme.direction,getRowIdFromIndex,goToCell,goToHeader]);useGridApiEventHandler(apiRef,"columnHeaderKeyDown",handleColumnHeaderKeyDown),useGridApiEventHandler(apiRef,"columnGroupHeaderKeyDown",handleColumnGroupHeaderKeyDown),useGridApiEventHandler(apiRef,"cellKeyDown",handleCellKeyDown)},paginationStateInitializer=(state,props)=>{var _props$paginationMode,_props$initialState,_props$initialState$p;const paginationModel=(0,esm_extends.Z)({},getDefaultGridPaginationModel(props.autoPageSize),null!=(_props$paginationMode=props.paginationModel)?_props$paginationMode:null==(_props$initialState=props.initialState)||null==(_props$initialState$p=_props$initialState.pagination)?void 0:_props$initialState$p.paginationModel);return throwIfPageSizeExceedsTheLimit(paginationModel.pageSize,props.signature),(0,esm_extends.Z)({},state,{pagination:{paginationModel}})},mergeStateWithPaginationModel=(rowCount,signature,paginationModelProp)=>paginationState=>{var _paginationModelProp$;let paginationModel=paginationState.paginationModel;const pageSize=null!=(_paginationModelProp$=null==paginationModelProp?void 0:paginationModelProp.pageSize)?_paginationModelProp$:paginationModel.pageSize,pageCount=getPageCount(rowCount,pageSize);!paginationModelProp||(null==paginationModelProp?void 0:paginationModelProp.page)===paginationModel.page&&(null==paginationModelProp?void 0:paginationModelProp.pageSize)===paginationModel.pageSize||(paginationModel=paginationModelProp);const validPage=((page,pageCount=0)=>0===pageCount?page:Math.max(Math.min(page,pageCount-1),0))(paginationModel.page,pageCount);return validPage!==paginationModel.page&&(paginationModel=(0,esm_extends.Z)({},paginationModel,{page:validPage})),throwIfPageSizeExceedsTheLimit(paginationModel.pageSize,signature),{paginationModel}},gridPreferencePanelStateSelector=state=>state.preferencePanel,preferencePanelStateInitializer=(state,props)=>{var _props$initialState$p,_props$initialState;return(0,esm_extends.Z)({},state,{preferencePanel:null!=(_props$initialState$p=null==(_props$initialState=props.initialState)?void 0:_props$initialState.preferencePanel)?_props$initialState$p:{open:!1}})},gridEditRowsStateSelector=state=>state.editRows;var GridCellEditStartReasons=function(GridCellEditStartReasons){return GridCellEditStartReasons.enterKeyDown="enterKeyDown",GridCellEditStartReasons.cellDoubleClick="cellDoubleClick",GridCellEditStartReasons.printableKeyDown="printableKeyDown",GridCellEditStartReasons.deleteKeyDown="deleteKeyDown",GridCellEditStartReasons}(GridCellEditStartReasons||{}),GridCellEditStopReasons=function(GridCellEditStopReasons){return GridCellEditStopReasons.cellFocusOut="cellFocusOut",GridCellEditStopReasons.escapeKeyDown="escapeKeyDown",GridCellEditStopReasons.enterKeyDown="enterKeyDown",GridCellEditStopReasons.tabKeyDown="tabKeyDown",GridCellEditStopReasons.shiftTabKeyDown="shiftTabKeyDown",GridCellEditStopReasons}(GridCellEditStopReasons||{});const useGridCellEditing_excluded=["id","field"],useGridCellEditing_excluded2=["id","field"],missingOnProcessRowUpdateErrorWarning=(0,warning.b)(["MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.","To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.","For more detail, see http://mui.com/components/data-grid/editing/#persistence."],"error");var GridRowEditStartReasons=function(GridRowEditStartReasons){return GridRowEditStartReasons.enterKeyDown="enterKeyDown",GridRowEditStartReasons.cellDoubleClick="cellDoubleClick",GridRowEditStartReasons.printableKeyDown="printableKeyDown",GridRowEditStartReasons.deleteKeyDown="deleteKeyDown",GridRowEditStartReasons}(GridRowEditStartReasons||{}),GridRowEditStopReasons=function(GridRowEditStopReasons){return GridRowEditStopReasons.rowFocusOut="rowFocusOut",GridRowEditStopReasons.escapeKeyDown="escapeKeyDown",GridRowEditStopReasons.enterKeyDown="enterKeyDown",GridRowEditStopReasons.tabKeyDown="tabKeyDown",GridRowEditStopReasons.shiftTabKeyDown="shiftTabKeyDown",GridRowEditStopReasons}(GridRowEditStopReasons||{});const useGridRowEditing_excluded=["id"],useGridRowEditing_excluded2=["id"],useGridRowEditing_missingOnProcessRowUpdateErrorWarning=(0,warning.b)(["MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.","To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.","For more detail, see http://mui.com/components/data-grid/editing/#persistence."],"error"),editingStateInitializer=state=>(0,esm_extends.Z)({},state,{editRows:{}}),useGridEditing=(apiRef,props)=>{((apiRef,props)=>{const[cellModesModel,setCellModesModel]=react.useState({}),cellModesModelRef=react.useRef(cellModesModel),prevCellModesModel=react.useRef({}),{processRowUpdate,onProcessRowUpdateError,cellModesModel:cellModesModelProp,onCellModesModelChange}=props,runIfEditModeIsCell=callback=>(...args)=>{props.editMode===gridEditRowModel.r2.Cell&&callback(...args)},throwIfNotEditable=react.useCallback(((id,field)=>{const params=apiRef.current.getCellParams(id,field);if(!apiRef.current.isCellEditable(params))throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`)}),[apiRef]),throwIfNotInMode=react.useCallback(((id,field,mode)=>{if(apiRef.current.getCellMode(id,field)!==mode)throw new Error(`MUI: The cell with id=${id} and field=${field} is not in ${mode} mode.`)}),[apiRef]),handleCellDoubleClick=react.useCallback(((params,event)=>{if(!params.isEditable)return;if(params.cellMode===gridEditRowModel.Vl.Edit)return;const newParams=(0,esm_extends.Z)({},params,{reason:GridCellEditStartReasons.cellDoubleClick});apiRef.current.publishEvent("cellEditStart",newParams,event)}),[apiRef]),handleCellFocusOut=react.useCallback(((params,event)=>{if(params.cellMode===gridEditRowModel.Vl.View)return;if(apiRef.current.getCellMode(params.id,params.field)===gridEditRowModel.Vl.View)return;const newParams=(0,esm_extends.Z)({},params,{reason:GridCellEditStopReasons.cellFocusOut});apiRef.current.publishEvent("cellEditStop",newParams,event)}),[apiRef]),handleCellKeyDown=react.useCallback(((params,event)=>{if(params.cellMode===gridEditRowModel.Vl.Edit){if(229===event.which)return;let reason;if("Escape"===event.key?reason=GridCellEditStopReasons.escapeKeyDown:"Enter"===event.key?reason=GridCellEditStopReasons.enterKeyDown:"Tab"===event.key&&(reason=event.shiftKey?GridCellEditStopReasons.shiftTabKeyDown:GridCellEditStopReasons.tabKeyDown,event.preventDefault()),reason){const newParams=(0,esm_extends.Z)({},params,{reason});apiRef.current.publishEvent("cellEditStop",newParams,event)}}else if(params.isEditable){let reason;if(" "===event.key)return;if(isPrintableKey(event)||(event.ctrlKey||event.metaKey)&&"v"===event.key?reason=GridCellEditStartReasons.printableKeyDown:"Enter"===event.key?reason=GridCellEditStartReasons.enterKeyDown:"Delete"!==event.key&&"Backspace"!==event.key||(reason=GridCellEditStartReasons.deleteKeyDown),reason){const newParams=(0,esm_extends.Z)({},params,{reason,key:event.key});apiRef.current.publishEvent("cellEditStart",newParams,event)}}}),[apiRef]),handleCellEditStart=react.useCallback((params=>{const{id,field,reason,key}=params,startCellEditModeParams={id,field};reason===GridCellEditStartReasons.printableKeyDown?react.version.startsWith("17")?startCellEditModeParams.deleteValue=!0:startCellEditModeParams.initialValue=key:reason===GridCellEditStartReasons.deleteKeyDown&&(startCellEditModeParams.deleteValue=!0),apiRef.current.startCellEditMode(startCellEditModeParams)}),[apiRef]),handleCellEditStop=react.useCallback((params=>{const{id,field,reason}=params;let cellToFocusAfter;apiRef.current.runPendingEditCellValueMutation(id,field),reason===GridCellEditStopReasons.enterKeyDown?cellToFocusAfter="below":reason===GridCellEditStopReasons.tabKeyDown?cellToFocusAfter="right":reason===GridCellEditStopReasons.shiftTabKeyDown&&(cellToFocusAfter="left");const ignoreModifications="escapeKeyDown"===reason;apiRef.current.stopCellEditMode({id,field,ignoreModifications,cellToFocusAfter})}),[apiRef]);useGridApiEventHandler(apiRef,"cellDoubleClick",runIfEditModeIsCell(handleCellDoubleClick)),useGridApiEventHandler(apiRef,"cellFocusOut",runIfEditModeIsCell(handleCellFocusOut)),useGridApiEventHandler(apiRef,"cellKeyDown",runIfEditModeIsCell(handleCellKeyDown)),useGridApiEventHandler(apiRef,"cellEditStart",runIfEditModeIsCell(handleCellEditStart)),useGridApiEventHandler(apiRef,"cellEditStop",runIfEditModeIsCell(handleCellEditStop)),useGridApiOptionHandler(apiRef,"cellEditStart",props.onCellEditStart),useGridApiOptionHandler(apiRef,"cellEditStop",props.onCellEditStop);const getCellMode=react.useCallback(((id,field)=>{const editingState=gridEditRowsStateSelector(apiRef.current.state);return editingState[id]&&editingState[id][field]?gridEditRowModel.Vl.Edit:gridEditRowModel.Vl.View}),[apiRef]),updateCellModesModel=(0,useEventCallback.Z)((newModel=>{const isNewModelDifferentFromProp=newModel!==props.cellModesModel;onCellModesModelChange&&isNewModelDifferentFromProp&&onCellModesModelChange(newModel,{}),props.cellModesModel&&isNewModelDifferentFromProp||(setCellModesModel(newModel),cellModesModelRef.current=newModel,apiRef.current.publishEvent("cellModesModelChange",newModel))})),updateFieldInCellModesModel=react.useCallback(((id,field,newProps)=>{const newModel=(0,esm_extends.Z)({},cellModesModelRef.current);if(null!==newProps)newModel[id]=(0,esm_extends.Z)({},newModel[id],{[field]:(0,esm_extends.Z)({},newProps)});else{const _newModel$id=newModel[id],otherFields=(0,objectWithoutPropertiesLoose.Z)(_newModel$id,[field].map(_toPropertyKey));newModel[id]=otherFields,0===Object.keys(newModel[id]).length&&delete newModel[id]}updateCellModesModel(newModel)}),[updateCellModesModel]),updateOrDeleteFieldState=react.useCallback(((id,field,newProps)=>{apiRef.current.setState((state=>{const newEditingState=(0,esm_extends.Z)({},state.editRows);return null!==newProps?newEditingState[id]=(0,esm_extends.Z)({},newEditingState[id],{[field]:(0,esm_extends.Z)({},newProps)}):(delete newEditingState[id][field],0===Object.keys(newEditingState[id]).length&&delete newEditingState[id]),(0,esm_extends.Z)({},state,{editRows:newEditingState})})),apiRef.current.forceUpdate()}),[apiRef]),startCellEditMode=react.useCallback((params=>{const{id,field}=params,other=(0,objectWithoutPropertiesLoose.Z)(params,useGridCellEditing_excluded);throwIfNotEditable(id,field),throwIfNotInMode(id,field,gridEditRowModel.Vl.View),updateFieldInCellModesModel(id,field,(0,esm_extends.Z)({mode:gridEditRowModel.Vl.Edit},other))}),[throwIfNotEditable,throwIfNotInMode,updateFieldInCellModesModel]),updateStateToStartCellEditMode=(0,useEventCallback.Z)((params=>{const{id,field,deleteValue,initialValue}=params;let newValue=apiRef.current.getCellValue(id,field);(deleteValue||initialValue)&&(newValue=deleteValue?"":initialValue),updateOrDeleteFieldState(id,field,{value:newValue,error:!1,isProcessingProps:!1}),apiRef.current.setCellFocus(id,field)})),stopCellEditMode=react.useCallback((params=>{const{id,field}=params,other=(0,objectWithoutPropertiesLoose.Z)(params,useGridCellEditing_excluded2);throwIfNotInMode(id,field,gridEditRowModel.Vl.Edit),updateFieldInCellModesModel(id,field,(0,esm_extends.Z)({mode:gridEditRowModel.Vl.View},other))}),[throwIfNotInMode,updateFieldInCellModesModel]),updateStateToStopCellEditMode=(0,useEventCallback.Z)((async params=>{const{id,field,ignoreModifications,cellToFocusAfter="none"}=params;throwIfNotInMode(id,field,gridEditRowModel.Vl.Edit),apiRef.current.runPendingEditCellValueMutation(id,field);const finishCellEditMode=()=>{updateOrDeleteFieldState(id,field,null),updateFieldInCellModesModel(id,field,null),"none"!==cellToFocusAfter&&apiRef.current.moveFocusToRelativeCell(id,field,cellToFocusAfter)};if(ignoreModifications)return void finishCellEditMode();const editingState=gridEditRowsStateSelector(apiRef.current.state),{error,isProcessingProps}=editingState[id][field];if(error||isProcessingProps)return prevCellModesModel.current[id][field].mode=gridEditRowModel.Vl.Edit,void updateFieldInCellModesModel(id,field,{mode:gridEditRowModel.Vl.Edit});const rowUpdate=apiRef.current.getRowWithUpdatedValuesFromCellEditing(id,field);if(processRowUpdate){const handleError=errorThrown=>{prevCellModesModel.current[id][field].mode=gridEditRowModel.Vl.Edit,updateFieldInCellModesModel(id,field,{mode:gridEditRowModel.Vl.Edit}),onProcessRowUpdateError?onProcessRowUpdateError(errorThrown):missingOnProcessRowUpdateErrorWarning()};try{const row=apiRef.current.getRow(id);Promise.resolve(processRowUpdate(rowUpdate,row)).then((finalRowUpdate=>{apiRef.current.updateRows([finalRowUpdate]),finishCellEditMode()})).catch(handleError)}catch(errorThrown){handleError(errorThrown)}}else apiRef.current.updateRows([rowUpdate]),finishCellEditMode()})),editingPrivateApi={setCellEditingEditCellValue:react.useCallback((async params=>{var _editingState$id,_editingState$id$fiel;const{id,field,value,debounceMs,unstable_skipValueParser:skipValueParser}=params;throwIfNotEditable(id,field),throwIfNotInMode(id,field,gridEditRowModel.Vl.Edit);const column=apiRef.current.getColumn(field),row=apiRef.current.getRow(id);let parsedValue=value;column.valueParser&&!skipValueParser&&(parsedValue=column.valueParser(value,apiRef.current.getCellParams(id,field)));let editingState=gridEditRowsStateSelector(apiRef.current.state),newProps=(0,esm_extends.Z)({},editingState[id][field],{value:parsedValue,changeReason:debounceMs?"debouncedSetEditCellValue":"setEditCellValue"});if(column.preProcessEditCellProps){const hasChanged=value!==editingState[id][field].value;newProps=(0,esm_extends.Z)({},newProps,{isProcessingProps:!0}),updateOrDeleteFieldState(id,field,newProps),newProps=await Promise.resolve(column.preProcessEditCellProps({id,row,props:newProps,hasChanged}))}return apiRef.current.getCellMode(id,field)!==gridEditRowModel.Vl.View&&(editingState=gridEditRowsStateSelector(apiRef.current.state),newProps=(0,esm_extends.Z)({},newProps,{isProcessingProps:!1}),newProps.value=column.preProcessEditCellProps?editingState[id][field].value:parsedValue,updateOrDeleteFieldState(id,field,newProps),editingState=gridEditRowsStateSelector(apiRef.current.state),!(null!=(_editingState$id=editingState[id])&&null!=(_editingState$id$fiel=_editingState$id[field])&&_editingState$id$fiel.error))}),[apiRef,throwIfNotEditable,throwIfNotInMode,updateOrDeleteFieldState]),getRowWithUpdatedValuesFromCellEditing:react.useCallback(((id,field)=>{const column=apiRef.current.getColumn(field),editingState=gridEditRowsStateSelector(apiRef.current.state),row=apiRef.current.getRow(id);if(!editingState[id]||!editingState[id][field])return apiRef.current.getRow(id);const{value}=editingState[id][field];return column.valueSetter?column.valueSetter({value,row}):(0,esm_extends.Z)({},row,{[field]:value})}),[apiRef])};useGridApiMethod(apiRef,{getCellMode,startCellEditMode,stopCellEditMode},"public"),useGridApiMethod(apiRef,editingPrivateApi,"private"),react.useEffect((()=>{cellModesModelProp&&updateCellModesModel(cellModesModelProp)}),[cellModesModelProp,updateCellModesModel]),react.useEffect((()=>{const idToIdLookup=gridRowsDataRowIdToIdLookupSelector(apiRef),copyOfPrevCellModes=prevCellModesModel.current;prevCellModesModel.current=deepClone(cellModesModel),Object.entries(cellModesModel).forEach((([id,fields])=>{Object.entries(fields).forEach((([field,params])=>{var _copyOfPrevCellModes$,_copyOfPrevCellModes$2,_idToIdLookup$id;const prevMode=(null==(_copyOfPrevCellModes$=copyOfPrevCellModes[id])||null==(_copyOfPrevCellModes$2=_copyOfPrevCellModes$[field])?void 0:_copyOfPrevCellModes$2.mode)||gridEditRowModel.Vl.View,originalId=null!=(_idToIdLookup$id=idToIdLookup[id])?_idToIdLookup$id:id;params.mode===gridEditRowModel.Vl.Edit&&prevMode===gridEditRowModel.Vl.View?updateStateToStartCellEditMode((0,esm_extends.Z)({id:originalId,field},params)):params.mode===gridEditRowModel.Vl.View&&prevMode===gridEditRowModel.Vl.Edit&&updateStateToStopCellEditMode((0,esm_extends.Z)({id:originalId,field},params))}))}))}),[apiRef,cellModesModel,updateStateToStartCellEditMode,updateStateToStopCellEditMode])})(apiRef,props),((apiRef,props)=>{const[rowModesModel,setRowModesModel]=react.useState({}),rowModesModelRef=react.useRef(rowModesModel),prevRowModesModel=react.useRef({}),focusTimeout=react.useRef(null),nextFocusedCell=react.useRef(null),{processRowUpdate,onProcessRowUpdateError,rowModesModel:rowModesModelProp,onRowModesModelChange}=props,runIfEditModeIsRow=callback=>(...args)=>{props.editMode===gridEditRowModel.r2.Row&&callback(...args)},throwIfNotEditable=react.useCallback(((id,field)=>{const params=apiRef.current.getCellParams(id,field);if(!apiRef.current.isCellEditable(params))throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`)}),[apiRef]),throwIfNotInMode=react.useCallback(((id,mode)=>{if(apiRef.current.getRowMode(id)!==mode)throw new Error(`MUI: The row with id=${id} is not in ${mode} mode.`)}),[apiRef]),handleCellDoubleClick=react.useCallback(((params,event)=>{if(!params.isEditable)return;if(apiRef.current.getRowMode(params.id)===gridEditRowModel.se.Edit)return;const rowParams=apiRef.current.getRowParams(params.id),newParams=(0,esm_extends.Z)({},rowParams,{field:params.field,reason:GridRowEditStartReasons.cellDoubleClick});apiRef.current.publishEvent("rowEditStart",newParams,event)}),[apiRef]),handleCellFocusIn=react.useCallback((params=>{nextFocusedCell.current=params}),[]),handleCellFocusOut=react.useCallback(((params,event)=>{params.isEditable&&apiRef.current.getRowMode(params.id)!==gridEditRowModel.se.View&&(nextFocusedCell.current=null,focusTimeout.current=setTimeout((()=>{var _nextFocusedCell$curr;if(focusTimeout.current=null,(null==(_nextFocusedCell$curr=nextFocusedCell.current)?void 0:_nextFocusedCell$curr.id)!==params.id){if(!apiRef.current.getRow(params.id))return;if(apiRef.current.getRowMode(params.id)===gridEditRowModel.se.View)return;const rowParams=apiRef.current.getRowParams(params.id),newParams=(0,esm_extends.Z)({},rowParams,{field:params.field,reason:GridRowEditStopReasons.rowFocusOut});apiRef.current.publishEvent("rowEditStop",newParams,event)}})))}),[apiRef]);react.useEffect((()=>()=>{clearTimeout(focusTimeout.current)}),[]);const handleCellKeyDown=react.useCallback(((params,event)=>{if(params.cellMode===gridEditRowModel.se.Edit){if(229===event.which)return;let reason;if("Escape"===event.key)reason=GridRowEditStopReasons.escapeKeyDown;else if("Enter"===event.key)reason=GridRowEditStopReasons.enterKeyDown;else if("Tab"===event.key){const columnFields=gridColumnFieldsSelector(apiRef).filter((field=>apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id,field))));if(event.shiftKey?params.field===columnFields[0]&&(reason=GridRowEditStopReasons.shiftTabKeyDown):params.field===columnFields[columnFields.length-1]&&(reason=GridRowEditStopReasons.tabKeyDown),event.preventDefault(),!reason){const index=columnFields.findIndex((field=>field===params.field)),nextFieldToFocus=columnFields[event.shiftKey?index-1:index+1];apiRef.current.setCellFocus(params.id,nextFieldToFocus)}}if(reason){const rowParams=apiRef.current.getRowParams(params.id),newParams=(0,esm_extends.Z)({},rowParams,{reason,field:params.field});apiRef.current.publishEvent("rowEditStop",newParams,event)}}else if(params.isEditable){let reason;if(" "===event.key)return;if(isPrintableKey(event)||(event.ctrlKey||event.metaKey)&&"v"===event.key?reason=GridRowEditStartReasons.printableKeyDown:"Enter"===event.key?reason=GridRowEditStartReasons.enterKeyDown:"Delete"!==event.key&&"Backspace"!==event.key||(reason=GridRowEditStartReasons.deleteKeyDown),reason){const rowParams=apiRef.current.getRowParams(params.id),newParams=(0,esm_extends.Z)({},rowParams,{field:params.field,key:event.key,reason});apiRef.current.publishEvent("rowEditStart",newParams,event)}}}),[apiRef]),handleRowEditStart=react.useCallback((params=>{const{id,field,reason,key}=params,startRowEditModeParams={id,fieldToFocus:field};reason===GridRowEditStartReasons.printableKeyDown?react.version.startsWith("17")?startRowEditModeParams.deleteValue=!!field:startRowEditModeParams.initialValue=key:reason===GridRowEditStartReasons.deleteKeyDown&&(startRowEditModeParams.deleteValue=!!field),apiRef.current.startRowEditMode(startRowEditModeParams)}),[apiRef]),handleRowEditStop=react.useCallback((params=>{const{id,reason,field}=params;let cellToFocusAfter;apiRef.current.runPendingEditCellValueMutation(id),reason===GridRowEditStopReasons.enterKeyDown?cellToFocusAfter="below":reason===GridRowEditStopReasons.tabKeyDown?cellToFocusAfter="right":reason===GridRowEditStopReasons.shiftTabKeyDown&&(cellToFocusAfter="left");const ignoreModifications="escapeKeyDown"===reason;apiRef.current.stopRowEditMode({id,ignoreModifications,field,cellToFocusAfter})}),[apiRef]);useGridApiEventHandler(apiRef,"cellDoubleClick",runIfEditModeIsRow(handleCellDoubleClick)),useGridApiEventHandler(apiRef,"cellFocusIn",runIfEditModeIsRow(handleCellFocusIn)),useGridApiEventHandler(apiRef,"cellFocusOut",runIfEditModeIsRow(handleCellFocusOut)),useGridApiEventHandler(apiRef,"cellKeyDown",runIfEditModeIsRow(handleCellKeyDown)),useGridApiEventHandler(apiRef,"rowEditStart",runIfEditModeIsRow(handleRowEditStart)),useGridApiEventHandler(apiRef,"rowEditStop",runIfEditModeIsRow(handleRowEditStop)),useGridApiOptionHandler(apiRef,"rowEditStart",props.onRowEditStart),useGridApiOptionHandler(apiRef,"rowEditStop",props.onRowEditStop);const getRowMode=react.useCallback((id=>{if(props.editMode===gridEditRowModel.r2.Cell)return gridEditRowModel.se.View;const editingState=gridEditRowsStateSelector(apiRef.current.state);return editingState[id]&&Object.keys(editingState[id]).length>0?gridEditRowModel.se.Edit:gridEditRowModel.se.View}),[apiRef,props.editMode]),updateRowModesModel=(0,useEventCallback.Z)((newModel=>{const isNewModelDifferentFromProp=newModel!==props.rowModesModel;onRowModesModelChange&&isNewModelDifferentFromProp&&onRowModesModelChange(newModel,{}),props.rowModesModel&&isNewModelDifferentFromProp||(setRowModesModel(newModel),rowModesModelRef.current=newModel,apiRef.current.publishEvent("rowModesModelChange",newModel))})),updateRowInRowModesModel=react.useCallback(((id,newProps)=>{const newModel=(0,esm_extends.Z)({},rowModesModelRef.current);null!==newProps?newModel[id]=(0,esm_extends.Z)({},newProps):delete newModel[id],updateRowModesModel(newModel)}),[updateRowModesModel]),updateOrDeleteRowState=react.useCallback(((id,newProps)=>{apiRef.current.setState((state=>{const newEditingState=(0,esm_extends.Z)({},state.editRows);return null!==newProps?newEditingState[id]=newProps:delete newEditingState[id],(0,esm_extends.Z)({},state,{editRows:newEditingState})})),apiRef.current.forceUpdate()}),[apiRef]),updateOrDeleteFieldState=react.useCallback(((id,field,newProps)=>{apiRef.current.setState((state=>{const newEditingState=(0,esm_extends.Z)({},state.editRows);return null!==newProps?newEditingState[id]=(0,esm_extends.Z)({},newEditingState[id],{[field]:(0,esm_extends.Z)({},newProps)}):(delete newEditingState[id][field],0===Object.keys(newEditingState[id]).length&&delete newEditingState[id]),(0,esm_extends.Z)({},state,{editRows:newEditingState})})),apiRef.current.forceUpdate()}),[apiRef]),startRowEditMode=react.useCallback((params=>{const{id}=params,other=(0,objectWithoutPropertiesLoose.Z)(params,useGridRowEditing_excluded);throwIfNotInMode(id,gridEditRowModel.se.View),updateRowInRowModesModel(id,(0,esm_extends.Z)({mode:gridEditRowModel.se.Edit},other))}),[throwIfNotInMode,updateRowInRowModesModel]),updateStateToStartRowEditMode=(0,useEventCallback.Z)((params=>{const{id,fieldToFocus,deleteValue,initialValue}=params,newProps=gridColumnFieldsSelector(apiRef).reduce(((acc,field)=>{if(!apiRef.current.getCellParams(id,field).isEditable)return acc;let newValue=apiRef.current.getCellValue(id,field);return fieldToFocus===field&&(deleteValue||initialValue)&&(newValue=deleteValue?"":initialValue),acc[field]={value:newValue,error:!1,isProcessingProps:!1},acc}),{});updateOrDeleteRowState(id,newProps),fieldToFocus&&apiRef.current.setCellFocus(id,fieldToFocus)})),stopRowEditMode=react.useCallback((params=>{const{id}=params,other=(0,objectWithoutPropertiesLoose.Z)(params,useGridRowEditing_excluded2);throwIfNotInMode(id,gridEditRowModel.se.Edit),updateRowInRowModesModel(id,(0,esm_extends.Z)({mode:gridEditRowModel.se.View},other))}),[throwIfNotInMode,updateRowInRowModesModel]),updateStateToStopRowEditMode=(0,useEventCallback.Z)((params=>{const{id,ignoreModifications,field:focusedField,cellToFocusAfter="none"}=params;apiRef.current.runPendingEditCellValueMutation(id);const finishRowEditMode=()=>{"none"!==cellToFocusAfter&&focusedField&&apiRef.current.moveFocusToRelativeCell(id,focusedField,cellToFocusAfter),updateOrDeleteRowState(id,null),updateRowInRowModesModel(id,null)};if(ignoreModifications)return void finishRowEditMode();const editingState=gridEditRowsStateSelector(apiRef.current.state),row=apiRef.current.getRow(id);if(Object.values(editingState[id]).some((fieldProps=>fieldProps.isProcessingProps)))return void(prevRowModesModel.current[id].mode=gridEditRowModel.se.Edit);if(Object.values(editingState[id]).some((fieldProps=>fieldProps.error)))return prevRowModesModel.current[id].mode=gridEditRowModel.se.Edit,void updateRowInRowModesModel(id,{mode:gridEditRowModel.se.Edit});const rowUpdate=apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);if(processRowUpdate){const handleError=errorThrown=>{prevRowModesModel.current[id].mode=gridEditRowModel.se.Edit,updateRowInRowModesModel(id,{mode:gridEditRowModel.se.Edit}),onProcessRowUpdateError?onProcessRowUpdateError(errorThrown):useGridRowEditing_missingOnProcessRowUpdateErrorWarning()};try{Promise.resolve(processRowUpdate(rowUpdate,row)).then((finalRowUpdate=>{apiRef.current.updateRows([finalRowUpdate]),finishRowEditMode()})).catch(handleError)}catch(errorThrown){handleError(errorThrown)}}else apiRef.current.updateRows([rowUpdate]),finishRowEditMode()})),editingPrivateApi={setRowEditingEditCellValue:react.useCallback((params=>{const{id,field,value,debounceMs,unstable_skipValueParser:skipValueParser}=params;throwIfNotEditable(id,field);const column=apiRef.current.getColumn(field),row=apiRef.current.getRow(id);let parsedValue=value;column.valueParser&&!skipValueParser&&(parsedValue=column.valueParser(value,apiRef.current.getCellParams(id,field)));let editingState=gridEditRowsStateSelector(apiRef.current.state),newProps=(0,esm_extends.Z)({},editingState[id][field],{value:parsedValue,changeReason:debounceMs?"debouncedSetEditCellValue":"setEditCellValue"});return column.preProcessEditCellProps||updateOrDeleteFieldState(id,field,newProps),new Promise((resolve=>{const promises=[];if(column.preProcessEditCellProps){const hasChanged=newProps.value!==editingState[id][field].value;newProps=(0,esm_extends.Z)({},newProps,{isProcessingProps:!0}),updateOrDeleteFieldState(id,field,newProps);const _editingState$id=editingState[id],otherFieldsProps=(0,objectWithoutPropertiesLoose.Z)(_editingState$id,[field].map(_toPropertyKey)),promise=Promise.resolve(column.preProcessEditCellProps({id,row,props:newProps,hasChanged,otherFieldsProps})).then((processedProps=>{apiRef.current.getRowMode(id)!==gridEditRowModel.se.View?(editingState=gridEditRowsStateSelector(apiRef.current.state),(processedProps=(0,esm_extends.Z)({},processedProps,{isProcessingProps:!1})).value=column.preProcessEditCellProps?editingState[id][field].value:parsedValue,updateOrDeleteFieldState(id,field,processedProps)):resolve(!1)}));promises.push(promise)}Object.entries(editingState[id]).forEach((([thisField,fieldProps])=>{if(thisField===field)return;const fieldColumn=apiRef.current.getColumn(thisField);if(!fieldColumn.preProcessEditCellProps)return;fieldProps=(0,esm_extends.Z)({},fieldProps,{isProcessingProps:!0}),updateOrDeleteFieldState(id,thisField,fieldProps),editingState=gridEditRowsStateSelector(apiRef.current.state);const _editingState$id2=editingState[id],otherFieldsProps=(0,objectWithoutPropertiesLoose.Z)(_editingState$id2,[thisField].map(_toPropertyKey)),promise=Promise.resolve(fieldColumn.preProcessEditCellProps({id,row,props:fieldProps,hasChanged:!1,otherFieldsProps})).then((processedProps=>{apiRef.current.getRowMode(id)!==gridEditRowModel.se.View?(processedProps=(0,esm_extends.Z)({},processedProps,{isProcessingProps:!1}),updateOrDeleteFieldState(id,thisField,processedProps)):resolve(!1)}));promises.push(promise)})),Promise.all(promises).then((()=>{apiRef.current.getRowMode(id)===gridEditRowModel.se.Edit?(editingState=gridEditRowsStateSelector(apiRef.current.state),resolve(!editingState[id][field].error)):resolve(!1)}))}))}),[apiRef,throwIfNotEditable,updateOrDeleteFieldState]),getRowWithUpdatedValuesFromRowEditing:react.useCallback((id=>{const editingState=gridEditRowsStateSelector(apiRef.current.state),row=apiRef.current.getRow(id);if(!editingState[id])return apiRef.current.getRow(id);let rowUpdate=(0,esm_extends.Z)({},row);return Object.entries(editingState[id]).forEach((([field,fieldProps])=>{const column=apiRef.current.getColumn(field);column.valueSetter?rowUpdate=column.valueSetter({value:fieldProps.value,row:rowUpdate}):rowUpdate[field]=fieldProps.value})),rowUpdate}),[apiRef])};useGridApiMethod(apiRef,{getRowMode,startRowEditMode,stopRowEditMode},"public"),useGridApiMethod(apiRef,editingPrivateApi,"private"),react.useEffect((()=>{rowModesModelProp&&updateRowModesModel(rowModesModelProp)}),[rowModesModelProp,updateRowModesModel]),react.useEffect((()=>{const idToIdLookup=gridRowsDataRowIdToIdLookupSelector(apiRef),copyOfPrevRowModesModel=prevRowModesModel.current;prevRowModesModel.current=deepClone(rowModesModel),Object.entries(rowModesModel).forEach((([id,params])=>{var _copyOfPrevRowModesMo,_idToIdLookup$id;const prevMode=(null==(_copyOfPrevRowModesMo=copyOfPrevRowModesModel[id])?void 0:_copyOfPrevRowModesMo.mode)||gridEditRowModel.se.View,originalId=null!=(_idToIdLookup$id=idToIdLookup[id])?_idToIdLookup$id:id;params.mode===gridEditRowModel.se.Edit&&prevMode===gridEditRowModel.se.View?updateStateToStartRowEditMode((0,esm_extends.Z)({id:originalId},params)):params.mode===gridEditRowModel.se.View&&prevMode===gridEditRowModel.se.Edit&&updateStateToStopRowEditMode((0,esm_extends.Z)({id:originalId},params))}))}),[apiRef,rowModesModel,updateStateToStartRowEditMode,updateStateToStopRowEditMode])})(apiRef,props);const debounceMap=react.useRef({}),{isCellEditable:isCellEditableProp}=props,isCellEditable=react.useCallback((params=>!isAutoGeneratedRow(params.rowNode)&&(!!params.colDef.editable&&(!!params.colDef.renderEditCell&&(isCellEditableProp?isCellEditableProp(params):"pinnedRow"!==params.rowNode.type)))),[isCellEditableProp]);react.useEffect((()=>{const debounces=debounceMap.current;return()=>{Object.entries(debounces).forEach((([id,fields])=>{Object.keys(fields).forEach((field=>{const[timeout]=debounces[id][field];clearTimeout(timeout),delete debounces[id][field]}))}))}}),[]);const runPendingEditCellValueMutation=react.useCallback(((id,field)=>{if(debounceMap.current[id])if(field){if(debounceMap.current[id][field]){const[,runCallback]=debounceMap.current[id][field];runCallback()}}else Object.keys(debounceMap.current[id]).forEach((debouncedField=>{const[,runCallback]=debounceMap.current[id][debouncedField];runCallback()}))}),[]),setEditCellValue=react.useCallback((params=>{const{id,field,debounceMs}=params;return new Promise((resolve=>{((id,field,debounceMs,callback)=>{if(!debounceMs)return void callback();if(debounceMap.current[id]||(debounceMap.current[id]={}),debounceMap.current[id][field]){const[timeout]=debounceMap.current[id][field];clearTimeout(timeout)}const timeout=setTimeout((()=>{callback(),delete debounceMap.current[id][field]}),debounceMs);debounceMap.current[id][field]=[timeout,()=>{const[timeout]=debounceMap.current[id][field];clearTimeout(timeout),callback(),delete debounceMap.current[id][field]}]})(id,field,debounceMs,(async()=>{const setEditCellValueToCall=props.editMode===gridEditRowModel.r2.Row?apiRef.current.setRowEditingEditCellValue:apiRef.current.setCellEditingEditCellValue;if(apiRef.current.getCellMode(id,field)===gridEditRowModel.Vl.Edit){const result=await setEditCellValueToCall(params);resolve(result)}}))}))}),[apiRef,props.editMode]),getRowWithUpdatedValues=react.useCallback(((id,field)=>props.editMode===gridEditRowModel.r2.Cell?apiRef.current.getRowWithUpdatedValuesFromCellEditing(id,field):apiRef.current.getRowWithUpdatedValuesFromRowEditing(id)),[apiRef,props.editMode]),getEditCellMeta=react.useCallback(((id,field)=>({changeReason:gridEditRowsStateSelector(apiRef.current.state)[id][field].changeReason})),[apiRef]),editingSharedPrivateApi={runPendingEditCellValueMutation};useGridApiMethod(apiRef,{isCellEditable,setEditCellValue,getRowWithUpdatedValues,unstable_getEditCellMeta:getEditCellMeta},"public"),useGridApiMethod(apiRef,editingSharedPrivateApi,"private")},rowsStateInitializer=(state,props,apiRef)=>(apiRef.current.caches.rows=createRowsInternalCache({rows:props.rows,getRowId:props.getRowId,loading:props.loading,rowCount:props.rowCount}),(0,esm_extends.Z)({},state,{rows:getRowsStateFromCache({apiRef,rowCountProp:props.rowCount,loadingProp:props.loading,previousTree:null,previousTreeDepths:null})})),useGridRows=(apiRef,props)=>{const logger=useGridLogger(apiRef,"useGridRows"),currentPage=useGridVisibleRows(apiRef,props),lastUpdateMs=react.useRef(Date.now()),timeout=react.useRef(null),getRow=react.useCallback((id=>{const model=gridRowsLookupSelector(apiRef)[id];if(model)return model;const node=apiRef.current.getRowNode(id);return node&&isAutoGeneratedRow(node)?{}:null}),[apiRef]),lookup=react.useMemo((()=>currentPage.rows.reduce(((acc,{id},index)=>(acc[id]=index,acc)),{})),[currentPage.rows]),throttledRowsChange=react.useCallback((({cache,throttle})=>{const run=()=>{timeout.current=null,lastUpdateMs.current=Date.now(),apiRef.current.setState((state=>(0,esm_extends.Z)({},state,{rows:getRowsStateFromCache({apiRef,rowCountProp:props.rowCount,loadingProp:props.loading,previousTree:gridRowTreeSelector(apiRef),previousTreeDepths:gridRowTreeDepthsSelector(apiRef)})}))),apiRef.current.publishEvent("rowsSet"),apiRef.current.forceUpdate()};if(timeout.current&&(clearTimeout(timeout.current),timeout.current=null),apiRef.current.caches.rows=cache,!throttle)return void run();const throttleRemainingTimeMs=props.throttleRowsMs-(Date.now()-lastUpdateMs.current);throttleRemainingTimeMs>0?timeout.current=setTimeout(run,throttleRemainingTimeMs):run()}),[props.throttleRowsMs,props.rowCount,props.loading,apiRef]),setRows=react.useCallback((rows=>{logger.debug(`Updating all rows, new length ${rows.length}`);const cache=createRowsInternalCache({rows,getRowId:props.getRowId,loading:props.loading,rowCount:props.rowCount}),prevCache=apiRef.current.caches.rows;cache.rowsBeforePartialUpdates=prevCache.rowsBeforePartialUpdates,throttledRowsChange({cache,throttle:!0})}),[logger,props.getRowId,props.loading,props.rowCount,throttledRowsChange,apiRef]),updateRows=react.useCallback((updates=>{if(props.signature===GridSignature.DataGrid&&updates.length>1)throw new Error(["MUI: You can't update several rows at once in `apiRef.current.updateRows` on the DataGrid.","You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature."].join("\n"));const cache=(({previousCache,getRowId,updates})=>{var _previousCache$update,_previousCache$update2,_previousCache$update3;if("full"===previousCache.updates.type)throw new Error("MUI: Unable to prepare a partial update if a full update is not applied yet");const uniqueUpdates=new Map;updates.forEach((update=>{const id=getRowIdFromRowModel(update,getRowId,"A row was provided without id when calling updateRows():");uniqueUpdates.has(id)?uniqueUpdates.set(id,(0,esm_extends.Z)({},uniqueUpdates.get(id),update)):uniqueUpdates.set(id,update)}));const partialUpdates={type:"partial",actions:{insert:[...null!=(_previousCache$update=previousCache.updates.actions.insert)?_previousCache$update:[]],modify:[...null!=(_previousCache$update2=previousCache.updates.actions.modify)?_previousCache$update2:[]],remove:[...null!=(_previousCache$update3=previousCache.updates.actions.remove)?_previousCache$update3:[]]},idToActionLookup:(0,esm_extends.Z)({},previousCache.updates.idToActionLookup)},dataRowIdToModelLookup=(0,esm_extends.Z)({},previousCache.dataRowIdToModelLookup),dataRowIdToIdLookup=(0,esm_extends.Z)({},previousCache.dataRowIdToIdLookup),alreadyAppliedActionsToRemove={insert:{},modify:{},remove:{}};uniqueUpdates.forEach(((partialRow,id)=>{const actionAlreadyAppliedToRow=partialUpdates.idToActionLookup[id];if("delete"===partialRow._action){if("remove"===actionAlreadyAppliedToRow||!dataRowIdToModelLookup[id])return;return null!=actionAlreadyAppliedToRow&&(alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id]=!0),partialUpdates.actions.remove.push(id),delete dataRowIdToModelLookup[id],void delete dataRowIdToIdLookup[id]}const oldRow=dataRowIdToModelLookup[id];if(oldRow)return"remove"===actionAlreadyAppliedToRow?(alreadyAppliedActionsToRemove.remove[id]=!0,partialUpdates.actions.modify.push(id)):null==actionAlreadyAppliedToRow&&partialUpdates.actions.modify.push(id),void(dataRowIdToModelLookup[id]=(0,esm_extends.Z)({},oldRow,partialRow));"remove"===actionAlreadyAppliedToRow?(alreadyAppliedActionsToRemove.remove[id]=!0,partialUpdates.actions.insert.push(id)):null==actionAlreadyAppliedToRow&&partialUpdates.actions.insert.push(id),dataRowIdToModelLookup[id]=partialRow,dataRowIdToIdLookup[id]=id}));const actionTypeWithActionsToRemove=Object.keys(alreadyAppliedActionsToRemove);for(let i=0;i<actionTypeWithActionsToRemove.length;i+=1){const actionType=actionTypeWithActionsToRemove[i],idsToRemove=alreadyAppliedActionsToRemove[actionType];Object.keys(idsToRemove).length>0&&(partialUpdates.actions[actionType]=partialUpdates.actions[actionType].filter((id=>!idsToRemove[id])))}return{dataRowIdToModelLookup,dataRowIdToIdLookup,updates:partialUpdates,rowsBeforePartialUpdates:previousCache.rowsBeforePartialUpdates,loadingPropBeforePartialUpdates:previousCache.loadingPropBeforePartialUpdates,rowCountPropBeforePartialUpdates:previousCache.rowCountPropBeforePartialUpdates}})({updates,getRowId:props.getRowId,previousCache:apiRef.current.caches.rows});throttledRowsChange({cache,throttle:!0})}),[props.signature,props.getRowId,throttledRowsChange,apiRef]),getRowModels=react.useCallback((()=>{const dataRows=gridDataRowIdsSelector(apiRef),idRowsLookup=gridRowsLookupSelector(apiRef);return new Map(dataRows.map((id=>{var _idRowsLookup$id;return[id,null!=(_idRowsLookup$id=idRowsLookup[id])?_idRowsLookup$id:{}]})))}),[apiRef]),getRowsCount=react.useCallback((()=>gridRowCountSelector(apiRef)),[apiRef]),getAllRowIds=react.useCallback((()=>gridDataRowIdsSelector(apiRef)),[apiRef]),getRowIndexRelativeToVisibleRows=react.useCallback((id=>lookup[id]),[lookup]),setRowChildrenExpansion=react.useCallback(((id,isExpanded)=>{const currentNode=apiRef.current.getRowNode(id);if(!currentNode)throw new Error(`MUI: No row with id #${id} found`);if("group"!==currentNode.type)throw new Error("MUI: Only group nodes can be expanded or collapsed");const newNode=(0,esm_extends.Z)({},currentNode,{childrenExpanded:isExpanded});apiRef.current.setState((state=>(0,esm_extends.Z)({},state,{rows:(0,esm_extends.Z)({},state.rows,{tree:(0,esm_extends.Z)({},state.rows.tree,{[id]:newNode})})}))),apiRef.current.forceUpdate(),apiRef.current.publishEvent("rowExpansionChange",newNode)}),[apiRef]),getRowNode=react.useCallback((id=>{var _ref;return null!=(_ref=gridRowTreeSelector(apiRef)[id])?_ref:null}),[apiRef]),getRowGroupChildren=react.useCallback((({skipAutoGeneratedRows=!0,groupId,applySorting,applyFiltering})=>{const tree=gridRowTreeSelector(apiRef);let children;if(applySorting){const groupNode=tree[groupId];if(!groupNode)return[];const sortedRowIds=gridSortedRowIdsSelector(apiRef);children=[];for(let index=sortedRowIds.findIndex((id=>id===groupId))+1;index<sortedRowIds.length&&tree[sortedRowIds[index]].depth>groupNode.depth;index+=1){const id=sortedRowIds[index];skipAutoGeneratedRows&&isAutoGeneratedRow(tree[id])||children.push(id)}}else children=getTreeNodeDescendants(tree,groupId,skipAutoGeneratedRows);if(applyFiltering){const filteredRowsLookup=gridFilteredRowsLookupSelector(apiRef);children=children.filter((childId=>!1!==filteredRowsLookup[childId]))}return children}),[apiRef]),setRowIndex=react.useCallback(((rowId,targetIndex)=>{const node=apiRef.current.getRowNode(rowId);if(!node)throw new Error(`MUI: No row with id #${rowId} found`);if(node.parent!==GRID_ROOT_GROUP_ID)throw new Error("MUI: The row reordering do not support reordering of grouped rows yet");if("leaf"!==node.type)throw new Error("MUI: The row reordering do not support reordering of footer or grouping rows");apiRef.current.setState((state=>{const group=gridRowTreeSelector(state,apiRef.current.instanceId)[GRID_ROOT_GROUP_ID],allRows=group.children,oldIndex=allRows.findIndex((row=>row===rowId));if(-1===oldIndex||oldIndex===targetIndex)return state;logger.debug(`Moving row ${rowId} to index ${targetIndex}`);const updatedRows=[...allRows];return updatedRows.splice(targetIndex,0,updatedRows.splice(oldIndex,1)[0]),(0,esm_extends.Z)({},state,{rows:(0,esm_extends.Z)({},state.rows,{tree:(0,esm_extends.Z)({},state.rows.tree,{[GRID_ROOT_GROUP_ID]:(0,esm_extends.Z)({},group,{children:updatedRows})})})})})),apiRef.current.publishEvent("rowsSet")}),[apiRef,logger]),rowApi={getRow,getRowModels,getRowsCount,getAllRowIds,setRows,updateRows,getRowNode,getRowIndexRelativeToVisibleRows,unstable_replaceRows:react.useCallback(((firstRowToRender,newRows)=>{if(props.signature===GridSignature.DataGrid&&newRows.length>1)throw new Error(["MUI: You can't replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.","You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature."].join("\n"));if(0===newRows.length)return;if(gridRowMaximumTreeDepthSelector(apiRef)>1)throw new Error("`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping");const tree=(0,esm_extends.Z)({},gridRowTreeSelector(apiRef)),dataRowIdToModelLookup=(0,esm_extends.Z)({},gridRowsLookupSelector(apiRef)),dataRowIdToIdLookup=(0,esm_extends.Z)({},gridRowsDataRowIdToIdLookupSelector(apiRef)),rootGroup=tree[GRID_ROOT_GROUP_ID],rootGroupChildren=[...rootGroup.children];for(let i=0;i<newRows.length;i+=1){const rowModel=newRows[i],rowId=getRowIdFromRowModel(rowModel,props.getRowId,"A row was provided without id when calling replaceRows()."),[replacedRowId]=rootGroupChildren.splice(firstRowToRender+i,1,rowId);delete dataRowIdToModelLookup[replacedRowId],delete dataRowIdToIdLookup[replacedRowId],delete tree[replacedRowId];const rowTreeNodeConfig={id:rowId,depth:0,parent:GRID_ROOT_GROUP_ID,type:"leaf",groupingKey:null};dataRowIdToModelLookup[rowId]=rowModel,dataRowIdToIdLookup[rowId]=rowId,tree[rowId]=rowTreeNodeConfig}tree[GRID_ROOT_GROUP_ID]=(0,esm_extends.Z)({},rootGroup,{children:rootGroupChildren});const dataRowIds=rootGroupChildren.filter((childId=>"leaf"===tree[childId].type));apiRef.current.caches.rows.dataRowIdToModelLookup=dataRowIdToModelLookup,apiRef.current.caches.rows.dataRowIdToIdLookup=dataRowIdToIdLookup,apiRef.current.setState((state=>(0,esm_extends.Z)({},state,{rows:(0,esm_extends.Z)({},state.rows,{dataRowIdToModelLookup,dataRowIdToIdLookup,dataRowIds,tree})}))),apiRef.current.publishEvent("rowsSet")}),[apiRef,props.signature,props.getRowId])},rowProApi={setRowIndex,setRowChildrenExpansion,getRowGroupChildren},groupRows=react.useCallback((()=>{let cache;logger.info("Row grouping pre-processing have changed, regenerating the row tree"),cache=apiRef.current.caches.rows.rowsBeforePartialUpdates===props.rows?(0,esm_extends.Z)({},apiRef.current.caches.rows,{updates:{type:"full",rows:gridDataRowIdsSelector(apiRef)}}):createRowsInternalCache({rows:props.rows,getRowId:props.getRowId,loading:props.loading,rowCount:props.rowCount}),throttledRowsChange({cache,throttle:!1})}),[logger,apiRef,props.rows,props.getRowId,props.loading,props.rowCount,throttledRowsChange]),handleStrategyProcessorChange=react.useCallback((methodName=>{"rowTreeCreation"===methodName&&groupRows()}),[groupRows]),handleStrategyActivityChange=react.useCallback((()=>{apiRef.current.getActiveStrategy("rowTree")!==gridRowGroupingNameSelector(apiRef)&&groupRows()}),[apiRef,groupRows]);useGridApiEventHandler(apiRef,"activeStrategyProcessorChange",handleStrategyProcessorChange),useGridApiEventHandler(apiRef,"strategyAvailabilityChange",handleStrategyActivityChange);const applyHydrateRowsProcessor=react.useCallback((()=>{apiRef.current.setState((state=>{const response=apiRef.current.unstable_applyPipeProcessors("hydrateRows",{tree:gridRowTreeSelector(state,apiRef.current.instanceId),treeDepths:gridRowTreeDepthsSelector(state,apiRef.current.instanceId),dataRowIds:gridDataRowIdsSelector(state,apiRef.current.instanceId),dataRowIdToModelLookup:gridRowsLookupSelector(state,apiRef.current.instanceId),dataRowIdToIdLookup:gridRowsDataRowIdToIdLookupSelector(state,apiRef.current.instanceId)});return(0,esm_extends.Z)({},state,{rows:(0,esm_extends.Z)({},state.rows,response,{totalTopLevelRowCount:getTopLevelRowCount({tree:response.tree,rowCountProp:props.rowCount})})})})),apiRef.current.publishEvent("rowsSet"),apiRef.current.forceUpdate()}),[apiRef,props.rowCount]);useGridRegisterPipeApplier(apiRef,"hydrateRows",applyHydrateRowsProcessor),useGridApiMethod(apiRef,rowApi,"public"),useGridApiMethod(apiRef,rowProApi,props.signature===GridSignature.DataGrid?"private":"public"),react.useEffect((()=>()=>{null!==timeout.current&&clearTimeout(timeout.current)}),[]);const isFirstRender=react.useRef(!0);react.useEffect((()=>{if(isFirstRender.current)return void(isFirstRender.current=!1);const areNewRowsAlreadyInState=apiRef.current.caches.rows.rowsBeforePartialUpdates===props.rows,isNewLoadingAlreadyInState=apiRef.current.caches.rows.loadingPropBeforePartialUpdates===props.loading,isNewRowCountAlreadyInState=apiRef.current.caches.rows.rowCountPropBeforePartialUpdates===props.rowCount;if(areNewRowsAlreadyInState)return isNewLoadingAlreadyInState||(apiRef.current.setState((state=>(0,esm_extends.Z)({},state,{rows:(0,esm_extends.Z)({},state.rows,{loading:props.loading})}))),apiRef.current.caches.rows.loadingPropBeforePartialUpdates=props.loading,apiRef.current.forceUpdate()),void(isNewRowCountAlreadyInState||(apiRef.current.setState((state=>(0,esm_extends.Z)({},state,{rows:(0,esm_extends.Z)({},state.rows,{totalRowCount:Math.max(props.rowCount||0,state.rows.totalRowCount),totalTopLevelRowCount:Math.max(props.rowCount||0,state.rows.totalTopLevelRowCount)})}))),apiRef.current.caches.rows.rowCountPropBeforePartialUpdates=props.rowCount,apiRef.current.forceUpdate()));logger.debug(`Updating all rows, new length ${props.rows.length}`),throttledRowsChange({cache:createRowsInternalCache({rows:props.rows,getRowId:props.getRowId,loading:props.loading,rowCount:props.rowCount}),throttle:!1})}),[props.rows,props.rowCount,props.getRowId,props.loading,logger,throttledRowsChange,apiRef])},flatRowTreeCreationMethod=params=>"full"===params.updates.type?(rows=>{const tree={[GRID_ROOT_GROUP_ID]:(0,esm_extends.Z)({},{type:"group",id:GRID_ROOT_GROUP_ID,depth:-1,groupingField:null,groupingKey:null,isAutoGenerated:!0,children:[],childrenFromPath:{},childrenExpanded:!0,parent:null},{children:rows})};for(let i=0;i<rows.length;i+=1){const rowId=rows[i];tree[rowId]={id:rowId,depth:0,parent:GRID_ROOT_GROUP_ID,type:"leaf",groupingKey:null}}return{groupingName:"none",tree,treeDepths:{0:rows.length},dataRowIds:rows}})(params.updates.rows):(({previousTree,actions})=>{const tree=(0,esm_extends.Z)({},previousTree),idsToRemoveFromRootGroup={};for(let i=0;i<actions.remove.length;i+=1){const idToDelete=actions.remove[i];idsToRemoveFromRootGroup[idToDelete]=!0,delete tree[idToDelete]}for(let i=0;i<actions.insert.length;i+=1){const idToInsert=actions.insert[i];tree[idToInsert]={id:idToInsert,depth:0,parent:GRID_ROOT_GROUP_ID,type:"leaf",groupingKey:null}}const rootGroup=tree[GRID_ROOT_GROUP_ID];let rootGroupChildren=[...rootGroup.children,...actions.insert];return Object.values(idsToRemoveFromRootGroup).length&&(rootGroupChildren=rootGroupChildren.filter((id=>!idsToRemoveFromRootGroup[id]))),tree[GRID_ROOT_GROUP_ID]=(0,esm_extends.Z)({},rootGroup,{children:rootGroupChildren}),{groupingName:"none",tree,treeDepths:{0:rootGroupChildren.length},dataRowIds:rootGroupChildren}})({previousTree:params.previousTree,actions:params.updates.actions});function findParentElementFromClassName(elem,className){return elem.closest(`.${className}`)}function escapeOperandAttributeSelector(operand){return operand.replace(/["\\]/g,"\\$&")}function getGridRowElementSelector(id){return`.${gridClasses_gridClasses.row}[data-id="${escapeOperandAttributeSelector(String(id))}"]`}function useGridParamsApi(apiRef){const getColumnHeaderParams=react.useCallback((field=>({field,colDef:apiRef.current.getColumn(field)})),[apiRef]),getRowParams=react.useCallback((id=>{const row=apiRef.current.getRow(id);if(!row)throw new Error(`No row with id #${id} found`);return{id,columns:apiRef.current.getAllColumns(),row}}),[apiRef]),getBaseCellParams=react.useCallback(((id,field)=>{const row=apiRef.current.getRow(id),rowNode=apiRef.current.getRowNode(id);if(!row||!rowNode)throw new Error(`No row with id #${id} found`);const cellFocus=gridFocusCellSelector(apiRef),cellTabIndex=gridTabIndexCellSelector(apiRef);return{id,field,row,rowNode,value:row[field],colDef:apiRef.current.getColumn(field),cellMode:apiRef.current.getCellMode(id,field),api:apiRef.current,hasFocus:null!==cellFocus&&cellFocus.field===field&&cellFocus.id===id,tabIndex:cellTabIndex&&cellTabIndex.field===field&&cellTabIndex.id===id?0:-1}}),[apiRef]),getCellParams=react.useCallback(((id,field)=>{const colDef=apiRef.current.getColumn(field),value=apiRef.current.getCellValue(id,field),row=apiRef.current.getRow(id),rowNode=apiRef.current.getRowNode(id);if(!row||!rowNode)throw new Error(`No row with id #${id} found`);const cellFocus=gridFocusCellSelector(apiRef),cellTabIndex=gridTabIndexCellSelector(apiRef),params={id,field,row,rowNode,colDef,cellMode:apiRef.current.getCellMode(id,field),hasFocus:null!==cellFocus&&cellFocus.field===field&&cellFocus.id===id,tabIndex:cellTabIndex&&cellTabIndex.field===field&&cellTabIndex.id===id?0:-1,value,formattedValue:value};return colDef&&colDef.valueFormatter&&(params.formattedValue=colDef.valueFormatter({id,field:params.field,value:params.value,api:apiRef.current})),params.isEditable=colDef&&apiRef.current.isCellEditable(params),params}),[apiRef]),getCellValue=react.useCallback(((id,field)=>{const colDef=apiRef.current.getColumn(field);if(!colDef||!colDef.valueGetter){const rowModel=apiRef.current.getRow(id);if(!rowModel)throw new Error(`No row with id #${id} found`);return rowModel[field]}return colDef.valueGetter(getBaseCellParams(id,field))}),[apiRef,getBaseCellParams]),getColumnHeaderElement=react.useCallback((field=>apiRef.current.rootElementRef.current?function getGridColumnHeaderElement(root,field){return root.querySelector(`[role="columnheader"][data-field="${escapeOperandAttributeSelector(field)}"]`)}(apiRef.current.rootElementRef.current,field):null),[apiRef]),getRowElement=react.useCallback((id=>apiRef.current.rootElementRef.current?function getGridRowElement(root,id){return root.querySelector(getGridRowElementSelector(id))}(apiRef.current.rootElementRef.current,id):null),[apiRef]),getCellElement=react.useCallback(((id,field)=>apiRef.current.rootElementRef.current?function getGridCellElement(root,{id,field}){const selector=`${getGridRowElementSelector(id)} .${gridClasses_gridClasses.cell}[data-field="${escapeOperandAttributeSelector(field)}"]`;return root.querySelector(selector)}(apiRef.current.rootElementRef.current,{id,field}):null),[apiRef]);useGridApiMethod(apiRef,{getCellValue,getCellParams,getCellElement,getRowParams,getRowElement,getColumnHeaderParams,getColumnHeaderElement},"public")}const getSelectionModelPropValue=(selectionModelProp,prevSelectionModel)=>null==selectionModelProp||Array.isArray(selectionModelProp)?selectionModelProp:prevSelectionModel&&prevSelectionModel[0]===selectionModelProp?prevSelectionModel:[selectionModelProp],rowSelectionStateInitializer=(state,props)=>{var _getSelectionModelPro;return(0,esm_extends.Z)({},state,{rowSelection:props.rowSelection&&null!=(_getSelectionModelPro=getSelectionModelPropValue(props.rowSelectionModel))?_getSelectionModelPro:[]})},useGridRowSelectionPreProcessors=(apiRef,props)=>{const classes=(ownerState=>{const{classes}=ownerState;return react.useMemo((()=>(0,composeClasses.Z)({cellCheckbox:["cellCheckbox"],columnHeaderCheckbox:["columnHeaderCheckbox"]},getDataGridUtilityClass,classes)),[classes])})({classes:props.classes}),updateSelectionColumn=react.useCallback((columnsState=>{const selectionColumn=(0,esm_extends.Z)({},GRID_CHECKBOX_SELECTION_COL_DEF,{cellClassName:classes.cellCheckbox,headerClassName:classes.columnHeaderCheckbox,headerName:apiRef.current.getLocaleText("checkboxSelectionHeaderName")}),shouldHaveSelectionColumn=props.checkboxSelection,haveSelectionColumn=null!=columnsState.lookup.__check__;return shouldHaveSelectionColumn&&!haveSelectionColumn?(columnsState.lookup.__check__=selectionColumn,columnsState.orderedFields=["__check__",...columnsState.orderedFields]):!shouldHaveSelectionColumn&&haveSelectionColumn?(delete columnsState.lookup.__check__,columnsState.orderedFields=columnsState.orderedFields.filter((field=>"__check__"!==field))):shouldHaveSelectionColumn&&haveSelectionColumn&&(columnsState.lookup.__check__=(0,esm_extends.Z)({},selectionColumn,columnsState.lookup.__check__)),columnsState}),[apiRef,classes,props.checkboxSelection]);useGridRegisterPipeProcessor(apiRef,"hydrateColumns",updateSelectionColumn)},sortingStateInitializer=(state,props)=>{var _ref,_props$sortModel,_props$initialState,_props$initialState$s;const sortModel=null!=(_ref=null!=(_props$sortModel=props.sortModel)?_props$sortModel:null==(_props$initialState=props.initialState)||null==(_props$initialState$s=_props$initialState.sorting)?void 0:_props$initialState$s.sortModel)?_ref:[];return(0,esm_extends.Z)({},state,{sorting:{sortModel:(0,gridSortingUtils.Te)(sortModel,props.disableMultipleColumnsSorting),sortedRows:[]}})};function scrollIntoView(dimensions){const{clientHeight,scrollTop,offsetHeight,offsetTop}=dimensions,elementBottom=offsetTop+offsetHeight;return offsetHeight>clientHeight?offsetTop:elementBottom-clientHeight>scrollTop?elementBottom-clientHeight:offsetTop<scrollTop?offsetTop:void 0}var debounce=__webpack_require__("./node_modules/@mui/utils/esm/debounce.js");var useThemeProps=__webpack_require__("./node_modules/@mui/material/styles/useThemeProps.js");const GRID_DEFAULT_LOCALE_TEXT={noRowsLabel:"No rows",noResultsOverlayLabel:"No results found.",toolbarDensity:"Density",toolbarDensityLabel:"Density",toolbarDensityCompact:"Compact",toolbarDensityStandard:"Standard",toolbarDensityComfortable:"Comfortable",toolbarColumns:"Columns",toolbarColumnsLabel:"Select columns",toolbarFilters:"Filters",toolbarFiltersLabel:"Show filters",toolbarFiltersTooltipHide:"Hide filters",toolbarFiltersTooltipShow:"Show filters",toolbarFiltersTooltipActive:count=>1!==count?`${count} active filters`:`${count} active filter`,toolbarQuickFilterPlaceholder:"Search…",toolbarQuickFilterLabel:"Search",toolbarQuickFilterDeleteIconLabel:"Clear",toolbarExport:"Export",toolbarExportLabel:"Export",toolbarExportCSV:"Download as CSV",toolbarExportPrint:"Print",toolbarExportExcel:"Download as Excel",columnsPanelTextFieldLabel:"Find column",columnsPanelTextFieldPlaceholder:"Column title",columnsPanelDragIconLabel:"Reorder column",columnsPanelShowAllButton:"Show all",columnsPanelHideAllButton:"Hide all",filterPanelAddFilter:"Add filter",filterPanelRemoveAll:"Remove all",filterPanelDeleteIconLabel:"Delete",filterPanelLogicOperator:"Logic operator",filterPanelOperator:"Operator",filterPanelOperatorAnd:"And",filterPanelOperatorOr:"Or",filterPanelColumns:"Columns",filterPanelInputLabel:"Value",filterPanelInputPlaceholder:"Filter value",filterOperatorContains:"contains",filterOperatorEquals:"equals",filterOperatorStartsWith:"starts with",filterOperatorEndsWith:"ends with",filterOperatorIs:"is",filterOperatorNot:"is not",filterOperatorAfter:"is after",filterOperatorOnOrAfter:"is on or after",filterOperatorBefore:"is before",filterOperatorOnOrBefore:"is on or before",filterOperatorIsEmpty:"is empty",filterOperatorIsNotEmpty:"is not empty",filterOperatorIsAnyOf:"is any of",filterValueAny:"any",filterValueTrue:"true",filterValueFalse:"false",columnMenuLabel:"Menu",columnMenuShowColumns:"Show columns",columnMenuManageColumns:"Manage columns",columnMenuFilter:"Filter",columnMenuHideColumn:"Hide column",columnMenuUnsort:"Unsort",columnMenuSortAsc:"Sort by ASC",columnMenuSortDesc:"Sort by DESC",columnHeaderFiltersTooltipActive:count=>1!==count?`${count} active filters`:`${count} active filter`,columnHeaderFiltersLabel:"Show filters",columnHeaderSortIconLabel:"Sort",footerRowSelected:count=>1!==count?`${count.toLocaleString()} rows selected`:`${count.toLocaleString()} row selected`,footerTotalRows:"Total Rows:",footerTotalVisibleRows:(visibleCount,totalCount)=>`${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,checkboxSelectionHeaderName:"Checkbox selection",checkboxSelectionSelectAllRows:"Select all rows",checkboxSelectionUnselectAllRows:"Unselect all rows",checkboxSelectionSelectRow:"Select row",checkboxSelectionUnselectRow:"Unselect row",booleanCellTrueLabel:"yes",booleanCellFalseLabel:"no",actionsCellMore:"more",pinToLeft:"Pin to left",pinToRight:"Pin to right",unpin:"Unpin",treeDataGroupingHeaderName:"Group",treeDataExpand:"see children",treeDataCollapse:"hide children",groupingColumnHeaderName:"Group",groupColumn:name=>`Group by ${name}`,unGroupColumn:name=>`Stop grouping by ${name}`,detailPanelToggle:"Detail panel toggle",expandDetailPanel:"Expand",collapseDetailPanel:"Collapse",MuiTablePagination:{},rowReorderingHeaderName:"Row reordering",aggregationMenuItemHeader:"Aggregation",aggregationFunctionLabelSum:"sum",aggregationFunctionLabelAvg:"avg",aggregationFunctionLabelMin:"min",aggregationFunctionLabelMax:"max",aggregationFunctionLabelSize:"size"},GridCell_excluded=["align","children","colIndex","colDef","cellMode","field","formattedValue","hasFocus","height","isEditable","isSelected","rowId","tabIndex","value","width","className","showRightBorder","extendRowFullWidth","row","colSpan","disableDragEvents","onClick","onDoubleClick","onMouseDown","onMouseUp","onMouseOver","onKeyDown","onKeyUp","onDragEnter","onDragOver"];let cachedSupportsPreventScroll;const GridCell=react.forwardRef(((props,ref)=>{const{align,children,colIndex,cellMode,field,formattedValue,hasFocus,height,isEditable,isSelected,rowId,tabIndex,value,width,className,showRightBorder,colSpan,disableDragEvents,onClick,onDoubleClick,onMouseDown,onMouseUp,onMouseOver,onKeyDown,onKeyUp,onDragEnter,onDragOver}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridCell_excluded),valueToRender=null==formattedValue?value:formattedValue,cellRef=react.useRef(null),handleRef=(0,useForkRef.Z)(ref,cellRef),focusElementRef=react.useRef(null),apiRef=(0,utils_useGridApiContext.l)(),classes=(ownerState=>{const{align,showRightBorder,isEditable,isSelected,classes}=ownerState,slots={root:["cell",`cell--text${(0,capitalize.Z)(align)}`,isEditable&&"cell--editable",isSelected&&"selected",showRightBorder&&"cell--withRightBorder","withBorderColor"],content:["cellContent"]};return(0,composeClasses.Z)(slots,getDataGridUtilityClass,classes)})({align,showRightBorder,isEditable,classes:(0,useGridRootProps.B)().classes,isSelected}),publishMouseUp=react.useCallback((eventName=>event=>{const params=apiRef.current.getCellParams(rowId,field||"");apiRef.current.publishEvent(eventName,params,event),onMouseUp&&onMouseUp(event)}),[apiRef,field,onMouseUp,rowId]),publishMouseDown=react.useCallback((eventName=>event=>{const params=apiRef.current.getCellParams(rowId,field||"");apiRef.current.publishEvent(eventName,params,event),onMouseDown&&onMouseDown(event)}),[apiRef,field,onMouseDown,rowId]),publish=react.useCallback(((eventName,propHandler)=>event=>{if(!apiRef.current.getRow(rowId))return;const params=apiRef.current.getCellParams(rowId,field||"");apiRef.current.publishEvent(eventName,params,event),propHandler&&propHandler(event)}),[apiRef,field,rowId]),style={minWidth:width,maxWidth:width,minHeight:height,maxHeight:"auto"===height?"none":height};react.useEffect((()=>{if(!hasFocus||cellMode===gridEditRowModel.Vl.Edit)return;const doc=(0,ownerDocument.Z)(apiRef.current.rootElementRef.current);if(cellRef.current&&!cellRef.current.contains(doc.activeElement)){const focusableElement=cellRef.current.querySelector('[tabindex="0"]'),elementToFocus=focusElementRef.current||focusableElement||cellRef.current;if(function doesSupportPreventScroll(){return void 0===cachedSupportsPreventScroll&&document.createElement("div").focus({get preventScroll(){return cachedSupportsPreventScroll=!0,!1}}),cachedSupportsPreventScroll}())elementToFocus.focus({preventScroll:!0});else{const scrollPosition=apiRef.current.getScrollPosition();elementToFocus.focus(),apiRef.current.scroll(scrollPosition)}}}),[hasFocus,cellMode,apiRef]);let handleFocus=other.onFocus;const managesOwnFocus="actions"===apiRef.current.getColumn(field).type,draggableEventHandlers=disableDragEvents?null:{onDragEnter:publish("cellDragEnter",onDragEnter),onDragOver:publish("cellDragOver",onDragOver)};return(0,jsx_runtime.jsx)("div",(0,esm_extends.Z)({ref:handleRef,className:(0,clsx_m.Z)(className,classes.root),role:"cell","data-field":field,"data-colindex":colIndex,"aria-colindex":colIndex+1,"aria-colspan":colSpan,style,tabIndex:"view"!==cellMode&&isEditable||managesOwnFocus?-1:tabIndex,onClick:publish("cellClick",onClick),onDoubleClick:publish("cellDoubleClick",onDoubleClick),onMouseOver:publish("cellMouseOver",onMouseOver),onMouseDown:publishMouseDown("cellMouseDown"),onMouseUp:publishMouseUp("cellMouseUp"),onKeyDown:publish("cellKeyDown",onKeyDown),onKeyUp:publish("cellKeyUp",onKeyUp)},draggableEventHandlers,other,{onFocus:handleFocus,children:(()=>{if(void 0===children){const valueString=null==valueToRender?void 0:valueToRender.toString();return(0,jsx_runtime.jsx)("div",{className:classes.content,title:valueString,children:valueString})}return react.isValidElement(children)&&managesOwnFocus?react.cloneElement(children,{focusElementRef}):children})()}))})),MemoizedCell=react.memo(GridCell);var Skeleton=__webpack_require__("./node_modules/@mui/material/Skeleton/Skeleton.js");const GridSkeletonCell_excluded=["field","align","width","contentWidth"];var Badge=__webpack_require__("./node_modules/@mui/material/Badge/Badge.js");const GridIconButtonContainer_excluded=["className"],GridIconButtonContainerRoot=(0,esm_styled.Z)("div",{name:"MuiDataGrid",slot:"IconButtonContainer",overridesResolver:(props,styles)=>styles.iconButtonContainer})((()=>({display:"flex",visibility:"hidden",width:0}))),GridIconButtonContainer=react.forwardRef((function GridIconButtonContainer(props,ref){const{className}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridIconButtonContainer_excluded),rootProps=(0,useGridRootProps.B)(),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["iconButtonContainer"]},getDataGridUtilityClass,classes)})(rootProps);return(0,jsx_runtime.jsx)(GridIconButtonContainerRoot,(0,esm_extends.Z)({ref,className:(0,clsx_m.Z)(classes.root,className),ownerState:rootProps},other))}));const GridRowCount_excluded=["className","rowCount","visibleRowCount"],GridRowCountRoot=(0,esm_styled.Z)("div",{name:"MuiDataGrid",slot:"RowCount",overridesResolver:(props,styles)=>styles.rowCount})((({theme})=>({alignItems:"center",display:"flex",margin:theme.spacing(0,2)}))),GridRowCount=react.forwardRef((function GridRowCount(props,ref){const{className,rowCount,visibleRowCount}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridRowCount_excluded),apiRef=(0,utils_useGridApiContext.l)(),ownerState=(0,useGridRootProps.B)(),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["rowCount"]},getDataGridUtilityClass,classes)})(ownerState);if(0===rowCount)return null;const text=visibleRowCount<rowCount?apiRef.current.getLocaleText("footerTotalVisibleRows")(visibleRowCount,rowCount):rowCount.toLocaleString();return(0,jsx_runtime.jsxs)(GridRowCountRoot,(0,esm_extends.Z)({ref,className:(0,clsx_m.Z)(classes.root,className),ownerState},other,{children:[apiRef.current.getLocaleText("footerTotalRows")," ",text]}))})),GridSelectedRowCount_excluded=["className","selectedRowCount"],GridSelectedRowCountRoot=(0,esm_styled.Z)("div",{name:"MuiDataGrid",slot:"SelectedRowCount",overridesResolver:(props,styles)=>styles.selectedRowCount})((({theme})=>({alignItems:"center",display:"flex",margin:theme.spacing(0,2),visibility:"hidden",width:0,height:0,[theme.breakpoints.up("sm")]:{visibility:"visible",width:"auto",height:"auto"}}))),GridSelectedRowCount=react.forwardRef((function GridSelectedRowCount(props,ref){const{className,selectedRowCount}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridSelectedRowCount_excluded),apiRef=(0,utils_useGridApiContext.l)(),ownerState=(0,useGridRootProps.B)(),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["selectedRowCount"]},getDataGridUtilityClass,classes)})(ownerState),rowSelectedText=apiRef.current.getLocaleText("footerRowSelected")(selectedRowCount);return(0,jsx_runtime.jsx)(GridSelectedRowCountRoot,(0,esm_extends.Z)({ref,className:(0,clsx_m.Z)(classes.root,className),ownerState},other,{children:rowSelectedText}))})),GridFooterContainer_excluded=["className"],GridFooterContainerRoot=(0,esm_styled.Z)("div",{name:"MuiDataGrid",slot:"FooterContainer",overridesResolver:(props,styles)=>styles.footerContainer})({display:"flex",justifyContent:"space-between",alignItems:"center",minHeight:52,borderTop:"1px solid"}),GridFooterContainer=react.forwardRef((function GridFooterContainer(props,ref){const{className}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridFooterContainer_excluded),rootProps=(0,useGridRootProps.B)(),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["footerContainer","withBorderColor"]},getDataGridUtilityClass,classes)})(rootProps);return(0,jsx_runtime.jsx)(GridFooterContainerRoot,(0,esm_extends.Z)({ref,className:(0,clsx_m.Z)(classes.root,className),ownerState:rootProps},other))})),GridFooter=react.forwardRef((function GridFooter(props,ref){var _rootProps$slotProps;const apiRef=(0,utils_useGridApiContext.l)(),rootProps=(0,useGridRootProps.B)(),totalTopLevelRowCount=useGridSelector(apiRef,gridTopLevelRowCountSelector),selectedRowCount=useGridSelector(apiRef,selectedGridRowsCountSelector),visibleTopLevelRowCount=useGridSelector(apiRef,gridFilteredTopLevelRowCountSelector),selectedRowCountElement=!rootProps.hideFooterSelectedRowCount&&selectedRowCount>0?(0,jsx_runtime.jsx)(GridSelectedRowCount,{selectedRowCount}):(0,jsx_runtime.jsx)("div",{}),rowCountElement=rootProps.hideFooterRowCount||rootProps.pagination?null:(0,jsx_runtime.jsx)(GridRowCount,{rowCount:totalTopLevelRowCount,visibleRowCount:visibleTopLevelRowCount}),paginationElement=rootProps.pagination&&!rootProps.hideFooterPagination&&rootProps.slots.pagination&&(0,jsx_runtime.jsx)(rootProps.slots.pagination,(0,esm_extends.Z)({},null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.pagination));return(0,jsx_runtime.jsxs)(GridFooterContainer,(0,esm_extends.Z)({ref},props,{children:[selectedRowCountElement,rowCountElement,paginationElement]}))})),GridPreferencesPanel=react.forwardRef((function GridPreferencesPanel(props,ref){var _preferencePanelState,_rootProps$slotProps,_rootProps$slotProps2;const apiRef=(0,utils_useGridApiContext.l)(),columns=useGridSelector(apiRef,gridColumnDefinitionsSelector),rootProps=(0,useGridRootProps.B)(),preferencePanelState=useGridSelector(apiRef,gridPreferencePanelStateSelector),panelContent=apiRef.current.unstable_applyPipeProcessors("preferencePanel",null,null!=(_preferencePanelState=preferencePanelState.openedPanelValue)?_preferencePanelState:GridPreferencePanelsValue.filters);return(0,jsx_runtime.jsx)(rootProps.slots.panel,(0,esm_extends.Z)({ref,as:rootProps.slots.basePopper,open:columns.length>0&&preferencePanelState.open},null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.panel,props,null==(_rootProps$slotProps2=rootProps.slotProps)?void 0:_rootProps$slotProps2.basePopper,{children:panelContent}))}));var CircularProgress=__webpack_require__("./node_modules/@mui/material/CircularProgress/CircularProgress.js");const GridOverlay_excluded=["className"],GridOverlayRoot=(0,esm_styled.Z)("div",{name:"MuiDataGrid",slot:"Overlay",overridesResolver:(_,styles)=>styles.overlay})({width:"100%",height:"100%",display:"flex",alignSelf:"center",alignItems:"center",justifyContent:"center",backgroundColor:"var(--unstable_DataGrid-overlayBackground)"}),GridOverlay=react.forwardRef((function GridOverlay(props,ref){const{className}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridOverlay_excluded),rootProps=(0,useGridRootProps.B)(),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["overlay"]},getDataGridUtilityClass,classes)})(rootProps);return(0,jsx_runtime.jsx)(GridOverlayRoot,(0,esm_extends.Z)({ref,className:(0,clsx_m.Z)(classes.root,className),ownerState:rootProps},other))})),GridLoadingOverlay=react.forwardRef((function GridLoadingOverlay(props,ref){return(0,jsx_runtime.jsx)(GridOverlay,(0,esm_extends.Z)({ref},props,{children:(0,jsx_runtime.jsx)(CircularProgress.Z,{})}))})),GridNoRowsOverlay=react.forwardRef((function GridNoRowsOverlay(props,ref){const noRowsLabel=(0,utils_useGridApiContext.l)().current.getLocaleText("noRowsLabel");return(0,jsx_runtime.jsx)(GridOverlay,(0,esm_extends.Z)({ref},props,{children:noRowsLabel}))}));var isHostComponent=__webpack_require__("./node_modules/@mui/base/utils/isHostComponent.js"),Select=__webpack_require__("./node_modules/@mui/material/Select/Select.js"),TableCell=__webpack_require__("./node_modules/@mui/material/TableCell/TableCell.js"),Toolbar=__webpack_require__("./node_modules/@mui/material/Toolbar/Toolbar.js"),KeyboardArrowLeft=__webpack_require__("./node_modules/@mui/material/internal/svg-icons/KeyboardArrowLeft.js"),KeyboardArrowRight=__webpack_require__("./node_modules/@mui/material/internal/svg-icons/KeyboardArrowRight.js"),IconButton=__webpack_require__("./node_modules/@mui/material/IconButton/IconButton.js"),createSvgIcon=__webpack_require__("./node_modules/@mui/material/utils/createSvgIcon.js");const LastPage=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"}),"LastPage"),FirstPage=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"}),"FirstPage");var _LastPageIcon,_FirstPageIcon,_KeyboardArrowRight,_KeyboardArrowLeft,_KeyboardArrowLeft2,_KeyboardArrowRight2,_FirstPageIcon2,_LastPageIcon2;const TablePaginationActions_excluded=["backIconButtonProps","count","getItemAriaLabel","nextIconButtonProps","onPageChange","page","rowsPerPage","showFirstButton","showLastButton"],TablePagination_TablePaginationActions=react.forwardRef((function TablePaginationActions(props,ref){const{backIconButtonProps,count,getItemAriaLabel,nextIconButtonProps,onPageChange,page,rowsPerPage,showFirstButton,showLastButton}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,TablePaginationActions_excluded),theme=(0,useTheme.Z)();return(0,jsx_runtime.jsxs)("div",(0,esm_extends.Z)({ref},other,{children:[showFirstButton&&(0,jsx_runtime.jsx)(IconButton.Z,{onClick:event=>{onPageChange(event,0)},disabled:0===page,"aria-label":getItemAriaLabel("first",page),title:getItemAriaLabel("first",page),children:"rtl"===theme.direction?_LastPageIcon||(_LastPageIcon=(0,jsx_runtime.jsx)(LastPage,{})):_FirstPageIcon||(_FirstPageIcon=(0,jsx_runtime.jsx)(FirstPage,{}))}),(0,jsx_runtime.jsx)(IconButton.Z,(0,esm_extends.Z)({onClick:event=>{onPageChange(event,page-1)},disabled:0===page,color:"inherit","aria-label":getItemAriaLabel("previous",page),title:getItemAriaLabel("previous",page)},backIconButtonProps,{children:"rtl"===theme.direction?_KeyboardArrowRight||(_KeyboardArrowRight=(0,jsx_runtime.jsx)(KeyboardArrowRight.Z,{})):_KeyboardArrowLeft||(_KeyboardArrowLeft=(0,jsx_runtime.jsx)(KeyboardArrowLeft.Z,{}))})),(0,jsx_runtime.jsx)(IconButton.Z,(0,esm_extends.Z)({onClick:event=>{onPageChange(event,page+1)},disabled:-1!==count&&page>=Math.ceil(count/rowsPerPage)-1,color:"inherit","aria-label":getItemAriaLabel("next",page),title:getItemAriaLabel("next",page)},nextIconButtonProps,{children:"rtl"===theme.direction?_KeyboardArrowLeft2||(_KeyboardArrowLeft2=(0,jsx_runtime.jsx)(KeyboardArrowLeft.Z,{})):_KeyboardArrowRight2||(_KeyboardArrowRight2=(0,jsx_runtime.jsx)(KeyboardArrowRight.Z,{}))})),showLastButton&&(0,jsx_runtime.jsx)(IconButton.Z,{onClick:event=>{onPageChange(event,Math.max(0,Math.ceil(count/rowsPerPage)-1))},disabled:page>=Math.ceil(count/rowsPerPage)-1,"aria-label":getItemAriaLabel("last",page),title:getItemAriaLabel("last",page),children:"rtl"===theme.direction?_FirstPageIcon2||(_FirstPageIcon2=(0,jsx_runtime.jsx)(FirstPage,{})):_LastPageIcon2||(_LastPageIcon2=(0,jsx_runtime.jsx)(LastPage,{}))})]}))}));var utils_useId=__webpack_require__("./node_modules/@mui/material/utils/useId.js");function getTablePaginationUtilityClass(slot){return(0,generateUtilityClass.Z)("MuiTablePagination",slot)}const TablePagination_tablePaginationClasses=(0,generateUtilityClasses.Z)("MuiTablePagination",["root","toolbar","spacer","selectLabel","selectRoot","select","selectIcon","input","menuItem","displayedRows","actions"]);var _InputBase;const TablePagination_excluded=["ActionsComponent","backIconButtonProps","className","colSpan","component","count","getItemAriaLabel","labelDisplayedRows","labelRowsPerPage","nextIconButtonProps","onPageChange","onRowsPerPageChange","page","rowsPerPage","rowsPerPageOptions","SelectProps","showFirstButton","showLastButton"],TablePaginationRoot=(0,styled.ZP)(TableCell.Z,{name:"MuiTablePagination",slot:"Root",overridesResolver:(props,styles)=>styles.root})((({theme})=>({overflow:"auto",color:(theme.vars||theme).palette.text.primary,fontSize:theme.typography.pxToRem(14),"&:last-child":{padding:0}}))),TablePaginationToolbar=(0,styled.ZP)(Toolbar.Z,{name:"MuiTablePagination",slot:"Toolbar",overridesResolver:(props,styles)=>(0,esm_extends.Z)({[`& .${TablePagination_tablePaginationClasses.actions}`]:styles.actions},styles.toolbar)})((({theme})=>({minHeight:52,paddingRight:2,[`${theme.breakpoints.up("xs")} and (orientation: landscape)`]:{minHeight:52},[theme.breakpoints.up("sm")]:{minHeight:52,paddingRight:2},[`& .${TablePagination_tablePaginationClasses.actions}`]:{flexShrink:0,marginLeft:20}}))),TablePaginationSpacer=(0,styled.ZP)("div",{name:"MuiTablePagination",slot:"Spacer",overridesResolver:(props,styles)=>styles.spacer})({flex:"1 1 100%"}),TablePaginationSelectLabel=(0,styled.ZP)("p",{name:"MuiTablePagination",slot:"SelectLabel",overridesResolver:(props,styles)=>styles.selectLabel})((({theme})=>(0,esm_extends.Z)({},theme.typography.body2,{flexShrink:0}))),TablePaginationSelect=(0,styled.ZP)(Select.Z,{name:"MuiTablePagination",slot:"Select",overridesResolver:(props,styles)=>(0,esm_extends.Z)({[`& .${TablePagination_tablePaginationClasses.selectIcon}`]:styles.selectIcon,[`& .${TablePagination_tablePaginationClasses.select}`]:styles.select},styles.input,styles.selectRoot)})({color:"inherit",fontSize:"inherit",flexShrink:0,marginRight:32,marginLeft:8,[`& .${TablePagination_tablePaginationClasses.select}`]:{paddingLeft:8,paddingRight:24,textAlign:"right",textAlignLast:"right"}}),TablePaginationMenuItem=(0,styled.ZP)(MenuItem.Z,{name:"MuiTablePagination",slot:"MenuItem",overridesResolver:(props,styles)=>styles.menuItem})({}),TablePaginationDisplayedRows=(0,styled.ZP)("p",{name:"MuiTablePagination",slot:"DisplayedRows",overridesResolver:(props,styles)=>styles.displayedRows})((({theme})=>(0,esm_extends.Z)({},theme.typography.body2,{flexShrink:0})));function defaultLabelDisplayedRows({from,to,count}){return`${from}–${to} of ${-1!==count?count:`more than ${to}`}`}function defaultGetAriaLabel(type){return`Go to ${type} page`}const TablePagination_TablePagination=react.forwardRef((function TablePagination(inProps,ref){const props=(0,useThemeProps.Z)({props:inProps,name:"MuiTablePagination"}),{ActionsComponent=TablePagination_TablePaginationActions,backIconButtonProps,className,colSpan:colSpanProp,component=TableCell.Z,count,getItemAriaLabel=defaultGetAriaLabel,labelDisplayedRows=defaultLabelDisplayedRows,labelRowsPerPage="Rows per page:",nextIconButtonProps,onPageChange,onRowsPerPageChange,page,rowsPerPage,rowsPerPageOptions=[10,25,50,100],SelectProps={},showFirstButton=!1,showLastButton=!1}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,TablePagination_excluded),ownerState=props,classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["root"],toolbar:["toolbar"],spacer:["spacer"],selectLabel:["selectLabel"],select:["select"],input:["input"],selectIcon:["selectIcon"],menuItem:["menuItem"],displayedRows:["displayedRows"],actions:["actions"]},getTablePaginationUtilityClass,classes)})(ownerState),MenuItemComponent=SelectProps.native?"option":TablePaginationMenuItem;let colSpan;component!==TableCell.Z&&"td"!==component||(colSpan=colSpanProp||1e3);const selectId=(0,utils_useId.Z)(SelectProps.id),labelId=(0,utils_useId.Z)(SelectProps.labelId);return(0,jsx_runtime.jsx)(TablePaginationRoot,(0,esm_extends.Z)({colSpan,ref,as:component,ownerState,className:(0,clsx_m.Z)(classes.root,className)},other,{children:(0,jsx_runtime.jsxs)(TablePaginationToolbar,{className:classes.toolbar,children:[(0,jsx_runtime.jsx)(TablePaginationSpacer,{className:classes.spacer}),rowsPerPageOptions.length>1&&(0,jsx_runtime.jsx)(TablePaginationSelectLabel,{className:classes.selectLabel,id:labelId,children:labelRowsPerPage}),rowsPerPageOptions.length>1&&(0,jsx_runtime.jsx)(TablePaginationSelect,(0,esm_extends.Z)({variant:"standard"},!SelectProps.variant&&{input:_InputBase||(_InputBase=(0,jsx_runtime.jsx)(InputBase.ZP,{}))},{value:rowsPerPage,onChange:onRowsPerPageChange,id:selectId,labelId},SelectProps,{classes:(0,esm_extends.Z)({},SelectProps.classes,{root:(0,clsx_m.Z)(classes.input,classes.selectRoot,(SelectProps.classes||{}).root),select:(0,clsx_m.Z)(classes.select,(SelectProps.classes||{}).select),icon:(0,clsx_m.Z)(classes.selectIcon,(SelectProps.classes||{}).icon)}),children:rowsPerPageOptions.map((rowsPerPageOption=>(0,react.createElement)(MenuItemComponent,(0,esm_extends.Z)({},!(0,isHostComponent.Z)(MenuItemComponent)&&{ownerState},{className:classes.menuItem,key:rowsPerPageOption.label?rowsPerPageOption.label:rowsPerPageOption,value:rowsPerPageOption.value?rowsPerPageOption.value:rowsPerPageOption}),rowsPerPageOption.label?rowsPerPageOption.label:rowsPerPageOption)))})),(0,jsx_runtime.jsx)(TablePaginationDisplayedRows,{className:classes.displayedRows,children:labelDisplayedRows({from:0===count?0:page*rowsPerPage+1,to:-1===count?(page+1)*rowsPerPage:-1===rowsPerPage?count:Math.min(count,(page+1)*rowsPerPage),count:-1===count?-1:count,page})}),(0,jsx_runtime.jsx)(ActionsComponent,{className:classes.actions,backIconButtonProps,count,nextIconButtonProps,onPageChange,page,rowsPerPage,showFirstButton,showLastButton,getItemAriaLabel})]})}))})),GridPaginationRoot=(0,styled.ZP)(TablePagination_TablePagination)((({theme})=>({[`& .${TablePagination_tablePaginationClasses.selectLabel}`]:{display:"none",[theme.breakpoints.up("sm")]:{display:"block"}},[`& .${TablePagination_tablePaginationClasses.input}`]:{display:"none",[theme.breakpoints.up("sm")]:{display:"inline-flex"}}}))),GridPagination=react.forwardRef((function GridPagination(props,ref){var _rootProps$pageSizeOp;const apiRef=(0,utils_useGridApiContext.l)(),rootProps=(0,useGridRootProps.B)(),paginationModel=useGridSelector(apiRef,gridPaginationModelSelector),visibleTopLevelRowCount=useGridSelector(apiRef,gridFilteredTopLevelRowCountSelector),rowCount=react.useMemo((()=>{var _ref,_rootProps$rowCount;return null!=(_ref=null!=(_rootProps$rowCount=rootProps.rowCount)?_rootProps$rowCount:visibleTopLevelRowCount)?_ref:0}),[rootProps.rowCount,visibleTopLevelRowCount]),lastPage=react.useMemo((()=>Math.floor(rowCount/(paginationModel.pageSize||1))),[rowCount,paginationModel.pageSize]),handlePageSizeChange=react.useCallback((event=>{const pageSize=Number(event.target.value);apiRef.current.setPageSize(pageSize)}),[apiRef]),handlePageChange=react.useCallback(((_,page)=>{apiRef.current.setPage(page)}),[apiRef]);return(0,jsx_runtime.jsx)(GridPaginationRoot,(0,esm_extends.Z)({ref,component:"div",count:rowCount,page:paginationModel.page<=lastPage?paginationModel.page:lastPage,rowsPerPageOptions:null!=(_rootProps$pageSizeOp=rootProps.pageSizeOptions)&&_rootProps$pageSizeOp.includes(paginationModel.pageSize)?rootProps.pageSizeOptions:[],rowsPerPage:paginationModel.pageSize,onPageChange:handlePageChange,onRowsPerPageChange:handlePageSizeChange},apiRef.current.getLocaleText("MuiTablePagination"),props))})),GridPanelContent_excluded=["className"],GridPanelContent_useUtilityClasses=ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["panelContent"]},getDataGridUtilityClass,classes)},GridPanelContentRoot=(0,esm_styled.Z)("div",{name:"MuiDataGrid",slot:"PanelContent",overridesResolver:(props,styles)=>styles.panelContent})({display:"flex",flexDirection:"column",overflow:"auto",flex:"1 1",maxHeight:400});function GridPanelContent(props){const{className}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridPanelContent_excluded),rootProps=(0,useGridRootProps.B)(),classes=GridPanelContent_useUtilityClasses(rootProps);return(0,jsx_runtime.jsx)(GridPanelContentRoot,(0,esm_extends.Z)({className:(0,clsx_m.Z)(className,classes.root),ownerState:rootProps},other))}const GridPanelFooter_excluded=["className"],GridPanelFooter_useUtilityClasses=ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["panelFooter"]},getDataGridUtilityClass,classes)},GridPanelFooterRoot=(0,esm_styled.Z)("div",{name:"MuiDataGrid",slot:"PanelFooter",overridesResolver:(props,styles)=>styles.panelFooter})((({theme})=>({padding:theme.spacing(.5),display:"flex",justifyContent:"space-between"})));function GridPanelFooter(props){const{className}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridPanelFooter_excluded),rootProps=(0,useGridRootProps.B)(),classes=GridPanelFooter_useUtilityClasses(rootProps);return(0,jsx_runtime.jsx)(GridPanelFooterRoot,(0,esm_extends.Z)({className:(0,clsx_m.Z)(className,classes.root),ownerState:rootProps},other))}var FocusTrap=__webpack_require__("./node_modules/@mui/base/FocusTrap/FocusTrap.js");const GridPanelWrapper_excluded=["className","slotProps"],GridPanelWrapperRoot=(0,styled.ZP)("div",{name:"MuiDataGrid",slot:"PanelWrapper",overridesResolver:(props,styles)=>styles.panelWrapper})({display:"flex",flexDirection:"column",flex:1,"&:focus":{outline:0}}),isEnabled=()=>!0,GridPanelWrapper=react.forwardRef((function GridPanelWrapper(props,ref){const{className,slotProps={}}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridPanelWrapper_excluded),rootProps=(0,useGridRootProps.B)(),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["panelWrapper"]},getDataGridUtilityClass,classes)})(rootProps);return(0,jsx_runtime.jsx)(FocusTrap.Z,(0,esm_extends.Z)({open:!0,disableEnforceFocus:!0,isEnabled},slotProps.TrapFocus,{children:(0,jsx_runtime.jsx)(GridPanelWrapperRoot,(0,esm_extends.Z)({ref,tabIndex:-1,className:(0,clsx_m.Z)(className,classes.root),ownerState:rootProps},other))}))})),GridFilterForm_excluded=["item","hasMultipleFilters","deleteFilter","applyFilterChanges","multiFilterOperator","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","focusElementRef","logicOperators","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","children"],GridFilterForm_excluded2=["InputComponentProps"],GridFilterFormRoot=(0,styled.ZP)("div",{name:"MuiDataGrid",slot:"FilterForm",overridesResolver:(props,styles)=>styles.filterForm})((({theme})=>({display:"flex",padding:theme.spacing(1)}))),FilterFormDeleteIcon=(0,styled.ZP)("div",{name:"MuiDataGrid",slot:"FilterFormDeleteIcon",overridesResolver:(_,styles)=>styles.filterFormDeleteIcon})((({theme})=>({flexShrink:0,justifyContent:"flex-end",marginRight:theme.spacing(.5),marginBottom:theme.spacing(.2)}))),FilterFormLogicOperatorInput=(0,styled.ZP)("div",{name:"MuiDataGrid",slot:"FilterFormLogicOperatorInput",overridesResolver:(_,styles)=>styles.filterFormLogicOperatorInput})({minWidth:55,marginRight:5,justifyContent:"end"}),FilterFormColumnInput=(0,styled.ZP)("div",{name:"MuiDataGrid",slot:"FilterFormColumnInput",overridesResolver:(_,styles)=>styles.filterFormColumnInput})({width:150}),FilterFormOperatorInput=(0,styled.ZP)("div",{name:"MuiDataGrid",slot:"FilterFormOperatorInput",overridesResolver:(_,styles)=>styles.filterFormOperatorInput})({width:120}),FilterFormValueInput=(0,styled.ZP)("div",{name:"MuiDataGrid",slot:"FilterFormValueInput",overridesResolver:(_,styles)=>styles.filterFormValueInput})({width:190}),getColumnLabel=col=>col.headerName||col.field,collator=new Intl.Collator,GridFilterForm=react.forwardRef((function GridFilterForm(props,ref){var _rootProps$slotProps,_rootProps$slotProps2,_baseSelectProps$nati,_rootProps$slotProps3,_rootProps$slotProps4,_rootProps$slotProps5,_rootProps$slotProps6,_rootProps$slotProps7,_rootProps$slotProps8,_currentColumn$filter2;const{item,hasMultipleFilters,deleteFilter,applyFilterChanges,multiFilterOperator,showMultiFilterOperators,disableMultiFilterOperator,applyMultiFilterOperatorChanges,focusElementRef,logicOperators=[GridLogicOperator.And,GridLogicOperator.Or],columnsSort,filterColumns,deleteIconProps={},logicOperatorInputProps={},operatorInputProps={},columnInputProps={},valueInputProps={}}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridFilterForm_excluded),apiRef=(0,utils_useGridApiContext.l)(),filterableColumns=useGridSelector(apiRef,gridFilterableColumnDefinitionsSelector),filterModel=useGridSelector(apiRef,gridFilterModelSelector),columnSelectId=(0,useId.Z)(),columnSelectLabelId=(0,useId.Z)(),operatorSelectId=(0,useId.Z)(),operatorSelectLabelId=(0,useId.Z)(),rootProps=(0,useGridRootProps.B)(),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["filterForm"],deleteIcon:["filterFormDeleteIcon"],logicOperatorInput:["filterFormLogicOperatorInput"],columnInput:["filterFormColumnInput"],operatorInput:["filterFormOperatorInput"],valueInput:["filterFormValueInput"]},getDataGridUtilityClass,classes)})(rootProps),valueRef=react.useRef(null),filterSelectorRef=react.useRef(null),hasLogicOperatorColumn=hasMultipleFilters&&logicOperators.length>0,baseFormControlProps=(null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.baseFormControl)||{},isBaseSelectNative=null==(_baseSelectProps$nati=((null==(_rootProps$slotProps2=rootProps.slotProps)?void 0:_rootProps$slotProps2.baseSelect)||{}).native)||_baseSelectProps$nati,baseInputLabelProps=(null==(_rootProps$slotProps3=rootProps.slotProps)?void 0:_rootProps$slotProps3.baseInputLabel)||{},baseSelectOptionProps=(null==(_rootProps$slotProps4=rootProps.slotProps)?void 0:_rootProps$slotProps4.baseSelectOption)||{},{InputComponentProps}=valueInputProps,valueInputPropsOther=(0,objectWithoutPropertiesLoose.Z)(valueInputProps,GridFilterForm_excluded2),filteredColumns=react.useMemo((()=>{if(void 0===filterColumns||"function"!=typeof filterColumns)return filterableColumns;const filteredFields=filterColumns({field:item.field,columns:filterableColumns,currentFilters:(null==filterModel?void 0:filterModel.items)||[]});return filterableColumns.filter((column=>filteredFields.includes(column.field)))}),[filterColumns,null==filterModel?void 0:filterModel.items,filterableColumns,item.field]),sortedFilteredColumns=react.useMemo((()=>{switch(columnsSort){case"asc":return filteredColumns.sort(((a,b)=>collator.compare(getColumnLabel(a),getColumnLabel(b))));case"desc":return filteredColumns.sort(((a,b)=>-collator.compare(getColumnLabel(a),getColumnLabel(b))));default:return filteredColumns}}),[filteredColumns,columnsSort]),currentColumn=item.field?apiRef.current.getColumn(item.field):null,currentOperator=react.useMemo((()=>{var _currentColumn$filter;return item.operator&&currentColumn?null==(_currentColumn$filter=currentColumn.filterOperators)?void 0:_currentColumn$filter.find((operator=>operator.value===item.operator)):null}),[item,currentColumn]),changeColumn=react.useCallback((event=>{const field=event.target.value,column=apiRef.current.getColumn(field);if(column.field===currentColumn.field)return;const newOperator=column.filterOperators.find((operator=>operator.value===item.operator))||column.filterOperators[0],eraseItemValue=!newOperator.InputComponent||newOperator.InputComponent!==(null==currentOperator?void 0:currentOperator.InputComponent);applyFilterChanges((0,esm_extends.Z)({},item,{field,operator:newOperator.value,value:eraseItemValue?void 0:item.value}))}),[apiRef,applyFilterChanges,item,currentColumn,currentOperator]),changeOperator=react.useCallback((event=>{const operator=event.target.value,newOperator=null==currentColumn?void 0:currentColumn.filterOperators.find((op=>op.value===operator)),eraseItemValue=!(null!=newOperator&&newOperator.InputComponent)||(null==newOperator?void 0:newOperator.InputComponent)!==(null==currentOperator?void 0:currentOperator.InputComponent);applyFilterChanges((0,esm_extends.Z)({},item,{operator,value:eraseItemValue?void 0:item.value}))}),[applyFilterChanges,item,currentColumn,currentOperator]),changeLogicOperator=react.useCallback((event=>{const logicOperator=event.target.value===GridLogicOperator.And.toString()?GridLogicOperator.And:GridLogicOperator.Or;applyMultiFilterOperatorChanges(logicOperator)}),[applyMultiFilterOperatorChanges]);return react.useImperativeHandle(focusElementRef,(()=>({focus:()=>{var _valueRef$current;null!=currentOperator&&currentOperator.InputComponent?null==valueRef||null==(_valueRef$current=valueRef.current)||_valueRef$current.focus():filterSelectorRef.current.focus()}})),[currentOperator]),(0,jsx_runtime.jsxs)(GridFilterFormRoot,(0,esm_extends.Z)({ref,className:classes.root,"data-id":item.id,ownerState:rootProps},other,{children:[(0,jsx_runtime.jsx)(FilterFormDeleteIcon,(0,esm_extends.Z)({variant:"standard",as:rootProps.slots.baseFormControl},baseFormControlProps,deleteIconProps,{className:(0,clsx_m.Z)(classes.deleteIcon,baseFormControlProps.className,deleteIconProps.className),ownerState:rootProps,children:(0,jsx_runtime.jsx)(rootProps.slots.baseIconButton,(0,esm_extends.Z)({"aria-label":apiRef.current.getLocaleText("filterPanelDeleteIconLabel"),title:apiRef.current.getLocaleText("filterPanelDeleteIconLabel"),onClick:()=>{rootProps.disableMultipleColumnsFiltering?void 0===item.value?deleteFilter(item):applyFilterChanges((0,esm_extends.Z)({},item,{value:void 0})):deleteFilter(item)},size:"small"},null==(_rootProps$slotProps5=rootProps.slotProps)?void 0:_rootProps$slotProps5.baseIconButton,{children:(0,jsx_runtime.jsx)(rootProps.slots.filterPanelDeleteIcon,{fontSize:"small"})}))})),(0,jsx_runtime.jsx)(FilterFormLogicOperatorInput,(0,esm_extends.Z)({variant:"standard",as:rootProps.slots.baseFormControl},baseFormControlProps,logicOperatorInputProps,{sx:(0,esm_extends.Z)({display:hasLogicOperatorColumn?"flex":"none",visibility:showMultiFilterOperators?"visible":"hidden"},baseFormControlProps.sx||{},logicOperatorInputProps.sx||{}),className:(0,clsx_m.Z)(classes.logicOperatorInput,baseFormControlProps.className,logicOperatorInputProps.className),ownerState:rootProps,children:(0,jsx_runtime.jsx)(rootProps.slots.baseSelect,(0,esm_extends.Z)({inputProps:{"aria-label":apiRef.current.getLocaleText("filterPanelLogicOperator")},value:multiFilterOperator,onChange:changeLogicOperator,disabled:!!disableMultiFilterOperator||1===logicOperators.length,native:isBaseSelectNative},null==(_rootProps$slotProps6=rootProps.slotProps)?void 0:_rootProps$slotProps6.baseSelect,{children:logicOperators.map((logicOperator=>(0,react.createElement)(rootProps.slots.baseSelectOption,(0,esm_extends.Z)({},baseSelectOptionProps,{native:isBaseSelectNative,key:logicOperator.toString(),value:logicOperator.toString()}),apiRef.current.getLocaleText((logicOperator=>{switch(logicOperator){case GridLogicOperator.And:return"filterPanelOperatorAnd";case GridLogicOperator.Or:return"filterPanelOperatorOr";default:throw new Error("MUI: Invalid `logicOperator` property in the `GridFilterPanel`.")}})(logicOperator)))))}))})),(0,jsx_runtime.jsxs)(FilterFormColumnInput,(0,esm_extends.Z)({variant:"standard",as:rootProps.slots.baseFormControl},baseFormControlProps,columnInputProps,{className:(0,clsx_m.Z)(classes.columnInput,baseFormControlProps.className,columnInputProps.className),ownerState:rootProps,children:[(0,jsx_runtime.jsx)(rootProps.slots.baseInputLabel,(0,esm_extends.Z)({},baseInputLabelProps,{htmlFor:columnSelectId,id:columnSelectLabelId,children:apiRef.current.getLocaleText("filterPanelColumns")})),(0,jsx_runtime.jsx)(rootProps.slots.baseSelect,(0,esm_extends.Z)({labelId:columnSelectLabelId,id:columnSelectId,label:apiRef.current.getLocaleText("filterPanelColumns"),value:item.field||"",onChange:changeColumn,native:isBaseSelectNative},null==(_rootProps$slotProps7=rootProps.slotProps)?void 0:_rootProps$slotProps7.baseSelect,{children:sortedFilteredColumns.map((col=>(0,react.createElement)(rootProps.slots.baseSelectOption,(0,esm_extends.Z)({},baseSelectOptionProps,{native:isBaseSelectNative,key:col.field,value:col.field}),getColumnLabel(col))))}))]})),(0,jsx_runtime.jsxs)(FilterFormOperatorInput,(0,esm_extends.Z)({variant:"standard",as:rootProps.slots.baseFormControl},baseFormControlProps,operatorInputProps,{className:(0,clsx_m.Z)(classes.operatorInput,baseFormControlProps.className,operatorInputProps.className),ownerState:rootProps,children:[(0,jsx_runtime.jsx)(rootProps.slots.baseInputLabel,(0,esm_extends.Z)({},baseInputLabelProps,{htmlFor:operatorSelectId,id:operatorSelectLabelId,children:apiRef.current.getLocaleText("filterPanelOperator")})),(0,jsx_runtime.jsx)(rootProps.slots.baseSelect,(0,esm_extends.Z)({labelId:operatorSelectLabelId,label:apiRef.current.getLocaleText("filterPanelOperator"),id:operatorSelectId,value:item.operator,onChange:changeOperator,native:isBaseSelectNative,inputRef:filterSelectorRef},null==(_rootProps$slotProps8=rootProps.slotProps)?void 0:_rootProps$slotProps8.baseSelect,{children:null==currentColumn||null==(_currentColumn$filter2=currentColumn.filterOperators)?void 0:_currentColumn$filter2.map((operator=>(0,react.createElement)(rootProps.slots.baseSelectOption,(0,esm_extends.Z)({},baseSelectOptionProps,{native:isBaseSelectNative,key:operator.value,value:operator.value}),operator.label||apiRef.current.getLocaleText(`filterOperator${(0,capitalize.Z)(operator.value)}`))))}))]})),(0,jsx_runtime.jsx)(FilterFormValueInput,(0,esm_extends.Z)({variant:"standard",as:rootProps.slots.baseFormControl},baseFormControlProps,valueInputPropsOther,{className:(0,clsx_m.Z)(classes.valueInput,baseFormControlProps.className,valueInputPropsOther.className),ownerState:rootProps,children:null!=currentOperator&&currentOperator.InputComponent?(0,jsx_runtime.jsx)(currentOperator.InputComponent,(0,esm_extends.Z)({apiRef,item,applyValue:applyFilterChanges,focusElementRef:valueRef},currentOperator.InputComponentProps,InputComponentProps)):null}))]}))})),GridFilterPanel_excluded=["logicOperators","columnsSort","filterFormProps","getColumnForNewFilter","children","disableAddFilterButton","disableRemoveAllButton"],getGridFilter=col=>({field:col.field,operator:col.filterOperators[0].value,id:Math.round(1e5*Math.random())}),GridFilterPanel=react.forwardRef((function GridFilterPanel(props,ref){var _rootProps$slotProps,_rootProps$slotProps2;const apiRef=(0,utils_useGridApiContext.l)(),rootProps=(0,useGridRootProps.B)(),filterModel=useGridSelector(apiRef,gridFilterModelSelector),filterableColumns=useGridSelector(apiRef,gridFilterableColumnDefinitionsSelector),lastFilterRef=react.useRef(null),{logicOperators=[GridLogicOperator.And,GridLogicOperator.Or],columnsSort,filterFormProps,getColumnForNewFilter,disableAddFilterButton=!1,disableRemoveAllButton=!1}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridFilterPanel_excluded),applyFilter=react.useCallback((item=>{apiRef.current.upsertFilterItem(item)}),[apiRef]),applyFilterLogicOperator=react.useCallback((operator=>{apiRef.current.setFilterLogicOperator(operator)}),[apiRef]),getDefaultFilter=react.useCallback((()=>{let nextColumnWithOperator;if(getColumnForNewFilter&&"function"==typeof getColumnForNewFilter){const nextFieldName=getColumnForNewFilter({currentFilters:(null==filterModel?void 0:filterModel.items)||[],columns:filterableColumns});if(null===nextFieldName)return null;nextColumnWithOperator=filterableColumns.find((({field})=>field===nextFieldName))}else nextColumnWithOperator=filterableColumns.find((colDef=>{var _colDef$filterOperato;return null==(_colDef$filterOperato=colDef.filterOperators)?void 0:_colDef$filterOperato.length}));return nextColumnWithOperator?getGridFilter(nextColumnWithOperator):null}),[null==filterModel?void 0:filterModel.items,filterableColumns,getColumnForNewFilter]),getNewFilter=react.useCallback((()=>{if(void 0===getColumnForNewFilter||"function"!=typeof getColumnForNewFilter)return getDefaultFilter();const currentFilters=filterModel.items.length?filterModel.items:[getDefaultFilter()].filter(Boolean),nextColumnFieldName=getColumnForNewFilter({currentFilters,columns:filterableColumns});if(null===nextColumnFieldName)return null;const nextColumnWithOperator=filterableColumns.find((({field})=>field===nextColumnFieldName));return nextColumnWithOperator?getGridFilter(nextColumnWithOperator):null}),[filterModel.items,filterableColumns,getColumnForNewFilter,getDefaultFilter]),items=react.useMemo((()=>{if(filterModel.items.length)return filterModel.items;const defaultFilter=getDefaultFilter();return defaultFilter?[defaultFilter]:[]}),[filterModel.items,getDefaultFilter]),hasMultipleFilters=items.length>1,deleteFilter=react.useCallback((item=>{const shouldCloseFilterPanel=1===items.length;apiRef.current.deleteFilterItem(item),shouldCloseFilterPanel&&apiRef.current.hideFilterPanel()}),[apiRef,items.length]);return react.useEffect((()=>{logicOperators.length>0&&filterModel.logicOperator&&!logicOperators.includes(filterModel.logicOperator)&&applyFilterLogicOperator(logicOperators[0])}),[logicOperators,applyFilterLogicOperator,filterModel.logicOperator]),react.useEffect((()=>{items.length>0&&lastFilterRef.current.focus()}),[items.length]),(0,jsx_runtime.jsxs)(GridPanelWrapper,(0,esm_extends.Z)({ref},other,{children:[(0,jsx_runtime.jsx)(GridPanelContent,{children:items.map(((item,index)=>(0,jsx_runtime.jsx)(GridFilterForm,(0,esm_extends.Z)({item,applyFilterChanges:applyFilter,deleteFilter,hasMultipleFilters,showMultiFilterOperators:index>0,multiFilterOperator:filterModel.logicOperator,disableMultiFilterOperator:1!==index,applyMultiFilterOperatorChanges:applyFilterLogicOperator,focusElementRef:index===items.length-1?lastFilterRef:null,logicOperators,columnsSort},filterFormProps),null==item.id?index:item.id)))}),rootProps.disableMultipleColumnsFiltering||disableAddFilterButton&&disableRemoveAllButton?null:(0,jsx_runtime.jsxs)(GridPanelFooter,{children:[disableAddFilterButton?(0,jsx_runtime.jsx)("span",{}):(0,jsx_runtime.jsx)(rootProps.slots.baseButton,(0,esm_extends.Z)({onClick:()=>{const newFilter=getNewFilter();newFilter&&apiRef.current.upsertFilterItems([...items,newFilter])},startIcon:(0,jsx_runtime.jsx)(rootProps.slots.filterPanelAddIcon,{})},null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.baseButton,{children:apiRef.current.getLocaleText("filterPanelAddFilter")})),disableRemoveAllButton?null:(0,jsx_runtime.jsx)(rootProps.slots.baseButton,(0,esm_extends.Z)({onClick:()=>{1===items.length&&void 0===items[0].value&&(apiRef.current.deleteFilterItem(items[0]),apiRef.current.hideFilterPanel()),apiRef.current.setFilterModel((0,esm_extends.Z)({},filterModel,{items:[]}))},startIcon:(0,jsx_runtime.jsx)(rootProps.slots.filterPanelRemoveAllIcon,{})},null==(_rootProps$slotProps2=rootProps.slotProps)?void 0:_rootProps$slotProps2.baseButton,{children:apiRef.current.getLocaleText("filterPanelRemoveAll")}))]})]}))}));var switchClasses=__webpack_require__("./node_modules/@mui/material/Switch/switchClasses.js"),FormControlLabel=__webpack_require__("./node_modules/@mui/material/FormControlLabel/FormControlLabel.js");const GridPanelHeader_excluded=["className"],GridPanelHeader_useUtilityClasses=ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["panelHeader"]},getDataGridUtilityClass,classes)},GridPanelHeaderRoot=(0,esm_styled.Z)("div",{name:"MuiDataGrid",slot:"PanelHeader",overridesResolver:(props,styles)=>styles.panelHeader})((({theme})=>({padding:theme.spacing(1)})));function GridPanelHeader(props){const{className}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridPanelHeader_excluded),rootProps=(0,useGridRootProps.B)(),classes=GridPanelHeader_useUtilityClasses(rootProps);return(0,jsx_runtime.jsx)(GridPanelHeaderRoot,(0,esm_extends.Z)({className:(0,clsx_m.Z)(className,classes.root),ownerState:rootProps},other))}const GridColumnsPanel_excluded=["sort","searchPredicate","autoFocusSearchField","disableHideAllButton","disableShowAllButton"],GridColumnsPanelRoot=(0,styled.ZP)("div",{name:"MuiDataGrid",slot:"ColumnsPanel",overridesResolver:(props,styles)=>styles.columnsPanel})({padding:"8px 0px 8px 8px"}),GridColumnsPanelRowRoot=(0,styled.ZP)("div",{name:"MuiDataGrid",slot:"ColumnsPanelRow",overridesResolver:(props,styles)=>styles.columnsPanelRow})((({theme})=>({display:"flex",justifyContent:"space-between",padding:"1px 8px 1px 7px",[`& .${switchClasses.Z.root}`]:{marginRight:theme.spacing(.5)}}))),GridColumnsPanel_collator=((0,styled.ZP)(IconButton.Z)({justifyContent:"flex-end"}),new Intl.Collator),defaultSearchPredicate=(column,searchValue)=>(column.headerName||column.field).toLowerCase().indexOf(searchValue)>-1;const GridPanel_excluded=["children","className","classes"],gridPanelClasses=(0,generateUtilityClasses.Z)("MuiDataGrid",["panel","paper"]),GridPanelRoot=(0,styled.ZP)(Popper.Z,{name:"MuiDataGrid",slot:"Panel",overridesResolver:(props,styles)=>styles.panel})((({theme})=>({zIndex:theme.zIndex.modal}))),GridPaperRoot=(0,styled.ZP)(Paper.Z,{name:"MuiDataGrid",slot:"Paper",overridesResolver:(props,styles)=>styles.paper})((({theme})=>({backgroundColor:(theme.vars||theme).palette.background.paper,minWidth:300,maxHeight:450,display:"flex"}))),GridPanel=react.forwardRef(((props,ref)=>{const{children,className}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridPanel_excluded),apiRef=(0,utils_useGridApiContext.l)(),rootProps=(0,useGridRootProps.B)(),classes=gridPanelClasses,[isPlaced,setIsPlaced]=react.useState(!1),handleClickAway=react.useCallback((()=>{apiRef.current.hidePreferences()}),[apiRef]),handleKeyDown=react.useCallback((event=>{isEscapeKey(event.key)&&apiRef.current.hidePreferences()}),[apiRef]),modifiers=react.useMemo((()=>[{name:"flip",enabled:!1},{name:"isPlaced",enabled:!0,phase:"main",fn:()=>{setIsPlaced(!0)},effect:()=>()=>{setIsPlaced(!1)}}]),[]),[anchorEl,setAnchorEl]=react.useState(null);return react.useEffect((()=>{var _apiRef$current$rootE,_apiRef$current$rootE2;const columnHeadersElement=null==(_apiRef$current$rootE=apiRef.current.rootElementRef)||null==(_apiRef$current$rootE2=_apiRef$current$rootE.current)?void 0:_apiRef$current$rootE2.querySelector(`.${gridClasses_gridClasses.columnHeaders}`);columnHeadersElement&&setAnchorEl(columnHeadersElement)}),[apiRef]),anchorEl?(0,jsx_runtime.jsx)(GridPanelRoot,(0,esm_extends.Z)({ref,placement:"bottom-start",className:(0,clsx_m.Z)(className,classes.panel),ownerState:rootProps,anchorEl,modifiers},other,{children:(0,jsx_runtime.jsx)(ClickAwayListener.Z,{mouseEvent:"onMouseUp",onClickAway:handleClickAway,children:(0,jsx_runtime.jsx)(GridPaperRoot,{className:classes.paper,ownerState:rootProps,elevation:8,onKeyDown:handleKeyDown,children:isPlaced&&children})})})):null})),GridRow_excluded=["selected","rowId","row","index","style","position","rowHeight","className","visibleColumns","renderedColumns","containerWidth","firstColumnToRender","lastColumnToRender","isLastVisible","focusedCell","tabbableCell","onClick","onDoubleClick","onMouseEnter","onMouseLeave"],GridRow_excluded2=["changeReason"];function EmptyCell({width}){if(!width)return null;const style={width};return(0,jsx_runtime.jsx)("div",{className:`${gridClasses_gridClasses.cell} ${gridClasses_gridClasses.withBorderColor}`,style})}const GridRow=react.forwardRef((function GridRow(props,refProp){const{selected,rowId,row,index,style:styleProp,position,rowHeight,className,renderedColumns,containerWidth,firstColumnToRender,isLastVisible=!1,focusedCell,tabbableCell,onClick,onDoubleClick,onMouseEnter,onMouseLeave}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridRow_excluded),apiRef=(0,utils_useGridApiContext.l)(),ref=react.useRef(null),rootProps=(0,useGridRootProps.B)(),currentPage=useGridVisibleRows(apiRef,rootProps),columnsTotalWidth=useGridSelector(apiRef,gridColumnsTotalWidthSelector),sortModel=useGridSelector(apiRef,gridSortModelSelector),treeDepth=useGridSelector(apiRef,gridRowMaximumTreeDepthSelector),headerGroupingMaxDepth=useGridSelector(apiRef,gridColumnGroupsHeaderMaxDepthSelector),editRowsState=useGridSelector(apiRef,gridEditRowsStateSelector),handleRef=(0,useForkRef.Z)(ref,refProp),ariaRowIndex=index+headerGroupingMaxDepth+2,classes=(ownerState=>{const{editable,editing,selected,isLastVisible,rowHeight,classes}=ownerState,slots={root:["row",selected&&"selected",editable&&"row--editable",editing&&"row--editing",isLastVisible&&"row--lastVisible","auto"===rowHeight&&"row--dynamicHeight"]};return(0,composeClasses.Z)(slots,getDataGridUtilityClass,classes)})({selected,isLastVisible,classes:rootProps.classes,editing:apiRef.current.getRowMode(rowId)===gridEditRowModel.se.Edit,editable:rootProps.editMode===gridEditRowModel.r2.Row,rowHeight});react.useLayoutEffect((()=>{"auto"===rowHeight&&ref.current&&"undefined"==typeof ResizeObserver&&apiRef.current.unstable_storeRowHeightMeasurement(rowId,ref.current.clientHeight,position)}),[apiRef,rowHeight,rowId,position]),react.useLayoutEffect((()=>{if(currentPage.range){const rowIndex=apiRef.current.getRowIndexRelativeToVisibleRows(rowId);null!=rowIndex&&apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex)}const rootElement=ref.current;if(!rootElement||"auto"!==rowHeight||"undefined"==typeof ResizeObserver)return;const resizeObserver=new ResizeObserver((entries=>{const[entry]=entries,height=entry.borderBoxSize&&entry.borderBoxSize.length>0?entry.borderBoxSize[0].blockSize:entry.contentRect.height;apiRef.current.unstable_storeRowHeightMeasurement(rowId,height,position)}));return resizeObserver.observe(rootElement),()=>resizeObserver.disconnect()}),[apiRef,currentPage.range,index,rowHeight,rowId,position]);const publish=react.useCallback(((eventName,propHandler)=>event=>{(1!==event.target.nodeType||event.currentTarget.contains(event.target))&&apiRef.current.getRow(rowId)&&(apiRef.current.publishEvent(eventName,apiRef.current.getRowParams(rowId),event),propHandler&&propHandler(event))}),[apiRef,rowId]),publishClick=react.useCallback((event=>{const cell=findParentElementFromClassName(event.target,gridClasses_gridClasses.cell),field=null==cell?void 0:cell.getAttribute("data-field");if(field){if(field===GRID_CHECKBOX_SELECTION_COL_DEF.field)return;if("__detail_panel_toggle__"===field)return;if("__reorder__"===field)return;if(apiRef.current.getCellMode(rowId,field)===gridEditRowModel.Vl.Edit)return;if("actions"===apiRef.current.getColumn(field).type)return}publish("rowClick",onClick)(event)}),[apiRef,onClick,publish,rowId]),{slots,slotProps,classes:rootClasses,disableColumnReorder,getCellClassName}=rootProps,rowReordering=rootProps.rowReordering,CellComponent=slots.cell,getCell=react.useCallback(((column,cellProps)=>{const cellParams=apiRef.current.getCellParams(rowId,column.field),classNames=apiRef.current.unstable_applyPipeProcessors("cellClassName",[],{id:rowId,field:column.field}),disableDragEvents=disableColumnReorder&&column.disableReorder||!rowReordering&&!!sortModel.length&&treeDepth>1&&Object.keys(editRowsState).length>0;column.cellClassName&&classNames.push((0,clsx_m.Z)("function"==typeof column.cellClassName?column.cellClassName(cellParams):column.cellClassName));const editCellState=editRowsState[rowId]?editRowsState[rowId][column.field]:null;let content;if(null==editCellState&&column.renderCell&&(content=column.renderCell((0,esm_extends.Z)({},cellParams,{api:apiRef.current})),classNames.push((0,clsx_m.Z)(gridClasses_gridClasses["cell--withRenderer"],null==rootClasses?void 0:rootClasses["cell--withRenderer"]))),null!=editCellState&&column.renderEditCell){const updatedRow=apiRef.current.getRowWithUpdatedValues(rowId,column.field),editCellStateRest=(0,objectWithoutPropertiesLoose.Z)(editCellState,GridRow_excluded2),params=(0,esm_extends.Z)({},cellParams,{row:updatedRow},editCellStateRest,{api:apiRef.current});content=column.renderEditCell(params),classNames.push((0,clsx_m.Z)(gridClasses_gridClasses["cell--editing"],null==rootClasses?void 0:rootClasses["cell--editing"]))}getCellClassName&&classNames.push(getCellClassName(cellParams));const hasFocus=focusedCell===column.field,tabIndex=tabbableCell===column.field?0:-1,isSelected=apiRef.current.unstable_applyPipeProcessors("isCellSelected",!1,{id:rowId,field:column.field});return(0,jsx_runtime.jsx)(CellComponent,(0,esm_extends.Z)({value:cellParams.value,field:column.field,width:cellProps.width,rowId,height:rowHeight,showRightBorder:cellProps.showRightBorder,formattedValue:cellParams.formattedValue,align:column.align||"left",cellMode:cellParams.cellMode,colIndex:cellProps.indexRelativeToAllColumns,isEditable:cellParams.isEditable,isSelected,hasFocus,tabIndex,className:(0,clsx_m.Z)(classNames),colSpan:cellProps.colSpan,disableDragEvents},null==slotProps?void 0:slotProps.cell,{children:content}),column.field)}),[apiRef,rowId,disableColumnReorder,rowReordering,sortModel.length,treeDepth,editRowsState,getCellClassName,focusedCell,tabbableCell,CellComponent,rowHeight,null==slotProps?void 0:slotProps.cell,rootClasses]),sizes=apiRef.current.unstable_getRowInternalSizes(rowId);let minHeight=rowHeight;if("auto"===minHeight&&sizes){let numberOfBaseSizes=0;const maximumSize=Object.entries(sizes).reduce(((acc,[key,size])=>/^base[A-Z]/.test(key)?(numberOfBaseSizes+=1,size>acc?size:acc):acc),0);maximumSize>0&&numberOfBaseSizes>1&&(minHeight=maximumSize)}const style=(0,esm_extends.Z)({},styleProp,{maxHeight:"auto"===rowHeight?"none":rowHeight,minHeight});if(null!=sizes&&sizes.spacingTop){style["border"===rootProps.rowSpacingType?"borderTopWidth":"marginTop"]=sizes.spacingTop}if(null!=sizes&&sizes.spacingBottom){const property="border"===rootProps.rowSpacingType?"borderBottomWidth":"marginBottom";let propertyValue=style[property];"number"!=typeof propertyValue&&(propertyValue=parseInt(propertyValue||"0",10)),propertyValue+=sizes.spacingBottom,style[property]=propertyValue}const rowClassNames=apiRef.current.unstable_applyPipeProcessors("rowClassName",[],rowId);if("function"==typeof rootProps.getRowClassName){var _currentPage$range;const indexRelativeToCurrentPage=index-((null==(_currentPage$range=currentPage.range)?void 0:_currentPage$range.firstRowIndex)||0),rowParams=(0,esm_extends.Z)({},apiRef.current.getRowParams(rowId),{isFirstVisible:0===indexRelativeToCurrentPage,isLastVisible:indexRelativeToCurrentPage===currentPage.rows.length-1,indexRelativeToCurrentPage});rowClassNames.push(rootProps.getRowClassName(rowParams))}const randomNumber=randomNumberBetween(1e4,20,80),rowType=apiRef.current.getRowNode(rowId).type,cells=[];for(let i=0;i<renderedColumns.length;i+=1){const column=renderedColumns[i],indexRelativeToAllColumns=firstColumnToRender+i,cellColSpanInfo=apiRef.current.unstable_getCellColSpanInfo(rowId,indexRelativeToAllColumns);if(cellColSpanInfo&&!cellColSpanInfo.spannedByColSpan)if("skeletonRow"!==rowType){const{colSpan,width}=cellColSpanInfo.cellProps,cellProps={width,colSpan,showRightBorder:rootProps.showCellVerticalBorder,indexRelativeToAllColumns};cells.push(getCell(column,cellProps))}else{const{width}=cellColSpanInfo.cellProps,contentWidth=Math.round(randomNumber());cells.push((0,jsx_runtime.jsx)(rootProps.slots.skeletonCell,{width,contentWidth,field:column.field,align:column.align},column.field))}}const emptyCellWidth=containerWidth-columnsTotalWidth,eventHandlers=row?{onClick:publishClick,onDoubleClick:publish("rowDoubleClick",onDoubleClick),onMouseEnter:publish("rowMouseEnter",onMouseEnter),onMouseLeave:publish("rowMouseLeave",onMouseLeave)}:null;return(0,jsx_runtime.jsxs)("div",(0,esm_extends.Z)({ref:handleRef,"data-id":rowId,"data-rowindex":index,role:"row",className:(0,clsx_m.Z)(...rowClassNames,classes.root,className),"aria-rowindex":ariaRowIndex,"aria-selected":selected,style},eventHandlers,other,{children:[cells,emptyCellWidth>0&&(0,jsx_runtime.jsx)(EmptyCell,{width:emptyCellWidth})]}))}));var react_dom=__webpack_require__("./node_modules/react-dom/index.js"),esm_useTheme=__webpack_require__("./node_modules/@mui/system/esm/useTheme.js");function GridColumnHeaderSortIconRaw(props){var _rootProps$slotProps;const{direction,index,sortingOrder}=props,apiRef=(0,utils_useGridApiContext.l)(),rootProps=(0,useGridRootProps.B)(),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({icon:["sortIcon"]},getDataGridUtilityClass,classes)})((0,esm_extends.Z)({},props,{classes:rootProps.classes})),iconElement=function getIcon(icons,direction,className,sortingOrder){let Icon;const iconProps={};return"asc"===direction?Icon=icons.columnSortedAscendingIcon:"desc"===direction?Icon=icons.columnSortedDescendingIcon:(Icon=icons.columnUnsortedIcon,iconProps.sortingOrder=sortingOrder),Icon?(0,jsx_runtime.jsx)(Icon,(0,esm_extends.Z)({fontSize:"small",className},iconProps)):null}(rootProps.slots,direction,classes.icon,sortingOrder);if(!iconElement)return null;const iconButton=(0,jsx_runtime.jsx)(rootProps.slots.baseIconButton,(0,esm_extends.Z)({tabIndex:-1,"aria-label":apiRef.current.getLocaleText("columnHeaderSortIconLabel"),title:apiRef.current.getLocaleText("columnHeaderSortIconLabel"),size:"small"},null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.baseIconButton,{children:iconElement}));return(0,jsx_runtime.jsxs)(GridIconButtonContainer,{children:[null!=index&&(0,jsx_runtime.jsx)(Badge.Z,{badgeContent:index,color:"default",children:iconButton}),null==index&&iconButton]})}const GridColumnHeaderSortIcon=react.memo(GridColumnHeaderSortIconRaw),ColumnHeaderMenuIcon=react.memo((props=>{var _rootProps$slotProps;const{colDef,open,columnMenuId,columnMenuButtonId,iconButtonRef}=props,apiRef=(0,utils_useGridApiContext.l)(),rootProps=(0,useGridRootProps.B)(),classes=(ownerState=>{const{classes,open}=ownerState,slots={root:["menuIcon",open&&"menuOpen"],button:["menuIconButton"]};return(0,composeClasses.Z)(slots,getDataGridUtilityClass,classes)})((0,esm_extends.Z)({},props,{classes:rootProps.classes})),handleMenuIconClick=react.useCallback((event=>{event.preventDefault(),event.stopPropagation(),apiRef.current.toggleColumnMenu(colDef.field)}),[apiRef,colDef.field]);return(0,jsx_runtime.jsx)("div",{className:classes.root,children:(0,jsx_runtime.jsx)(rootProps.slots.baseIconButton,(0,esm_extends.Z)({ref:iconButtonRef,tabIndex:-1,className:classes.button,"aria-label":apiRef.current.getLocaleText("columnMenuLabel"),title:apiRef.current.getLocaleText("columnMenuLabel"),size:"small",onClick:handleMenuIconClick,"aria-expanded":open?"true":void 0,"aria-haspopup":"true","aria-controls":columnMenuId,id:columnMenuButtonId},null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.baseIconButton,{children:(0,jsx_runtime.jsx)(rootProps.slots.columnMenuIcon,{fontSize:"small"})}))})}));function GridColumnHeaderMenu({columnMenuId,columnMenuButtonId,ContentComponent,contentComponentProps,field,open,target,onExited}){const apiRef=(0,utils_useGridApiContext.l)(),colDef=apiRef.current.getColumn(field),hideMenu=react.useCallback((event=>{event.stopPropagation(),null!=target&&target.contains(event.target)||apiRef.current.hideColumnMenu()}),[apiRef,target]);return target?(0,jsx_runtime.jsx)(GridMenu,{placement:"bottom-"+("right"===colDef.align?"start":"end"),open,target,onClickAway:hideMenu,onExited,children:(0,jsx_runtime.jsx)(ContentComponent,(0,esm_extends.Z)({colDef,hideMenu,open,id:columnMenuId,labelledby:columnMenuButtonId},contentComponentProps))}):null}const GridColumnHeaderTitle_excluded=["className"],GridColumnHeaderTitleRoot=(0,esm_styled.Z)("div",{name:"MuiDataGrid",slot:"ColumnHeaderTitle",overridesResolver:(props,styles)=>styles.columnHeaderTitle})({textOverflow:"ellipsis",overflow:"hidden",whiteSpace:"nowrap",fontWeight:"var(--unstable_DataGrid-headWeight)"}),ColumnHeaderInnerTitle=react.forwardRef((function ColumnHeaderInnerTitle(props,ref){const{className}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridColumnHeaderTitle_excluded),rootProps=(0,useGridRootProps.B)(),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["columnHeaderTitle"]},getDataGridUtilityClass,classes)})(rootProps);return(0,jsx_runtime.jsx)(GridColumnHeaderTitleRoot,(0,esm_extends.Z)({ref,className:(0,clsx_m.Z)(classes.root,className),ownerState:rootProps},other))}));function GridColumnHeaderTitle(props){var _rootProps$slotProps;const{label,description}=props,rootProps=(0,useGridRootProps.B)(),titleRef=react.useRef(null),[tooltip,setTooltip]=react.useState(""),handleMouseOver=react.useCallback((()=>{if(!description&&null!=titleRef&&titleRef.current){const isOver=function isOverflown(element){return element.scrollHeight>element.clientHeight||element.scrollWidth>element.clientWidth}(titleRef.current);setTooltip(isOver?label:"")}}),[description,label]);return(0,jsx_runtime.jsx)(rootProps.slots.baseTooltip,(0,esm_extends.Z)({title:description||tooltip},null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.baseTooltip,{children:(0,jsx_runtime.jsx)(ColumnHeaderInnerTitle,{onMouseOver:handleMouseOver,ref:titleRef,children:label})}))}const GridColumnHeaderSeparator_excluded=["resizable","resizing","height","side"];var GridColumnHeaderSeparatorSides=function(GridColumnHeaderSeparatorSides){return GridColumnHeaderSeparatorSides.Left="left",GridColumnHeaderSeparatorSides.Right="right",GridColumnHeaderSeparatorSides}(GridColumnHeaderSeparatorSides||{});function GridColumnHeaderSeparatorRaw(props){const{height,side=GridColumnHeaderSeparatorSides.Right}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridColumnHeaderSeparator_excluded),rootProps=(0,useGridRootProps.B)(),classes=(ownerState=>{const{resizable,resizing,classes,side}=ownerState,slots={root:["columnSeparator",resizable&&"columnSeparator--resizable",resizing&&"columnSeparator--resizing",side&&`columnSeparator--side${(0,capitalize.Z)(side)}`],icon:["iconSeparator"]};return(0,composeClasses.Z)(slots,getDataGridUtilityClass,classes)})((0,esm_extends.Z)({},props,{side,classes:rootProps.classes})),stopClick=react.useCallback((event=>{event.preventDefault(),event.stopPropagation()}),[]);return(0,jsx_runtime.jsx)("div",(0,esm_extends.Z)({className:classes.root,style:{minHeight:height,opacity:rootProps.showColumnVerticalBorder?0:1}},other,{onClick:stopClick,children:(0,jsx_runtime.jsx)(rootProps.slots.columnResizeIcon,{className:classes.icon})}))}const GridColumnHeaderSeparator=react.memo(GridColumnHeaderSeparatorRaw),GridGenericColumnHeaderItem_excluded=["classes","columnMenuOpen","colIndex","height","isResizing","sortDirection","hasFocus","tabIndex","separatorSide","isDraggable","headerComponent","description","elementId","width","columnMenuIconButton","columnMenu","columnTitleIconButtons","headerClassName","label","resizable","draggableContainerProps","columnHeaderSeparatorProps"],GridGenericColumnHeaderItem=react.forwardRef((function GridGenericColumnHeaderItem(props,ref){const{classes,columnMenuOpen,colIndex,height,isResizing,sortDirection,hasFocus,tabIndex,separatorSide,isDraggable,headerComponent,description,width,columnMenuIconButton=null,columnMenu=null,columnTitleIconButtons=null,headerClassName,label,resizable,draggableContainerProps,columnHeaderSeparatorProps}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridGenericColumnHeaderItem_excluded),apiRef=useGridPrivateApiContext(),rootProps=(0,useGridRootProps.B)(),headerCellRef=react.useRef(null),[showColumnMenuIcon,setShowColumnMenuIcon]=react.useState(columnMenuOpen),handleRef=(0,useForkRef.Z)(headerCellRef,ref);let ariaSort="none";return null!=sortDirection&&(ariaSort="asc"===sortDirection?"ascending":"descending"),react.useEffect((()=>{showColumnMenuIcon||setShowColumnMenuIcon(columnMenuOpen)}),[showColumnMenuIcon,columnMenuOpen]),react.useLayoutEffect((()=>{const columnMenuState=apiRef.current.state.columnMenu;if(hasFocus&&!columnMenuState.open){const elementToFocus=headerCellRef.current.querySelector('[tabindex="0"]')||headerCellRef.current;null==elementToFocus||elementToFocus.focus(),apiRef.current.columnHeadersContainerElementRef.current.scrollLeft=0}}),[apiRef,hasFocus]),(0,jsx_runtime.jsxs)("div",(0,esm_extends.Z)({ref:handleRef,className:(0,clsx_m.Z)(classes.root,headerClassName),style:{height,width,minWidth:width,maxWidth:width},role:"columnheader",tabIndex,"aria-colindex":colIndex+1,"aria-sort":ariaSort,"aria-label":null==headerComponent?label:void 0},other,{children:[(0,jsx_runtime.jsxs)("div",(0,esm_extends.Z)({className:classes.draggableContainer,draggable:isDraggable},draggableContainerProps,{children:[(0,jsx_runtime.jsxs)("div",{className:classes.titleContainer,children:[(0,jsx_runtime.jsx)("div",{className:classes.titleContainerContent,children:void 0!==headerComponent?headerComponent:(0,jsx_runtime.jsx)(GridColumnHeaderTitle,{label,description,columnWidth:width})}),columnTitleIconButtons]}),columnMenuIconButton]})),(0,jsx_runtime.jsx)(GridColumnHeaderSeparator,(0,esm_extends.Z)({resizable:!rootProps.disableColumnResize&&!!resizable,resizing:isResizing,height,side:separatorSide},columnHeaderSeparatorProps)),columnMenu]}))}));function GridColumnHeaderItem(props){var _rootProps$slotProps,_colDef$sortingOrder,_rootProps$slotProps2,_colDef$headerName;const{colDef,columnMenuOpen,colIndex,headerHeight,isResizing,sortDirection,sortIndex,filterItemsCounter,hasFocus,tabIndex,disableReorder,separatorSide}=props,apiRef=useGridPrivateApiContext(),rootProps=(0,useGridRootProps.B)(),headerCellRef=react.useRef(null),columnMenuId=(0,useId.Z)(),columnMenuButtonId=(0,useId.Z)(),iconButtonRef=react.useRef(null),[showColumnMenuIcon,setShowColumnMenuIcon]=react.useState(columnMenuOpen),isDraggable=react.useMemo((()=>!rootProps.disableColumnReorder&&!disableReorder&&!colDef.disableReorder),[rootProps.disableColumnReorder,disableReorder,colDef.disableReorder]);let headerComponent;colDef.renderHeader&&(headerComponent=colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field)));const classes=(ownerState=>{const{colDef,classes,isDragging,sortDirection,showRightBorder,filterItemsCounter}=ownerState,isColumnSorted=null!=sortDirection,isColumnFiltered=null!=filterItemsCounter&&filterItemsCounter>0,isColumnNumeric="number"===colDef.type,slots={root:["columnHeader","left"===colDef.headerAlign&&"columnHeader--alignLeft","center"===colDef.headerAlign&&"columnHeader--alignCenter","right"===colDef.headerAlign&&"columnHeader--alignRight",colDef.sortable&&"columnHeader--sortable",isDragging&&"columnHeader--moving",isColumnSorted&&"columnHeader--sorted",isColumnFiltered&&"columnHeader--filtered",isColumnNumeric&&"columnHeader--numeric","withBorderColor",showRightBorder&&"columnHeader--withRightBorder"],draggableContainer:["columnHeaderDraggableContainer"],titleContainer:["columnHeaderTitleContainer"],titleContainerContent:["columnHeaderTitleContainerContent"]};return(0,composeClasses.Z)(slots,getDataGridUtilityClass,classes)})((0,esm_extends.Z)({},props,{classes:rootProps.classes,showRightBorder:rootProps.showColumnVerticalBorder})),publish=react.useCallback((eventName=>event=>{event.currentTarget.contains(event.target)&&apiRef.current.publishEvent(eventName,apiRef.current.getColumnHeaderParams(colDef.field),event)}),[apiRef,colDef.field]),mouseEventsHandlers=react.useMemo((()=>({onClick:publish("columnHeaderClick"),onDoubleClick:publish("columnHeaderDoubleClick"),onMouseOver:publish("columnHeaderOver"),onMouseOut:publish("columnHeaderOut"),onMouseEnter:publish("columnHeaderEnter"),onMouseLeave:publish("columnHeaderLeave"),onKeyDown:publish("columnHeaderKeyDown"),onFocus:publish("columnHeaderFocus"),onBlur:publish("columnHeaderBlur")})),[publish]),draggableEventHandlers=react.useMemo((()=>isDraggable?{onDragStart:publish("columnHeaderDragStart"),onDragEnter:publish("columnHeaderDragEnter"),onDragOver:publish("columnHeaderDragOver"),onDragEnd:publish("columnHeaderDragEnd")}:{}),[isDraggable,publish]),columnHeaderSeparatorProps=react.useMemo((()=>({onMouseDown:publish("columnSeparatorMouseDown")})),[publish]);react.useEffect((()=>{showColumnMenuIcon||setShowColumnMenuIcon(columnMenuOpen)}),[showColumnMenuIcon,columnMenuOpen]);const handleExited=react.useCallback((()=>{setShowColumnMenuIcon(!1)}),[]),columnMenuIconButton=!rootProps.disableColumnMenu&&!colDef.disableColumnMenu&&(0,jsx_runtime.jsx)(ColumnHeaderMenuIcon,{colDef,columnMenuId,columnMenuButtonId,open:showColumnMenuIcon,iconButtonRef}),columnMenu=(0,jsx_runtime.jsx)(GridColumnHeaderMenu,{columnMenuId,columnMenuButtonId,field:colDef.field,open:columnMenuOpen,target:iconButtonRef.current,ContentComponent:rootProps.slots.columnMenu,contentComponentProps:null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.columnMenu,onExited:handleExited}),sortingOrder=null!=(_colDef$sortingOrder=colDef.sortingOrder)?_colDef$sortingOrder:rootProps.sortingOrder,columnTitleIconButtons=(0,jsx_runtime.jsxs)(react.Fragment,{children:[!rootProps.disableColumnFilter&&(0,jsx_runtime.jsx)(rootProps.slots.columnHeaderFilterIconButton,(0,esm_extends.Z)({field:colDef.field,counter:filterItemsCounter},null==(_rootProps$slotProps2=rootProps.slotProps)?void 0:_rootProps$slotProps2.columnHeaderFilterIconButton)),colDef.sortable&&!colDef.hideSortIcons&&(0,jsx_runtime.jsx)(GridColumnHeaderSortIcon,{direction:sortDirection,index:sortIndex,sortingOrder})]});react.useLayoutEffect((()=>{const columnMenuState=apiRef.current.state.columnMenu;if(hasFocus&&!columnMenuState.open){const elementToFocus=headerCellRef.current.querySelector('[tabindex="0"]')||headerCellRef.current;null==elementToFocus||elementToFocus.focus(),apiRef.current.columnHeadersContainerElementRef.current.scrollLeft=0}}),[apiRef,hasFocus]);const headerClassName="function"==typeof colDef.headerClassName?colDef.headerClassName({field:colDef.field,colDef}):colDef.headerClassName,label=null!=(_colDef$headerName=colDef.headerName)?_colDef$headerName:colDef.field;return(0,jsx_runtime.jsx)(GridGenericColumnHeaderItem,(0,esm_extends.Z)({ref:headerCellRef,classes,columnMenuOpen,colIndex,height:headerHeight,isResizing,sortDirection,hasFocus,tabIndex,separatorSide,isDraggable,headerComponent,description:colDef.description,elementId:colDef.field,width:colDef.computedWidth,columnMenuIconButton,columnTitleIconButtons,headerClassName,label,resizable:!rootProps.disableColumnResize&&!!colDef.resizable,"data-field":colDef.field,columnMenu,draggableContainerProps:draggableEventHandlers,columnHeaderSeparatorProps},mouseEventsHandlers))}const useGridVirtualScroller_excluded=["style"],useGridVirtualScroller_excluded2=["style"],useGridVirtualScroller_excluded3=["style"];function binarySearch(offset,positions,sliceStart=0,sliceEnd=positions.length){if(positions.length<=0)return-1;if(sliceStart>=sliceEnd)return sliceStart;const pivot=sliceStart+Math.floor((sliceEnd-sliceStart)/2);return offset<=positions[pivot]?binarySearch(offset,positions,sliceStart,pivot):binarySearch(offset,positions,pivot+1,sliceEnd)}const getRenderableIndexes=({firstIndex,lastIndex,buffer,minFirstIndex,maxLastIndex})=>[clamp(firstIndex-buffer,minFirstIndex,maxLastIndex),clamp(lastIndex+buffer,minFirstIndex,maxLastIndex)],useGridVirtualScroller=props=>{var _currentPage$range3,_currentPage$range4;const apiRef=useGridPrivateApiContext(),rootProps=(0,useGridRootProps.B)(),visibleColumns=useGridSelector(apiRef,gridVisibleColumnDefinitionsSelector),{ref,disableVirtualization,onRenderZonePositioning,renderZoneMinColumnIndex=0,renderZoneMaxColumnIndex=visibleColumns.length,getRowProps}=props,theme=(0,useTheme.Z)(),columnPositions=useGridSelector(apiRef,gridColumnPositionsSelector),columnsTotalWidth=useGridSelector(apiRef,gridColumnsTotalWidthSelector),cellFocus=useGridSelector(apiRef,gridFocusCellSelector),cellTabIndex=useGridSelector(apiRef,gridTabIndexCellSelector),rowsMeta=useGridSelector(apiRef,gridRowsMetaSelector),selectedRowsLookup=useGridSelector(apiRef,selectedIdsLookupSelector),currentPage=useGridVisibleRows(apiRef,rootProps),renderZoneRef=react.useRef(null),rootRef=react.useRef(null),handleRef=(0,useForkRef.Z)(ref,rootRef),[renderContext,setRenderContext]=react.useState(null),prevRenderContext=react.useRef(renderContext),scrollPosition=react.useRef({top:0,left:0}),[containerDimensions,setContainerDimensions]=react.useState({width:null,height:null}),prevTotalWidth=react.useRef(columnsTotalWidth),rowStyleCache=react.useRef({}),prevGetRowProps=react.useRef(),prevRootRowStyle=react.useRef(),getRenderedColumnsRef=react.useRef(defaultMemoize(((columns,firstColumnToRender,lastColumnToRender)=>columns.slice(firstColumnToRender,lastColumnToRender)))),getNearestIndexToRender=react.useCallback((offset=>{var _currentPage$range,_currentPage$range2;const lastMeasuredIndexRelativeToAllRows=apiRef.current.getLastMeasuredRowIndex();let allRowsMeasured=lastMeasuredIndexRelativeToAllRows===1/0;null!=(_currentPage$range=currentPage.range)&&_currentPage$range.lastRowIndex&&!allRowsMeasured&&(allRowsMeasured=lastMeasuredIndexRelativeToAllRows>=currentPage.range.lastRowIndex);const lastMeasuredIndexRelativeToCurrentPage=clamp(lastMeasuredIndexRelativeToAllRows-((null==(_currentPage$range2=currentPage.range)?void 0:_currentPage$range2.firstRowIndex)||0),0,rowsMeta.positions.length);return allRowsMeasured||rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage]>=offset?binarySearch(offset,rowsMeta.positions):function exponentialSearch(offset,positions,index){let interval=1;for(;index<positions.length&&Math.abs(positions[index])<offset;)index+=interval,interval*=2;return binarySearch(offset,positions,Math.floor(index/2),Math.min(index,positions.length))}(offset,rowsMeta.positions,lastMeasuredIndexRelativeToCurrentPage)}),[apiRef,null==(_currentPage$range3=currentPage.range)?void 0:_currentPage$range3.firstRowIndex,null==(_currentPage$range4=currentPage.range)?void 0:_currentPage$range4.lastRowIndex,rowsMeta.positions]),computeRenderContext=react.useCallback((()=>{if(disableVirtualization)return{firstRowIndex:0,lastRowIndex:currentPage.rows.length,firstColumnIndex:0,lastColumnIndex:visibleColumns.length};const{top,left}=scrollPosition.current,firstRowIndex=Math.min(getNearestIndexToRender(top),rowsMeta.positions.length-1),lastRowIndex=rootProps.autoHeight?firstRowIndex+currentPage.rows.length:getNearestIndexToRender(top+containerDimensions.height);let hasRowWithAutoHeight=!1,firstColumnIndex=0,lastColumnIndex=columnPositions.length;const[firstRowToRender,lastRowToRender]=getRenderableIndexes({firstIndex:firstRowIndex,lastIndex:lastRowIndex,minFirstIndex:0,maxLastIndex:currentPage.rows.length,buffer:rootProps.rowBuffer});for(let i=firstRowToRender;i<lastRowToRender&&!hasRowWithAutoHeight;i+=1){const row=currentPage.rows[i];hasRowWithAutoHeight=apiRef.current.rowHasAutoHeight(row.id)}return hasRowWithAutoHeight||(firstColumnIndex=binarySearch(Math.abs(left),columnPositions),lastColumnIndex=binarySearch(Math.abs(left)+containerDimensions.width,columnPositions)),{firstRowIndex,lastRowIndex,firstColumnIndex,lastColumnIndex}}),[disableVirtualization,getNearestIndexToRender,rowsMeta.positions.length,rootProps.autoHeight,rootProps.rowBuffer,currentPage.rows,columnPositions,visibleColumns.length,apiRef,containerDimensions]);(0,useEnhancedEffect.Z)((()=>{disableVirtualization?renderZoneRef.current.style.transform="translate3d(0px, 0px, 0px)":(rootRef.current.scrollLeft=0,rootRef.current.scrollTop=0)}),[disableVirtualization]),(0,useEnhancedEffect.Z)((()=>{setContainerDimensions({width:rootRef.current.clientWidth,height:rootRef.current.clientHeight})}),[rowsMeta.currentPageTotalHeight]);const handleResize=react.useCallback((params=>{setContainerDimensions({width:params.width,height:params.height})}),[]);useGridApiEventHandler(apiRef,"debouncedResize",handleResize);const updateRenderZonePosition=react.useCallback((nextRenderContext=>{const[firstRowToRender,lastRowToRender]=getRenderableIndexes({firstIndex:nextRenderContext.firstRowIndex,lastIndex:nextRenderContext.lastRowIndex,minFirstIndex:0,maxLastIndex:currentPage.rows.length,buffer:rootProps.rowBuffer}),[initialFirstColumnToRender]=getRenderableIndexes({firstIndex:nextRenderContext.firstColumnIndex,lastIndex:nextRenderContext.lastColumnIndex,minFirstIndex:renderZoneMinColumnIndex,maxLastIndex:renderZoneMaxColumnIndex,buffer:rootProps.columnBuffer}),firstColumnToRender=getFirstNonSpannedColumnToRender({firstColumnToRender:initialFirstColumnToRender,apiRef,firstRowToRender,lastRowToRender,visibleRows:currentPage.rows}),direction="ltr"===theme.direction?1:-1,top=gridRowsMetaSelector(apiRef.current.state).positions[firstRowToRender],left=direction*gridColumnPositionsSelector(apiRef)[firstColumnToRender];renderZoneRef.current.style.transform=`translate3d(${left}px, ${top}px, 0px)`,"function"==typeof onRenderZonePositioning&&onRenderZonePositioning({top,left})}),[apiRef,currentPage.rows,onRenderZonePositioning,renderZoneMinColumnIndex,renderZoneMaxColumnIndex,rootProps.columnBuffer,rootProps.rowBuffer,theme.direction]),updateRenderContext=react.useCallback((nextRenderContext=>{if(prevRenderContext.current&&(context1=nextRenderContext,context2=prevRenderContext.current,context1===context2||context1.firstRowIndex===context2.firstRowIndex&&context1.lastRowIndex===context2.lastRowIndex&&context1.firstColumnIndex===context2.firstColumnIndex&&context1.lastColumnIndex===context2.lastColumnIndex))return void updateRenderZonePosition(nextRenderContext);var context1,context2;setRenderContext(nextRenderContext),updateRenderZonePosition(nextRenderContext);const[firstRowToRender,lastRowToRender]=getRenderableIndexes({firstIndex:nextRenderContext.firstRowIndex,lastIndex:nextRenderContext.lastRowIndex,minFirstIndex:0,maxLastIndex:currentPage.rows.length,buffer:rootProps.rowBuffer});apiRef.current.publishEvent("renderedRowsIntervalChange",{firstRowToRender,lastRowToRender}),prevRenderContext.current=nextRenderContext}),[apiRef,setRenderContext,prevRenderContext,currentPage.rows.length,rootProps.rowBuffer,updateRenderZonePosition]);(0,useEnhancedEffect.Z)((()=>{if(null==containerDimensions.width)return;const initialRenderContext=computeRenderContext();updateRenderContext(initialRenderContext);const{top,left}=scrollPosition.current,params={top,left,renderContext:initialRenderContext};apiRef.current.publishEvent("scrollPositionChange",params)}),[apiRef,computeRenderContext,containerDimensions.width,updateRenderContext]);const handleScroll=event=>{const{scrollTop,scrollLeft}=event.currentTarget;if(scrollPosition.current.top=scrollTop,scrollPosition.current.left=scrollLeft,!prevRenderContext.current||scrollTop<0)return;if("ltr"===theme.direction&&scrollLeft<0)return;if("rtl"===theme.direction&&scrollLeft>0)return;const nextRenderContext=disableVirtualization?prevRenderContext.current:computeRenderContext(),topRowsScrolledSincePreviousRender=Math.abs(nextRenderContext.firstRowIndex-prevRenderContext.current.firstRowIndex),bottomRowsScrolledSincePreviousRender=Math.abs(nextRenderContext.lastRowIndex-prevRenderContext.current.lastRowIndex),topColumnsScrolledSincePreviousRender=Math.abs(nextRenderContext.firstColumnIndex-prevRenderContext.current.firstColumnIndex),bottomColumnsScrolledSincePreviousRender=Math.abs(nextRenderContext.lastColumnIndex-prevRenderContext.current.lastColumnIndex),shouldSetState=topRowsScrolledSincePreviousRender>=rootProps.rowThreshold||bottomRowsScrolledSincePreviousRender>=rootProps.rowThreshold||topColumnsScrolledSincePreviousRender>=rootProps.columnThreshold||bottomColumnsScrolledSincePreviousRender>=rootProps.columnThreshold||prevTotalWidth.current!==columnsTotalWidth;apiRef.current.publishEvent("scrollPositionChange",{top:scrollTop,left:scrollLeft,renderContext:shouldSetState?nextRenderContext:prevRenderContext.current},event),shouldSetState&&(react_dom.flushSync((()=>{updateRenderContext(nextRenderContext)})),prevTotalWidth.current=columnsTotalWidth)},handleWheel=event=>{apiRef.current.publishEvent("virtualScrollerWheel",{},event)},handleTouchMove=event=>{apiRef.current.publishEvent("virtualScrollerTouchMove",{},event)},needsHorizontalScrollbar=containerDimensions.width&&columnsTotalWidth>=containerDimensions.width,contentSize=react.useMemo((()=>{const height=Math.max(rowsMeta.currentPageTotalHeight,1);let shouldExtendContent=!1;null!=rootRef&&rootRef.current&&height<=(null==rootRef?void 0:rootRef.current.clientHeight)&&(shouldExtendContent=!0);return{width:needsHorizontalScrollbar?columnsTotalWidth:"auto",height,minHeight:shouldExtendContent?"100%":"auto"}}),[rootRef,columnsTotalWidth,rowsMeta.currentPageTotalHeight,needsHorizontalScrollbar]);react.useEffect((()=>{apiRef.current.publishEvent("virtualScrollerContentSizeChange")}),[apiRef,contentSize]),rootProps.autoHeight&&0===currentPage.rows.length&&(contentSize.height=getMinimalContentHeight(apiRef,rootProps.rowHeight));const rootStyle={};needsHorizontalScrollbar||(rootStyle.overflowX="hidden"),rootProps.autoHeight&&(rootStyle.overflowY="hidden");const getRenderContext=react.useCallback((()=>prevRenderContext.current),[]);return apiRef.current.register("private",{getRenderContext}),{renderContext,updateRenderZonePosition,getRows:(params={renderContext})=>{var _rootProps$slotProps;const{renderContext:nextRenderContext,minFirstColumn=renderZoneMinColumnIndex,maxLastColumn=renderZoneMaxColumnIndex,availableSpace=containerDimensions.width,rowIndexOffset=0,position="center"}=params;if(!nextRenderContext||null==availableSpace)return null;const rowBuffer=disableVirtualization?0:rootProps.rowBuffer,columnBuffer=disableVirtualization?0:rootProps.columnBuffer,[firstRowToRender,lastRowToRender]=getRenderableIndexes({firstIndex:nextRenderContext.firstRowIndex,lastIndex:nextRenderContext.lastRowIndex,minFirstIndex:0,maxLastIndex:currentPage.rows.length,buffer:rowBuffer}),renderedRows=[];if(params.rows)params.rows.forEach((row=>{renderedRows.push(row),apiRef.current.calculateColSpan({rowId:row.id,minFirstColumn,maxLastColumn,columns:visibleColumns})}));else{if(!currentPage.range)return null;for(let i=firstRowToRender;i<lastRowToRender;i+=1){const row=currentPage.rows[i];renderedRows.push(row),apiRef.current.calculateColSpan({rowId:row.id,minFirstColumn,maxLastColumn,columns:visibleColumns})}}const[initialFirstColumnToRender,lastColumnToRender]=getRenderableIndexes({firstIndex:nextRenderContext.firstColumnIndex,lastIndex:nextRenderContext.lastColumnIndex,minFirstIndex:minFirstColumn,maxLastIndex:maxLastColumn,buffer:columnBuffer}),firstColumnToRender=getFirstNonSpannedColumnToRender({firstColumnToRender:initialFirstColumnToRender,apiRef,firstRowToRender,lastRowToRender,visibleRows:currentPage.rows}),renderedColumns=getRenderedColumnsRef.current(visibleColumns,firstColumnToRender,lastColumnToRender),_ref=(null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.row)||{},{style:rootRowStyle}=_ref,rootRowProps=(0,objectWithoutPropertiesLoose.Z)(_ref,useGridVirtualScroller_excluded);(prevGetRowProps.current!==getRowProps||prevRootRowStyle.current!==rootRowStyle)&&(rowStyleCache.current={});const rows=[];for(let i=0;i<renderedRows.length;i+=1){var _currentPage$range5;const{id,model}=renderedRows[i],lastVisibleRowIndex=firstRowToRender+i===currentPage.rows.length-1,baseRowHeight=apiRef.current.rowHasAutoHeight(id)?"auto":apiRef.current.unstable_getRowHeight(id);let isSelected;isSelected=null!=selectedRowsLookup[id]&&apiRef.current.isRowSelectable(id);const focusedCell=null!==cellFocus&&cellFocus.id===id?cellFocus.field:null;let tabbableCell=null;if(null!==cellTabIndex&&cellTabIndex.id===id){tabbableCell="view"===apiRef.current.getCellParams(id,cellTabIndex.field).cellMode?cellTabIndex.field:null}const _ref2="function"==typeof getRowProps&&getRowProps(id,model)||{},{style:rowStyle}=_ref2,rowProps=(0,objectWithoutPropertiesLoose.Z)(_ref2,useGridVirtualScroller_excluded2);if(!rowStyleCache.current[id]){const style=(0,esm_extends.Z)({},rowStyle,rootRowStyle);rowStyleCache.current[id]=style}rows.push((0,jsx_runtime.jsx)(rootProps.slots.row,(0,esm_extends.Z)({row:model,rowId:id,rowHeight:baseRowHeight,focusedCell,tabbableCell,renderedColumns,visibleColumns,firstColumnToRender,lastColumnToRender,selected:isSelected,index:rowIndexOffset+((null==currentPage||null==(_currentPage$range5=currentPage.range)?void 0:_currentPage$range5.firstRowIndex)||0)+firstRowToRender+i,containerWidth:availableSpace,isLastVisible:lastVisibleRowIndex,position},rowProps,rootRowProps,{style:rowStyleCache.current[id]}),id))}return prevGetRowProps.current=getRowProps,prevRootRowStyle.current=rootRowStyle,rows},getRootProps:(_ref3={})=>{let{style={}}=_ref3,other=(0,objectWithoutPropertiesLoose.Z)(_ref3,useGridVirtualScroller_excluded3);return(0,esm_extends.Z)({ref:handleRef,onScroll:handleScroll,onWheel:handleWheel,onTouchMove:handleTouchMove,style:(0,esm_extends.Z)({},style,rootStyle)},other)},getContentProps:({style={}}={})=>({style:(0,esm_extends.Z)({},style,contentSize)}),getRenderZoneProps:()=>({ref:renderZoneRef})}};function GridColumnGroupHeader(props){var _columnGroupsLookup$g;const{groupId,width,depth,maxDepth,fields,height,colIndex,hasFocus,tabIndex,isLastColumn}=props,rootProps=(0,useGridRootProps.B)(),headerCellRef=react.useRef(null),apiRef=(0,utils_useGridApiContext.l)(),columnGroupsLookup=useGridSelector(apiRef,gridColumnGroupsLookupSelector),group=groupId?columnGroupsLookup[groupId]:{},{headerName=null!=groupId?groupId:"",description="",headerAlign}=group;let headerComponent;const render=groupId&&(null==(_columnGroupsLookup$g=columnGroupsLookup[groupId])?void 0:_columnGroupsLookup$g.renderHeaderGroup),renderParams=react.useMemo((()=>({groupId,headerName,description,depth,maxDepth,fields,colIndex,isLastColumn})),[groupId,headerName,description,depth,maxDepth,fields,colIndex,isLastColumn]);groupId&&render&&(headerComponent=render(renderParams));const showColumnBorder=rootProps.showColumnVerticalBorder,ownerState=(0,esm_extends.Z)({},props,{classes:rootProps.classes,showColumnBorder,headerAlign,depth,isDragging:!1}),label=null!=headerName?headerName:groupId,id=(0,useId.Z)(),elementId=null===groupId?`empty-group-cell-${id}`:groupId,classes=(ownerState=>{const{classes,headerAlign,isDragging,showColumnBorder,groupId}=ownerState,slots={root:["columnHeader","left"===headerAlign&&"columnHeader--alignLeft","center"===headerAlign&&"columnHeader--alignCenter","right"===headerAlign&&"columnHeader--alignRight",isDragging&&"columnHeader--moving",showColumnBorder&&"columnHeader--showColumnBorder",showColumnBorder&&"columnHeader--withRightBorder","withBorderColor",null===groupId?"columnHeader--emptyGroup":"columnHeader--filledGroup"],draggableContainer:["columnHeaderDraggableContainer"],titleContainer:["columnHeaderTitleContainer","withBorderColor"],titleContainerContent:["columnHeaderTitleContainerContent"]};return(0,composeClasses.Z)(slots,getDataGridUtilityClass,classes)})(ownerState);react.useLayoutEffect((()=>{if(hasFocus){const elementToFocus=headerCellRef.current.querySelector('[tabindex="0"]')||headerCellRef.current;null==elementToFocus||elementToFocus.focus()}}),[apiRef,hasFocus]);const publish=react.useCallback((eventName=>event=>{event.currentTarget.contains(event.target)&&apiRef.current.publishEvent(eventName,renderParams,event)}),[apiRef,renderParams]),mouseEventsHandlers=react.useMemo((()=>({onKeyDown:publish("columnGroupHeaderKeyDown"),onFocus:publish("columnGroupHeaderFocus"),onBlur:publish("columnGroupHeaderBlur")})),[publish]),headerClassName="function"==typeof group.headerClassName?group.headerClassName(renderParams):group.headerClassName;return(0,jsx_runtime.jsx)(GridGenericColumnHeaderItem,(0,esm_extends.Z)({ref:headerCellRef,classes,columnMenuOpen:!1,colIndex,height,isResizing:!1,sortDirection:null,hasFocus:!1,tabIndex,isDraggable:!1,headerComponent,headerClassName,description,elementId,width,columnMenuIconButton:null,columnTitleIconButtons:null,resizable:!1,label,"aria-colspan":fields.length,"data-fields":`|-${fields.join("-|-")}-|`},mouseEventsHandlers))}const GridColumnHeaderRow=(0,esm_styled.Z)("div",{name:"MuiDataGrid",slot:"ColumnHeaderRow",overridesResolver:(props,styles)=>styles.columnHeaderRow})((()=>({display:"flex"})));const GridScrollAreaRawRoot=(0,esm_styled.Z)("div",{name:"MuiDataGrid",slot:"ScrollArea",overridesResolver:(props,styles)=>[{[`&.${gridClasses_gridClasses["scrollArea--left"]}`]:styles["scrollArea--left"]},{[`&.${gridClasses_gridClasses["scrollArea--right"]}`]:styles["scrollArea--right"]},styles.scrollArea]})((()=>({position:"absolute",top:0,zIndex:101,width:20,bottom:0,[`&.${gridClasses_gridClasses["scrollArea--left"]}`]:{left:0},[`&.${gridClasses_gridClasses["scrollArea--right"]}`]:{right:0}})));function GridScrollAreaRaw(props){const{scrollDirection}=props,rootRef=react.useRef(null),apiRef=(0,utils_useGridApiContext.l)(),timeout=react.useRef(),[dragging,setDragging]=react.useState(!1),densityFactor=useGridSelector(apiRef,gridDensityFactorSelector),scrollPosition=react.useRef({left:0,top:0}),rootProps=(0,useGridRootProps.B)(),ownerState=(0,esm_extends.Z)({},rootProps,{scrollDirection}),classes=(ownerState=>{const{scrollDirection,classes}=ownerState,slots={root:["scrollArea",`scrollArea--${scrollDirection}`]};return(0,composeClasses.Z)(slots,getDataGridUtilityClass,classes)})(ownerState),headerHeight=Math.floor(rootProps.columnHeaderHeight*densityFactor),handleScrolling=react.useCallback((newScrollPosition=>{scrollPosition.current=newScrollPosition}),[]),handleDragOver=react.useCallback((event=>{let offset;if("left"===scrollDirection)offset=event.clientX-rootRef.current.getBoundingClientRect().right;else{if("right"!==scrollDirection)throw new Error("MUI: Wrong drag direction");offset=Math.max(1,event.clientX-rootRef.current.getBoundingClientRect().left)}offset=1.5*(offset-1)+1,clearTimeout(timeout.current),timeout.current=setTimeout((()=>{apiRef.current.scroll({left:scrollPosition.current.left+offset,top:scrollPosition.current.top})}))}),[scrollDirection,apiRef]);react.useEffect((()=>()=>{clearTimeout(timeout.current)}),[]);const toggleDragging=react.useCallback((()=>{setDragging((prevDragging=>!prevDragging))}),[]);return useGridApiEventHandler(apiRef,"scrollPositionChange",handleScrolling),useGridApiEventHandler(apiRef,"columnHeaderDragStart",toggleDragging),useGridApiEventHandler(apiRef,"columnHeaderDragEnd",toggleDragging),dragging?(0,jsx_runtime.jsx)(GridScrollAreaRawRoot,{ref:rootRef,className:(0,clsx_m.Z)(classes.root),ownerState,onDragOver:handleDragOver,style:{height:headerHeight}}):null}const GridScrollArea=react.memo(GridScrollAreaRaw),GridBaseColumnHeaders_excluded=["className"],GridColumnHeadersRoot=(0,esm_styled.Z)("div",{name:"MuiDataGrid",slot:"ColumnHeaders",overridesResolver:(props,styles)=>styles.columnHeaders})({position:"relative",overflow:"hidden",display:"flex",alignItems:"center",boxSizing:"border-box",borderBottom:"1px solid",borderTopLeftRadius:"var(--unstable_DataGrid-radius)",borderTopRightRadius:"var(--unstable_DataGrid-radius)"}),GridBaseColumnHeaders=react.forwardRef((function GridColumnHeaders(props,ref){const{className}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridBaseColumnHeaders_excluded),rootProps=(0,useGridRootProps.B)(),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["columnHeaders","withBorderColor"]},getDataGridUtilityClass,classes)})(rootProps);return(0,jsx_runtime.jsx)(GridColumnHeadersRoot,(0,esm_extends.Z)({ref,className:(0,clsx_m.Z)(className,classes.root),ownerState:rootProps},other))})),GridColumnHeadersInner_excluded=["isDragging","className"],GridColumnHeadersInnerRoot=(0,esm_styled.Z)("div",{name:"MuiDataGrid",slot:"columnHeadersInner",overridesResolver:(props,styles)=>[{[`&.${gridClasses_gridClasses.columnHeaderDropZone}`]:styles.columnHeaderDropZone},styles.columnHeadersInner]})((()=>({display:"flex",alignItems:"flex-start",flexDirection:"column",[`&.${gridClasses_gridClasses.columnHeaderDropZone} .${gridClasses_gridClasses.columnHeaderDraggableContainer}`]:{cursor:"move"},[`&.${gridClasses_gridClasses["columnHeadersInner--scrollable"]} .${gridClasses_gridClasses.columnHeader}:last-child`]:{borderRight:"none"}}))),GridColumnHeadersInner=react.forwardRef((function GridColumnHeadersInner(props,ref){var _apiRef$current$getRo,_apiRef$current$getRo2;const{isDragging,className}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridColumnHeadersInner_excluded),apiRef=(0,utils_useGridApiContext.l)(),rootProps=(0,useGridRootProps.B)(),ownerState=(0,esm_extends.Z)({},rootProps,{isDragging,hasScrollX:null!=(_apiRef$current$getRo=null==(_apiRef$current$getRo2=apiRef.current.getRootDimensions())?void 0:_apiRef$current$getRo2.hasScrollX)&&_apiRef$current$getRo}),classes=(ownerState=>{const{isDragging,hasScrollX,classes}=ownerState,slots={root:["columnHeadersInner",isDragging&&"columnHeaderDropZone",hasScrollX&&"columnHeadersInner--scrollable"]};return(0,composeClasses.Z)(slots,getDataGridUtilityClass,classes)})(ownerState);return(0,jsx_runtime.jsx)(GridColumnHeadersInnerRoot,(0,esm_extends.Z)({ref,className:(0,clsx_m.Z)(className,classes.root),ownerState},other))})),GridColumnHeaders_excluded=["innerRef","className","visibleColumns","sortColumnLookup","filterColumnLookup","columnPositions","columnHeaderTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","densityFactor","headerGroupingMaxDepth","columnMenuState","columnVisibility","columnGroupsHeaderStructure","hasOtherElementInTabSequence"],GridColumnHeaders=react.forwardRef((function GridColumnsHeaders(props,ref){const{innerRef,visibleColumns,sortColumnLookup,filterColumnLookup,columnPositions,columnHeaderTabIndexState,columnGroupHeaderTabIndexState,columnHeaderFocus,columnGroupHeaderFocus,densityFactor,headerGroupingMaxDepth,columnMenuState,columnVisibility,columnGroupsHeaderStructure,hasOtherElementInTabSequence}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridColumnHeaders_excluded),{isDragging,getRootProps,getInnerProps,getColumnHeaders,getColumnGroupHeaders}=(props=>{const{innerRef:innerRefProp,minColumnIndex=0,visibleColumns,sortColumnLookup,filterColumnLookup,columnPositions,columnHeaderTabIndexState,columnGroupHeaderTabIndexState,columnHeaderFocus,columnGroupHeaderFocus,densityFactor,headerGroupingMaxDepth,columnMenuState,columnVisibility,columnGroupsHeaderStructure,hasOtherElementInTabSequence}=props,theme=(0,esm_useTheme.Z)(),[dragCol,setDragCol]=react.useState(""),[resizeCol,setResizeCol]=react.useState(""),apiRef=useGridPrivateApiContext(),rootProps=(0,useGridRootProps.B)(),innerRef=react.useRef(null),handleInnerRef=(0,useForkRef.Z)(innerRefProp,innerRef),[renderContext,setRenderContext]=react.useState(null),prevRenderContext=react.useRef(renderContext),prevScrollLeft=react.useRef(0),currentPage=useGridVisibleRows(apiRef,rootProps),totalHeaderHeight=getTotalHeaderHeight(apiRef,rootProps.columnHeaderHeight),headerHeight=Math.floor(rootProps.columnHeaderHeight*densityFactor);react.useEffect((()=>{apiRef.current.columnHeadersContainerElementRef.current.scrollLeft=0}),[apiRef]);const getFirstColumnIndexToRenderRef=react.useRef(defaultMemoize(getFirstColumnIndexToRender,{equalityCheck:(a,b)=>["firstColumnIndex","minColumnIndex","columnBuffer"].every((key=>a[key]===b[key]))})),updateInnerPosition=react.useCallback((nextRenderContext=>{const[firstRowToRender,lastRowToRender]=getRenderableIndexes({firstIndex:nextRenderContext.firstRowIndex,lastIndex:nextRenderContext.lastRowIndex,minFirstIndex:0,maxLastIndex:currentPage.rows.length,buffer:rootProps.rowBuffer}),firstColumnToRender=getFirstColumnIndexToRenderRef.current({firstColumnIndex:nextRenderContext.firstColumnIndex,minColumnIndex,columnBuffer:rootProps.columnBuffer,firstRowToRender,lastRowToRender,apiRef,visibleRows:currentPage.rows}),direction="ltr"===theme.direction?1:-1,offset=firstColumnToRender>0?prevScrollLeft.current-direction*columnPositions[firstColumnToRender]:prevScrollLeft.current;innerRef.current.style.transform=`translate3d(${-offset}px, 0px, 0px)`}),[columnPositions,minColumnIndex,rootProps.columnBuffer,apiRef,currentPage.rows,rootProps.rowBuffer,theme.direction]);react.useLayoutEffect((()=>{renderContext&&updateInnerPosition(renderContext)}),[renderContext,updateInnerPosition]);const handleScroll=react.useCallback((({left,renderContext:nextRenderContext=null},event)=>{var _prevRenderContext$cu,_prevRenderContext$cu2;if(!innerRef.current)return;if(prevScrollLeft.current===left&&(null==(_prevRenderContext$cu=prevRenderContext.current)?void 0:_prevRenderContext$cu.firstColumnIndex)===(null==nextRenderContext?void 0:nextRenderContext.firstColumnIndex)&&(null==(_prevRenderContext$cu2=prevRenderContext.current)?void 0:_prevRenderContext$cu2.lastColumnIndex)===(null==nextRenderContext?void 0:nextRenderContext.lastColumnIndex))return;prevScrollLeft.current=left;let canUpdateInnerPosition=!1;nextRenderContext===prevRenderContext.current&&prevRenderContext.current?canUpdateInnerPosition=!0:(function isUIEvent(event){return!!event.target}(event)?(react_dom.flushSync((()=>{setRenderContext(nextRenderContext)})),canUpdateInnerPosition=!0):setRenderContext(nextRenderContext),prevRenderContext.current=nextRenderContext),nextRenderContext&&canUpdateInnerPosition&&updateInnerPosition(nextRenderContext)}),[updateInnerPosition]),handleColumnResizeStart=react.useCallback((params=>setResizeCol(params.field)),[]),handleColumnResizeStop=react.useCallback((()=>setResizeCol("")),[]),handleColumnReorderStart=react.useCallback((params=>setDragCol(params.field)),[]),handleColumnReorderStop=react.useCallback((()=>setDragCol("")),[]);useGridApiEventHandler(apiRef,"columnResizeStart",handleColumnResizeStart),useGridApiEventHandler(apiRef,"columnResizeStop",handleColumnResizeStop),useGridApiEventHandler(apiRef,"columnHeaderDragStart",handleColumnReorderStart),useGridApiEventHandler(apiRef,"columnHeaderDragEnd",handleColumnReorderStop),useGridApiEventHandler(apiRef,"scrollPositionChange",handleScroll);const getColumnsToRender=params=>{const{renderContext:nextRenderContext=renderContext,minFirstColumn=minColumnIndex,maxLastColumn=visibleColumns.length}=params||{};if(!nextRenderContext)return null;const[firstRowToRender,lastRowToRender]=getRenderableIndexes({firstIndex:nextRenderContext.firstRowIndex,lastIndex:nextRenderContext.lastRowIndex,minFirstIndex:0,maxLastIndex:currentPage.rows.length,buffer:rootProps.rowBuffer}),firstColumnToRender=getFirstColumnIndexToRenderRef.current({firstColumnIndex:nextRenderContext.firstColumnIndex,minColumnIndex:minFirstColumn,columnBuffer:rootProps.columnBuffer,apiRef,firstRowToRender,lastRowToRender,visibleRows:currentPage.rows}),lastColumnToRender=Math.min(nextRenderContext.lastColumnIndex+rootProps.columnBuffer,maxLastColumn);return{renderedColumns:visibleColumns.slice(firstColumnToRender,lastColumnToRender),firstColumnToRender,lastColumnToRender,minFirstColumn,maxLastColumn}},rootStyle={minHeight:totalHeaderHeight,maxHeight:totalHeaderHeight,lineHeight:`${headerHeight}px`};return{renderContext,getColumnHeaders:(params,other={})=>{const columnsToRender=getColumnsToRender(params);if(null==columnsToRender)return null;const{renderedColumns,firstColumnToRender}=columnsToRender,columns=[];for(let i=0;i<renderedColumns.length;i+=1){const colDef=renderedColumns[i],columnIndex=firstColumnToRender+i,isFirstColumn=0===columnIndex,tabIndex=null!==columnHeaderTabIndexState&&columnHeaderTabIndexState.field===colDef.field||isFirstColumn&&!hasOtherElementInTabSequence?0:-1,hasFocus=null!==columnHeaderFocus&&columnHeaderFocus.field===colDef.field,open=columnMenuState.open&&columnMenuState.field===colDef.field;columns.push((0,jsx_runtime.jsx)(GridColumnHeaderItem,(0,esm_extends.Z)({},sortColumnLookup[colDef.field],{columnMenuOpen:open,filterItemsCounter:filterColumnLookup[colDef.field]&&filterColumnLookup[colDef.field].length,headerHeight,isDragging:colDef.field===dragCol,colDef,colIndex:columnIndex,isResizing:resizeCol===colDef.field,hasFocus,tabIndex},other),colDef.field))}return(0,jsx_runtime.jsx)(GridColumnHeaderRow,{role:"row","aria-rowindex":headerGroupingMaxDepth+1,ownerState:rootProps,children:columns})},getColumnGroupHeaders:params=>{if(0===headerGroupingMaxDepth)return null;const columnsToRender=getColumnsToRender(params);if(null==columnsToRender||0===columnsToRender.renderedColumns.length)return null;const{firstColumnToRender,lastColumnToRender}=columnsToRender,columns=[],headerToRender=[];for(let depth=0;depth<headerGroupingMaxDepth;depth+=1){var _apiRef$current$unsta,_apiRef$current$unsta2;const rowStructure=columnGroupsHeaderStructure[depth],firstColumnFieldToRender=visibleColumns[firstColumnToRender].field,firstGroupToRender=null!=(_apiRef$current$unsta=apiRef.current.unstable_getColumnGroupPath(firstColumnFieldToRender)[depth])?_apiRef$current$unsta:null,firstGroupIndex=rowStructure.findIndex((({groupId,columnFields})=>groupId===firstGroupToRender&&columnFields.includes(firstColumnFieldToRender))),lastColumnFieldToRender=visibleColumns[lastColumnToRender-1].field,lastGroupToRender=null!=(_apiRef$current$unsta2=apiRef.current.unstable_getColumnGroupPath(lastColumnFieldToRender)[depth])?_apiRef$current$unsta2:null,lastGroupIndex=rowStructure.findIndex((({groupId,columnFields})=>groupId===lastGroupToRender&&columnFields.includes(lastColumnFieldToRender))),visibleColumnGroupHeader=rowStructure.slice(firstGroupIndex,lastGroupIndex+1).map((groupStructure=>(0,esm_extends.Z)({},groupStructure,{columnFields:groupStructure.columnFields.filter((field=>!1!==columnVisibility[field]))}))).filter((groupStructure=>groupStructure.columnFields.length>0)),firstVisibleColumnIndex=visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender),leftOverflow=visibleColumnGroupHeader[0].columnFields.slice(0,firstVisibleColumnIndex).reduce(((acc,field)=>{var _column$computedWidth;return acc+(null!=(_column$computedWidth=apiRef.current.getColumn(field).computedWidth)?_column$computedWidth:0)}),0);let columnIndex=firstColumnToRender;const elements=visibleColumnGroupHeader.map((({groupId,columnFields})=>{const hasFocus=null!==columnGroupHeaderFocus&&columnGroupHeaderFocus.depth===depth&&columnFields.includes(columnGroupHeaderFocus.field),tabIndex=null!==columnGroupHeaderTabIndexState&&columnGroupHeaderTabIndexState.depth===depth&&columnFields.includes(columnGroupHeaderTabIndexState.field)?0:-1,headerInfo={groupId,width:columnFields.map((field=>apiRef.current.getColumn(field).computedWidth)).reduce(((acc,val)=>acc+val),0),fields:columnFields,colIndex:columnIndex,hasFocus,tabIndex};return columnIndex+=columnFields.length,headerInfo}));headerToRender.push({leftOverflow,elements})}return headerToRender.forEach(((depthInfo,depthIndex)=>{columns.push((0,jsx_runtime.jsx)(GridColumnHeaderRow,{style:{height:`${headerHeight}px`,transform:`translateX(-${depthInfo.leftOverflow}px)`},role:"row","aria-rowindex":depthIndex+1,ownerState:rootProps,children:depthInfo.elements.map((({groupId,width,fields,colIndex,hasFocus,tabIndex},groupIndex)=>(0,jsx_runtime.jsx)(GridColumnGroupHeader,{groupId,width,fields,colIndex,depth:depthIndex,isLastColumn:colIndex===visibleColumns.length-fields.length,maxDepth:headerToRender.length,height:headerHeight,hasFocus,tabIndex},groupIndex)))},depthIndex))})),columns},isDragging:!!dragCol,getRootProps:(other={})=>(0,esm_extends.Z)({style:rootStyle},other),getInnerProps:()=>({ref:handleInnerRef,role:"rowgroup"})}})({innerRef,visibleColumns,sortColumnLookup,filterColumnLookup,columnPositions,columnHeaderTabIndexState,columnGroupHeaderTabIndexState,columnHeaderFocus,columnGroupHeaderFocus,densityFactor,headerGroupingMaxDepth,columnMenuState,columnVisibility,columnGroupsHeaderStructure,hasOtherElementInTabSequence});return(0,jsx_runtime.jsxs)(GridBaseColumnHeaders,(0,esm_extends.Z)({ref},getRootProps(other),{children:[(0,jsx_runtime.jsx)(GridScrollArea,{scrollDirection:"left"}),(0,jsx_runtime.jsxs)(GridColumnHeadersInner,(0,esm_extends.Z)({isDragging},getInnerProps(),{children:[getColumnGroupHeaders(),getColumnHeaders()]})),(0,jsx_runtime.jsx)(GridScrollArea,{scrollDirection:"right"})]}))}));var Divider=__webpack_require__("./node_modules/@mui/material/Divider/Divider.js");const useGridColumnMenuSlots_excluded=["displayOrder"],GridColumnMenuContainer_excluded=["hideMenu","colDef","id","labelledby","className","children","open"],StyledMenuList=(0,styled.ZP)(MenuList.Z)((()=>({minWidth:248}))),GridColumnMenuContainer=react.forwardRef((function GridColumnMenuContainer(props,ref){const{hideMenu,id,labelledby,className,children,open}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridColumnMenuContainer_excluded),handleListKeyDown=react.useCallback((event=>{var key;isTabKey(event.key)&&event.preventDefault(),key=event.key,(isTabKey(key)||isEscapeKey(key))&&hideMenu(event)}),[hideMenu]);return(0,jsx_runtime.jsx)(StyledMenuList,(0,esm_extends.Z)({id,ref,className:(0,clsx_m.Z)(gridClasses_gridClasses.menuList,className),"aria-labelledby":labelledby,onKeyDown:handleListKeyDown,autoFocus:open},other,{children}))}));var ListItemIcon=__webpack_require__("./node_modules/@mui/material/ListItemIcon/ListItemIcon.js"),ListItemText=__webpack_require__("./node_modules/@mui/material/ListItemText/ListItemText.js");function GridColumnMenuHideItem(props){const{colDef,onClick}=props,apiRef=(0,utils_useGridApiContext.l)(),rootProps=(0,useGridRootProps.B)(),disabled=1===gridVisibleColumnDefinitionsSelector(apiRef).filter((col=>!0!==col.disableColumnMenu)).length,toggleColumn=react.useCallback((event=>{disabled||(apiRef.current.setColumnVisibility(colDef.field,!1),onClick(event))}),[apiRef,colDef.field,onClick,disabled]);return rootProps.disableColumnSelector||!1===colDef.hideable?null:(0,jsx_runtime.jsxs)(MenuItem.Z,{onClick:toggleColumn,disabled,children:[(0,jsx_runtime.jsx)(ListItemIcon.Z,{children:(0,jsx_runtime.jsx)(rootProps.slots.columnMenuHideIcon,{fontSize:"small"})}),(0,jsx_runtime.jsx)(ListItemText.Z,{children:apiRef.current.getLocaleText("columnMenuHideColumn")})]})}function GridColumnMenuManageItem(props){const{onClick}=props,apiRef=(0,utils_useGridApiContext.l)(),rootProps=(0,useGridRootProps.B)(),showColumns=react.useCallback((event=>{onClick(event),apiRef.current.showPreferences(GridPreferencePanelsValue.columns)}),[apiRef,onClick]);return rootProps.disableColumnSelector?null:(0,jsx_runtime.jsxs)(MenuItem.Z,{onClick:showColumns,children:[(0,jsx_runtime.jsx)(ListItemIcon.Z,{children:(0,jsx_runtime.jsx)(rootProps.slots.columnMenuManageColumnsIcon,{fontSize:"small"})}),(0,jsx_runtime.jsx)(ListItemText.Z,{children:apiRef.current.getLocaleText("columnMenuManageColumns")})]})}const GridColumnMenu_excluded=["defaultSlots","defaultSlotProps","slots","slotProps"],GRID_COLUMN_MENU_SLOTS={columnMenuSortItem:function GridColumnMenuSortItem(props){var _colDef$sortingOrder;const{colDef,onClick}=props,apiRef=(0,utils_useGridApiContext.l)(),sortModel=useGridSelector(apiRef,gridSortModelSelector),rootProps=(0,useGridRootProps.B)(),sortDirection=react.useMemo((()=>{if(!colDef)return null;const sortItem=sortModel.find((item=>item.field===colDef.field));return null==sortItem?void 0:sortItem.sort}),[colDef,sortModel]),sortingOrder=null!=(_colDef$sortingOrder=colDef.sortingOrder)?_colDef$sortingOrder:rootProps.sortingOrder,onSortMenuItemClick=react.useCallback((event=>{onClick(event);const direction=event.currentTarget.getAttribute("data-value")||null;apiRef.current.sortColumn(colDef,direction===sortDirection?null:direction)}),[apiRef,colDef,onClick,sortDirection]);return colDef&&colDef.sortable&&sortingOrder.some((item=>!!item))?(0,jsx_runtime.jsxs)(react.Fragment,{children:[sortingOrder.includes("asc")&&"asc"!==sortDirection?(0,jsx_runtime.jsxs)(MenuItem.Z,{onClick:onSortMenuItemClick,"data-value":"asc",children:[(0,jsx_runtime.jsx)(ListItemIcon.Z,{children:(0,jsx_runtime.jsx)(rootProps.slots.columnMenuSortAscendingIcon,{fontSize:"small"})}),(0,jsx_runtime.jsx)(ListItemText.Z,{children:apiRef.current.getLocaleText("columnMenuSortAsc")})]}):null,sortingOrder.includes("desc")&&"desc"!==sortDirection?(0,jsx_runtime.jsxs)(MenuItem.Z,{onClick:onSortMenuItemClick,"data-value":"desc",children:[(0,jsx_runtime.jsx)(ListItemIcon.Z,{children:(0,jsx_runtime.jsx)(rootProps.slots.columnMenuSortDescendingIcon,{fontSize:"small"})}),(0,jsx_runtime.jsx)(ListItemText.Z,{children:apiRef.current.getLocaleText("columnMenuSortDesc")})]}):null,sortingOrder.includes(null)&&null!=sortDirection?(0,jsx_runtime.jsxs)(MenuItem.Z,{onClick:onSortMenuItemClick,children:[(0,jsx_runtime.jsx)(ListItemIcon.Z,{}),(0,jsx_runtime.jsx)(ListItemText.Z,{children:apiRef.current.getLocaleText("columnMenuUnsort")})]}):null]}):null},columnMenuFilterItem:function GridColumnMenuFilterItem(props){const{colDef,onClick}=props,apiRef=(0,utils_useGridApiContext.l)(),rootProps=(0,useGridRootProps.B)(),showFilter=react.useCallback((event=>{onClick(event),apiRef.current.showFilterPanel(colDef.field)}),[apiRef,colDef.field,onClick]);return rootProps.disableColumnFilter||!colDef.filterable?null:(0,jsx_runtime.jsxs)(MenuItem.Z,{onClick:showFilter,children:[(0,jsx_runtime.jsx)(ListItemIcon.Z,{children:(0,jsx_runtime.jsx)(rootProps.slots.columnMenuFilterIcon,{fontSize:"small"})}),(0,jsx_runtime.jsx)(ListItemText.Z,{children:apiRef.current.getLocaleText("columnMenuFilter")})]})},columnMenuColumnsItem:function GridColumnMenuColumnsItem(props){return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(GridColumnMenuHideItem,(0,esm_extends.Z)({},props)),(0,jsx_runtime.jsx)(GridColumnMenuManageItem,(0,esm_extends.Z)({},props))]})}},GRID_COLUMN_MENU_SLOT_PROPS={columnMenuSortItem:{displayOrder:10},columnMenuFilterItem:{displayOrder:20},columnMenuColumnsItem:{displayOrder:30}},GridGenericColumnMenu=react.forwardRef((function GridGenericColumnMenu(props,ref){const{defaultSlots,defaultSlotProps,slots,slotProps}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridColumnMenu_excluded),orderedSlots=(props=>{const apiRef=useGridPrivateApiContext(),{defaultSlots,defaultSlotProps,slots={},slotProps={},hideMenu,colDef,addDividers=!0}=props,processedComponents=react.useMemo((()=>(0,esm_extends.Z)({},defaultSlots,slots)),[defaultSlots,slots]),processedSlotProps=react.useMemo((()=>{if(!slotProps||0===Object.keys(slotProps).length)return defaultSlotProps;const mergedProps=(0,esm_extends.Z)({},slotProps);return Object.entries(defaultSlotProps).forEach((([key,currentSlotProps])=>{mergedProps[key]=(0,esm_extends.Z)({},currentSlotProps,slotProps[key]||{})})),mergedProps}),[defaultSlotProps,slotProps]),defaultItems=apiRef.current.unstable_applyPipeProcessors("columnMenu",[],props.colDef),userItems=react.useMemo((()=>{const defaultComponentKeys=Object.keys(defaultSlots);return Object.keys(slots).filter((key=>!defaultComponentKeys.includes(key)))}),[slots,defaultSlots]);return react.useMemo((()=>{const sorted=Array.from(new Set([...defaultItems,...userItems])).filter((key=>null!=processedComponents[key])).sort(((a,b)=>{const leftItemProps=processedSlotProps[a],rightItemProps=processedSlotProps[b];return(Number.isFinite(null==leftItemProps?void 0:leftItemProps.displayOrder)?leftItemProps.displayOrder:100)-(Number.isFinite(null==rightItemProps?void 0:rightItemProps.displayOrder)?rightItemProps.displayOrder:100)}));return sorted.reduce(((acc,key,index)=>{let itemProps={colDef,onClick:hideMenu};const processedComponentProps=processedSlotProps[key];if(processedComponentProps){const customProps=(0,objectWithoutPropertiesLoose.Z)(processedComponentProps,useGridColumnMenuSlots_excluded);itemProps=(0,esm_extends.Z)({},itemProps,customProps)}return addDividers&&index!==sorted.length-1?[...acc,[processedComponents[key],itemProps],[Divider.Z,{}]]:[...acc,[processedComponents[key],itemProps]]}),[])}),[addDividers,colDef,defaultItems,hideMenu,processedComponents,processedSlotProps,userItems])})((0,esm_extends.Z)({},other,{defaultSlots,defaultSlotProps,slots,slotProps}));return(0,jsx_runtime.jsx)(GridColumnMenuContainer,(0,esm_extends.Z)({ref},other,{children:orderedSlots.map((([Component,otherProps],index)=>(0,jsx_runtime.jsx)(Component,(0,esm_extends.Z)({},otherProps),index)))}))})),GridColumnMenu=react.forwardRef((function GridColumnMenu(props,ref){return(0,jsx_runtime.jsx)(GridGenericColumnMenu,(0,esm_extends.Z)({},props,{ref,defaultSlots:GRID_COLUMN_MENU_SLOTS,defaultSlotProps:GRID_COLUMN_MENU_SLOT_PROPS}))})),GridNoResultsOverlay=react.forwardRef((function GridNoResultsOverlay(props,ref){const noResultsOverlayLabel=(0,utils_useGridApiContext.l)().current.getLocaleText("noResultsOverlayLabel");return(0,jsx_runtime.jsx)(GridOverlay,(0,esm_extends.Z)({ref},props,{children:noResultsOverlayLabel}))}));var Checkbox=__webpack_require__("./node_modules/@mui/material/Checkbox/Checkbox.js"),TextField=__webpack_require__("./node_modules/@mui/material/TextField/TextField.js"),FormControl=__webpack_require__("./node_modules/@mui/material/FormControl/FormControl.js"),Switch=__webpack_require__("./node_modules/@mui/material/Switch/Switch.js"),Button=__webpack_require__("./node_modules/@mui/material/Button/Button.js"),Tooltip=__webpack_require__("./node_modules/@mui/material/Tooltip/Tooltip.js"),InputLabel=__webpack_require__("./node_modules/@mui/material/InputLabel/InputLabel.js");const GridColumnUnsortedIcon_excluded=["sortingOrder"],GridColumnUnsortedIcon=react.memo((function GridColumnHeaderSortIcon(props){const{sortingOrder}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridColumnUnsortedIcon_excluded),rootProps=(0,useGridRootProps.B)(),[nextSortDirection]=sortingOrder,Icon="asc"===nextSortDirection?rootProps.slots.columnSortedAscendingIcon:rootProps.slots.columnSortedDescendingIcon;return Icon?(0,jsx_runtime.jsx)(Icon,(0,esm_extends.Z)({},other)):null})),GridArrowUpwardIcon=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"}),"ArrowUpward"),GridArrowDownwardIcon=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"}),"ArrowDownward"),GridKeyboardArrowRight=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"}),"KeyboardArrowRight"),GridExpandMoreIcon=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z"}),"ExpandMore"),GridFilterListIcon=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"}),"FilterList"),GridFilterAltIcon=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z"}),"FilterAlt"),GridSearchIcon=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"}),"Search"),GridColumnIcon=((0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"}),"Menu"),(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"}),"CheckCircle"),(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"}),"ColumnIcon")),GridSeparatorIcon=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M11 19V5h2v14z"}),"Separator"),GridViewHeadlineIcon=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z"}),"ViewHeadline"),GridTableRowsIcon=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z"}),"TableRows"),GridViewStreamIcon=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M4 18h17v-6H4v6zM4 5v6h17V5H4z"}),"ViewStream"),GridTripleDotsVerticalIcon=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"}),"TripleDotsVertical"),GridCloseIcon=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"}),"Close"),GridAddIcon=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"}),"Add"),GridRemoveIcon=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M19 13H5v-2h14v2z"}),"Remove"),GridLoadIcon=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z"}),"Load"),GridDragIcon=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"}),"Drag"),GridSaveAltIcon=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z"}),"SaveAlt"),GridCheckIcon=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"}),"Check"),GridMoreVertIcon=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"}),"MoreVert"),GridVisibilityOffIcon=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z"}),"VisibilityOff"),GridViewColumnIcon=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("g",{children:(0,jsx_runtime.jsx)("path",{d:"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z"})}),"ViewColumn"),GridClearIcon=(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"}),"Clear"),GridDeleteForeverIcon=((0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"}),"Delete"),(0,createSvgIcon.Z)((0,jsx_runtime.jsx)("path",{d:"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z"}),"Delete")),MUISelectOption_excluded=["native"];const iconSlots={BooleanCellTrueIcon:GridCheckIcon,BooleanCellFalseIcon:GridCloseIcon,ColumnMenuIcon:GridTripleDotsVerticalIcon,OpenFilterButtonIcon:GridFilterListIcon,FilterPanelDeleteIcon:GridCloseIcon,ColumnFilteredIcon:GridFilterAltIcon,ColumnSelectorIcon:GridColumnIcon,ColumnUnsortedIcon:GridColumnUnsortedIcon,ColumnSortedAscendingIcon:GridArrowUpwardIcon,ColumnSortedDescendingIcon:GridArrowDownwardIcon,ColumnResizeIcon:GridSeparatorIcon,DensityCompactIcon:GridViewHeadlineIcon,DensityStandardIcon:GridTableRowsIcon,DensityComfortableIcon:GridViewStreamIcon,ExportIcon:GridSaveAltIcon,MoreActionsIcon:GridMoreVertIcon,TreeDataCollapseIcon:GridExpandMoreIcon,TreeDataExpandIcon:GridKeyboardArrowRight,GroupingCriteriaCollapseIcon:GridExpandMoreIcon,GroupingCriteriaExpandIcon:GridKeyboardArrowRight,DetailPanelExpandIcon:GridAddIcon,DetailPanelCollapseIcon:GridRemoveIcon,RowReorderIcon:GridDragIcon,QuickFilterIcon:GridSearchIcon,QuickFilterClearIcon:GridCloseIcon,ColumnMenuHideIcon:GridVisibilityOffIcon,ColumnMenuSortAscendingIcon:GridArrowUpwardIcon,ColumnMenuSortDescendingIcon:GridArrowDownwardIcon,ColumnMenuFilterIcon:GridFilterAltIcon,ColumnMenuManageColumnsIcon:GridViewColumnIcon,ColumnMenuClearIcon:GridClearIcon,LoadIcon:GridLoadIcon,FilterPanelAddIcon:GridAddIcon,FilterPanelRemoveAllIcon:GridDeleteForeverIcon,ColumnReorderIcon:GridDragIcon},material=(0,esm_extends.Z)({},iconSlots,{BaseCheckbox:Checkbox.Z,BaseTextField:TextField.Z,BaseFormControl:FormControl.Z,BaseSelect:Select.Z,BaseSwitch:Switch.Z,BaseButton:Button.Z,BaseIconButton:IconButton.Z,BaseTooltip:Tooltip.Z,BasePopper:Popper.Z,BaseInputLabel:InputLabel.Z,BaseSelectOption:function MUISelectOption(_ref){let{native}=_ref,props=(0,objectWithoutPropertiesLoose.Z)(_ref,MUISelectOption_excluded);return native?(0,jsx_runtime.jsx)("option",(0,esm_extends.Z)({},props)):(0,jsx_runtime.jsx)(MenuItem.Z,(0,esm_extends.Z)({},props))}}),DATA_GRID_DEFAULT_SLOTS_COMPONENTS=(0,esm_extends.Z)({},material,{Cell:MemoizedCell,SkeletonCell:function GridSkeletonCell(props){const{align,width,contentWidth}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridSkeletonCell_excluded),classes=(ownerState=>{const{align,classes}=ownerState,slots={root:["cell","cellSkeleton",`cell--text${(0,capitalize.Z)(align)}`,"withBorderColor"]};return(0,composeClasses.Z)(slots,getDataGridUtilityClass,classes)})({classes:(0,useGridRootProps.B)().classes,align});return(0,jsx_runtime.jsx)("div",(0,esm_extends.Z)({className:classes.root,style:{width}},other,{children:(0,jsx_runtime.jsx)(Skeleton.Z,{width:`${contentWidth}%`})}))},ColumnHeaderFilterIconButton:function GridColumnHeaderFilterIconButton(props){var _rootProps$slotProps,_rootProps$slotProps2;const{counter,field,onClick}=props,apiRef=(0,utils_useGridApiContext.l)(),rootProps=(0,useGridRootProps.B)(),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({icon:["filterIcon"]},getDataGridUtilityClass,classes)})((0,esm_extends.Z)({},props,{classes:rootProps.classes})),toggleFilter=react.useCallback((event=>{event.preventDefault(),event.stopPropagation();const{open,openedPanelValue}=gridPreferencePanelStateSelector(apiRef.current.state);open&&openedPanelValue===GridPreferencePanelsValue.filters?apiRef.current.hideFilterPanel():apiRef.current.showFilterPanel(),onClick&&onClick(apiRef.current.getColumnHeaderParams(field),event)}),[apiRef,field,onClick]);if(!counter)return null;const iconButton=(0,jsx_runtime.jsx)(rootProps.slots.baseIconButton,(0,esm_extends.Z)({onClick:toggleFilter,color:"default","aria-label":apiRef.current.getLocaleText("columnHeaderFiltersLabel"),size:"small",tabIndex:-1},null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.baseIconButton,{children:(0,jsx_runtime.jsx)(rootProps.slots.columnFilteredIcon,{className:classes.icon,fontSize:"small"})}));return(0,jsx_runtime.jsx)(rootProps.slots.baseTooltip,(0,esm_extends.Z)({title:apiRef.current.getLocaleText("columnHeaderFiltersTooltipActive")(counter),enterDelay:1e3},null==(_rootProps$slotProps2=rootProps.slotProps)?void 0:_rootProps$slotProps2.baseTooltip,{children:(0,jsx_runtime.jsxs)(GridIconButtonContainer,{children:[counter>1&&(0,jsx_runtime.jsx)(Badge.Z,{badgeContent:counter,color:"default",children:iconButton}),1===counter&&iconButton]})}))},ColumnMenu:GridColumnMenu,ColumnHeaders:GridColumnHeaders,Footer:GridFooter,Toolbar:null,PreferencesPanel:GridPreferencesPanel,LoadingOverlay:GridLoadingOverlay,NoResultsOverlay:GridNoResultsOverlay,NoRowsOverlay:GridNoRowsOverlay,Pagination:GridPagination,FilterPanel:GridFilterPanel,ColumnsPanel:function GridColumnsPanel(props){var _rootProps$slotProps,_rootProps$slotProps3,_rootProps$slotProps4;const apiRef=(0,utils_useGridApiContext.l)(),searchInputRef=react.useRef(null),columns=useGridSelector(apiRef,gridColumnDefinitionsSelector),columnVisibilityModel=useGridSelector(apiRef,gridColumnVisibilityModelSelector),rootProps=(0,useGridRootProps.B)(),[searchValue,setSearchValue]=react.useState(""),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["columnsPanel"],columnsPanelRow:["columnsPanelRow"]},getDataGridUtilityClass,classes)})(rootProps),{sort,searchPredicate=defaultSearchPredicate,autoFocusSearchField=!0,disableHideAllButton=!1,disableShowAllButton=!1}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridColumnsPanel_excluded),sortedColumns=react.useMemo((()=>{switch(sort){case"asc":return[...columns].sort(((a,b)=>GridColumnsPanel_collator.compare(a.headerName||a.field,b.headerName||b.field)));case"desc":return[...columns].sort(((a,b)=>-GridColumnsPanel_collator.compare(a.headerName||a.field,b.headerName||b.field)));default:return columns}}),[columns,sort]),toggleColumn=event=>{const{name:field}=event.target;apiRef.current.setColumnVisibility(field,!1===columnVisibilityModel[field])},toggleAllColumns=react.useCallback((isVisible=>{const currentModel=gridColumnVisibilityModelSelector(apiRef),newModel=(0,esm_extends.Z)({},currentModel);return columns.forEach((col=>{col.hideable&&(isVisible?delete newModel[col.field]:newModel[col.field]=!1)})),apiRef.current.setColumnVisibilityModel(newModel)}),[apiRef,columns]),handleSearchValueChange=react.useCallback((event=>{setSearchValue(event.target.value)}),[]),currentColumns=react.useMemo((()=>{if(!searchValue)return sortedColumns;const searchValueToCheck=searchValue.toLowerCase();return sortedColumns.filter((column=>searchPredicate(column,searchValueToCheck)))}),[sortedColumns,searchValue,searchPredicate]),firstSwitchRef=react.useRef(null);react.useEffect((()=>{autoFocusSearchField?searchInputRef.current.focus():firstSwitchRef.current&&"function"==typeof firstSwitchRef.current.focus&&firstSwitchRef.current.focus()}),[autoFocusSearchField]);let firstHideableColumnFound=!1;const isFirstHideableColumn=column=>!1===firstHideableColumnFound&&!1!==column.hideable&&(firstHideableColumnFound=!0,!0);return(0,jsx_runtime.jsxs)(GridPanelWrapper,(0,esm_extends.Z)({},other,{children:[(0,jsx_runtime.jsx)(GridPanelHeader,{children:(0,jsx_runtime.jsx)(rootProps.slots.baseTextField,(0,esm_extends.Z)({label:apiRef.current.getLocaleText("columnsPanelTextFieldLabel"),placeholder:apiRef.current.getLocaleText("columnsPanelTextFieldPlaceholder"),inputRef:searchInputRef,value:searchValue,onChange:handleSearchValueChange,variant:"standard",fullWidth:!0},null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.baseTextField))}),(0,jsx_runtime.jsx)(GridPanelContent,{children:(0,jsx_runtime.jsx)(GridColumnsPanelRoot,{className:classes.root,ownerState:rootProps,children:currentColumns.map((column=>{var _rootProps$slotProps2;return(0,jsx_runtime.jsxs)(GridColumnsPanelRowRoot,{className:classes.columnsPanelRow,ownerState:rootProps,children:[(0,jsx_runtime.jsx)(FormControlLabel.Z,{control:(0,jsx_runtime.jsx)(rootProps.slots.baseSwitch,(0,esm_extends.Z)({disabled:!1===column.hideable,checked:!1!==columnVisibilityModel[column.field],onClick:toggleColumn,name:column.field,size:"small",inputRef:isFirstHideableColumn(column)?firstSwitchRef:void 0},null==(_rootProps$slotProps2=rootProps.slotProps)?void 0:_rootProps$slotProps2.baseSwitch)),label:column.headerName||column.field}),!rootProps.disableColumnReorder&&false]},column.field)}))})}),disableShowAllButton&&disableHideAllButton?null:(0,jsx_runtime.jsxs)(GridPanelFooter,{children:[disableHideAllButton?(0,jsx_runtime.jsx)("span",{}):(0,jsx_runtime.jsx)(rootProps.slots.baseButton,(0,esm_extends.Z)({onClick:()=>toggleAllColumns(!1)},null==(_rootProps$slotProps3=rootProps.slotProps)?void 0:_rootProps$slotProps3.baseButton,{disabled:disableHideAllButton,children:apiRef.current.getLocaleText("columnsPanelHideAllButton")})),disableShowAllButton?null:(0,jsx_runtime.jsx)(rootProps.slots.baseButton,(0,esm_extends.Z)({onClick:()=>toggleAllColumns(!0)},null==(_rootProps$slotProps4=rootProps.slotProps)?void 0:_rootProps$slotProps4.baseButton,{disabled:disableShowAllButton,children:apiRef.current.getLocaleText("columnsPanelShowAllButton")}))]})]}))},Panel:GridPanel,Row:GridRow}),uncapitalizeObjectKeys=capitalizedObject=>{if(void 0!==capitalizedObject)return Object.keys(capitalizedObject).reduce(((acc,key)=>(0,esm_extends.Z)({},acc,{[`${key.charAt(0).toLowerCase()}${key.slice(1)}`]:capitalizedObject[key]})),{})};const useDataGridProps_excluded=["components","componentsProps"],DATA_GRID_FORCED_PROPS={disableMultipleColumnsFiltering:!0,disableMultipleColumnsSorting:!0,disableMultipleRowSelection:!0,throttleRowsMs:void 0,hideFooterRowCount:!1,pagination:!0,checkboxSelectionVisibleOnly:!1,disableColumnReorder:!0,disableColumnResize:!0,keepColumnPositionIfDraggedOutside:!1,signature:"DataGrid"},DATA_GRID_PROPS_DEFAULT_VALUES={autoHeight:!1,autoPageSize:!1,checkboxSelection:!1,checkboxSelectionVisibleOnly:!1,columnBuffer:3,rowBuffer:3,columnThreshold:3,rowThreshold:3,rowSelection:!0,density:"standard",disableColumnFilter:!1,disableColumnMenu:!1,disableColumnSelector:!1,disableDensitySelector:!1,disableMultipleColumnsFiltering:!1,disableMultipleRowSelection:!1,disableMultipleColumnsSorting:!1,disableRowSelectionOnClick:!1,disableVirtualization:!1,editMode:gridEditRowModel.r2.Cell,filterMode:"client",columnHeaderHeight:56,hideFooter:!1,hideFooterPagination:!1,hideFooterRowCount:!1,hideFooterSelectedRowCount:!1,logger:console,logLevel:"error",pagination:!1,paginationMode:"client",rowHeight:52,pageSizeOptions:[25,50,100],rowSpacingType:"margin",showCellVerticalBorder:!1,showColumnVerticalBorder:!1,sortingOrder:["asc","desc",null],sortingMode:"client",throttleRowsMs:0,disableColumnReorder:!1,disableColumnResize:!1,keepNonExistentRowsSelected:!1,keepColumnPositionIfDraggedOutside:!1},defaultSlots=uncapitalizeObjectKeys(DATA_GRID_DEFAULT_SLOTS_COMPONENTS),useDataGridProps=inProps=>{const _useThemeProps=(0,useThemeProps.Z)({props:inProps,name:"MuiDataGrid"}),{components,componentsProps}=_useThemeProps,themedProps=(0,objectWithoutPropertiesLoose.Z)(_useThemeProps,useDataGridProps_excluded),localeText=react.useMemo((()=>(0,esm_extends.Z)({},GRID_DEFAULT_LOCALE_TEXT,themedProps.localeText)),[themedProps.localeText]),slots=react.useMemo((()=>function computeSlots({defaultSlots,slots,components}){const overrides=null!=slots?slots:components?uncapitalizeObjectKeys(components):null;return overrides&&0!==Object.keys(overrides).length?(0,esm_extends.Z)({},defaultSlots,overrides):defaultSlots}({defaultSlots,slots:themedProps.slots,components})),[components,themedProps.slots]);return react.useMemo((()=>{var _themedProps$slotProp;return(0,esm_extends.Z)({},DATA_GRID_PROPS_DEFAULT_VALUES,themedProps,{localeText,slots,slotProps:null!=(_themedProps$slotProp=themedProps.slotProps)?_themedProps$slotProp:componentsProps},DATA_GRID_FORCED_PROPS)}),[themedProps,localeText,slots,componentsProps])},rowsMetaStateInitializer=state=>(0,esm_extends.Z)({},state,{rowsMeta:{currentPageTotalHeight:0,positions:[]}});const getValidRowHeight=(rowHeightProp,defaultRowHeight,warningMessage)=>"number"==typeof rowHeightProp&&rowHeightProp>0?rowHeightProp:defaultRowHeight;["MUI: The `rowHeight` prop should be a number greater than 0.","The default value will be used instead."].join("\n"),["MUI: The `getRowHeight` prop should return a number greater than 0 or 'auto'.","The default value will be used instead."].join("\n");function isLeaf(node){return void 0!==node.field}const recurrentUnwrapGroupingColumnModel=(columnGroupNode,parents,unwrappedGroupingModelToComplete)=>{if(isLeaf(columnGroupNode)){if(void 0!==unwrappedGroupingModelToComplete[columnGroupNode.field])throw new Error(["MUI: columnGroupingModel contains duplicated field",`column field ${columnGroupNode.field} occurs two times in the grouping model:`,`- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(" > ")}`,`- ${parents.join(" > ")}`].join("\n"));return void(unwrappedGroupingModelToComplete[columnGroupNode.field]=parents)}const{groupId,children}=columnGroupNode;children.forEach((child=>{recurrentUnwrapGroupingColumnModel(child,[...parents,groupId],unwrappedGroupingModelToComplete)}))},unwrapGroupingColumnModel=columnGroupingModel=>{if(!columnGroupingModel)return{};const unwrappedSubTree={};return columnGroupingModel.forEach((columnGroupNode=>{recurrentUnwrapGroupingColumnModel(columnGroupNode,[],unwrappedSubTree)})),unwrappedSubTree},getColumnGroupsHeaderStructure=(orderedColumns,unwrappedGroupingModel)=>{const getParents=field=>{var _unwrappedGroupingMod;return null!=(_unwrappedGroupingMod=unwrappedGroupingModel[field])?_unwrappedGroupingMod:[]},groupingHeaderStructure=[],maxDepth=Math.max(...orderedColumns.map((field=>getParents(field).length))),haveSameParents=(field1,field2,depth)=>isDeepEqual(getParents(field1).slice(0,depth+1),getParents(field2).slice(0,depth+1));for(let depth=0;depth<maxDepth;depth+=1){const depthStructure=orderedColumns.reduce(((structure,newField)=>{var _getParents$depth;const groupId=null!=(_getParents$depth=getParents(newField)[depth])?_getParents$depth:null;if(0===structure.length)return[{columnFields:[newField],groupId}];const lastGroup=structure[structure.length-1],prevField=lastGroup.columnFields[lastGroup.columnFields.length-1];return lastGroup.groupId===groupId&&haveSameParents(prevField,newField,depth)?[...structure.slice(0,structure.length-1),{columnFields:[...lastGroup.columnFields,newField],groupId}]:[...structure,{columnFields:[newField],groupId}]}),[]);groupingHeaderStructure.push(depthStructure)}return groupingHeaderStructure},useGridColumnGrouping_excluded=["groupId","children"],createGroupLookup=columnGroupingModel=>{let groupLookup={};return columnGroupingModel.forEach((node=>{if(isLeaf(node))return;const{groupId,children}=node,other=(0,objectWithoutPropertiesLoose.Z)(node,useGridColumnGrouping_excluded);if(!groupId)throw new Error("MUI: An element of the columnGroupingModel does not have either `field` or `groupId`.");children||console.warn(`MUI: group groupId=${groupId} has no children.`);const groupParam=(0,esm_extends.Z)({},other,{groupId}),subTreeLookup=createGroupLookup(children);if(void 0!==subTreeLookup[groupId]||void 0!==groupLookup[groupId])throw new Error(`MUI: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);groupLookup=(0,esm_extends.Z)({},groupLookup,subTreeLookup,{[groupId]:groupParam})})),(0,esm_extends.Z)({},groupLookup)},columnGroupsStateInitializer=(state,props,apiRef)=>{var _props$experimentalFe,_props$columnGrouping,_props$columnGrouping2;if(null==(_props$experimentalFe=props.experimentalFeatures)||!_props$experimentalFe.columnGrouping)return state;const columnFields=gridColumnFieldsSelector(apiRef),visibleColumnFields=gridVisibleColumnFieldsSelector(apiRef),groupLookup=createGroupLookup(null!=(_props$columnGrouping=props.columnGroupingModel)?_props$columnGrouping:[]),unwrappedGroupingModel=unwrapGroupingColumnModel(null!=(_props$columnGrouping2=props.columnGroupingModel)?_props$columnGrouping2:[]),columnGroupsHeaderStructure=getColumnGroupsHeaderStructure(columnFields,unwrappedGroupingModel),maxDepth=0===visibleColumnFields.length?0:Math.max(...visibleColumnFields.map((field=>{var _unwrappedGroupingMod,_unwrappedGroupingMod2;return null!=(_unwrappedGroupingMod=null==(_unwrappedGroupingMod2=unwrappedGroupingModel[field])?void 0:_unwrappedGroupingMod2.length)?_unwrappedGroupingMod:0})));return(0,esm_extends.Z)({},state,{columnGrouping:{lookup:groupLookup,unwrappedGroupingModel,headerStructure:columnGroupsHeaderStructure,maxDepth}})},useDataGridComponent=(inputApiRef,props)=>{const privateApiRef=useGridInitialization(inputApiRef,props);return useGridRowSelectionPreProcessors(privateApiRef,props),useGridRegisterStrategyProcessor(privateApiRef,"none","rowTreeCreation",flatRowTreeCreationMethod),useGridInitializeState(rowSelectionStateInitializer,privateApiRef,props),useGridInitializeState(columnsStateInitializer,privateApiRef,props),useGridInitializeState(rowsStateInitializer,privateApiRef,props),useGridInitializeState(editingStateInitializer,privateApiRef,props),useGridInitializeState(focusStateInitializer,privateApiRef,props),useGridInitializeState(sortingStateInitializer,privateApiRef,props),useGridInitializeState(preferencePanelStateInitializer,privateApiRef,props),useGridInitializeState(filterStateInitializer,privateApiRef,props),useGridInitializeState(densityStateInitializer,privateApiRef,props),useGridInitializeState(paginationStateInitializer,privateApiRef,props),useGridInitializeState(rowsMetaStateInitializer,privateApiRef,props),useGridInitializeState(columnMenuStateInitializer,privateApiRef,props),useGridInitializeState(columnGroupsStateInitializer,privateApiRef,props),useGridKeyboardNavigation(privateApiRef,props),((apiRef,props)=>{const logger=useGridLogger(apiRef,"useGridSelection"),runIfRowSelectionIsEnabled=callback=>(...args)=>{props.rowSelection&&callback(...args)},propRowSelectionModel=react.useMemo((()=>getSelectionModelPropValue(props.rowSelectionModel,gridRowSelectionStateSelector(apiRef.current.state))),[apiRef,props.rowSelectionModel]),lastRowToggled=react.useRef(null);apiRef.current.registerControlState({stateId:"rowSelection",propModel:propRowSelectionModel,propOnChange:props.onRowSelectionModelChange,stateSelector:gridRowSelectionStateSelector,changeEvent:"rowSelectionChange"});const{checkboxSelection,disableMultipleRowSelection,disableRowSelectionOnClick,pagination,paginationMode,isRowSelectable:propIsRowSelectable}=props,canHaveMultipleSelection=!disableMultipleRowSelection||checkboxSelection,visibleRows=useGridVisibleRows(apiRef,props),expandMouseRowRangeSelection=react.useCallback((id=>{var _lastRowToggled$curre;let endId=id;const startId=null!=(_lastRowToggled$curre=lastRowToggled.current)?_lastRowToggled$curre:id,isSelected=apiRef.current.isRowSelected(id);if(isSelected){const visibleRowIds=gridExpandedSortedRowIdsSelector(apiRef),startIndex=visibleRowIds.findIndex((rowId=>rowId===startId)),endIndex=visibleRowIds.findIndex((rowId=>rowId===endId));if(startIndex===endIndex)return;endId=startIndex>endIndex?visibleRowIds[endIndex+1]:visibleRowIds[endIndex-1]}lastRowToggled.current=id,apiRef.current.selectRowRange({startId,endId},!isSelected)}),[apiRef]),setRowSelectionModel=react.useCallback((model=>{if(props.signature===GridSignature.DataGrid&&!props.checkboxSelection&&Array.isArray(model)&&model.length>1)throw new Error(["MUI: `rowSelectionModel` can only contain 1 item in DataGrid.","You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection."].join("\n"));gridRowSelectionStateSelector(apiRef.current.state)!==model&&(logger.debug("Setting selection model"),apiRef.current.setState((state=>(0,esm_extends.Z)({},state,{rowSelection:props.rowSelection?model:[]}))),apiRef.current.forceUpdate())}),[apiRef,logger,props.rowSelection,props.signature,props.checkboxSelection]),isRowSelected=react.useCallback((id=>gridRowSelectionStateSelector(apiRef.current.state).includes(id)),[apiRef]),isRowSelectable=react.useCallback((id=>{if(propIsRowSelectable&&!propIsRowSelectable(apiRef.current.getRowParams(id)))return!1;const rowNode=apiRef.current.getRowNode(id);return"footer"!==(null==rowNode?void 0:rowNode.type)&&"pinnedRow"!==(null==rowNode?void 0:rowNode.type)}),[apiRef,propIsRowSelectable]),getSelectedRows=react.useCallback((()=>selectedGridRowsSelector(apiRef)),[apiRef]),selectRow=react.useCallback(((id,isSelected=!0,resetSelection=!1)=>{if(apiRef.current.isRowSelectable(id))if(lastRowToggled.current=id,resetSelection)logger.debug(`Setting selection for row ${id}`),apiRef.current.setRowSelectionModel(isSelected?[id]:[]);else{logger.debug(`Toggling selection for row ${id}`);const newSelection=gridRowSelectionStateSelector(apiRef.current.state).filter((el=>el!==id));isSelected&&newSelection.push(id),(newSelection.length<2||canHaveMultipleSelection)&&apiRef.current.setRowSelectionModel(newSelection)}}),[apiRef,logger,canHaveMultipleSelection]),selectRows=react.useCallback(((ids,isSelected=!0,resetSelection=!1)=>{logger.debug("Setting selection for several rows");const selectableIds=ids.filter((id=>apiRef.current.isRowSelectable(id)));let newSelection;if(resetSelection)newSelection=isSelected?selectableIds:[];else{const selectionLookup=(0,esm_extends.Z)({},selectedIdsLookupSelector(apiRef));selectableIds.forEach((id=>{isSelected?selectionLookup[id]=id:delete selectionLookup[id]})),newSelection=Object.values(selectionLookup)}(newSelection.length<2||canHaveMultipleSelection)&&apiRef.current.setRowSelectionModel(newSelection)}),[apiRef,logger,canHaveMultipleSelection]),selectRowRange=react.useCallback((({startId,endId},isSelected=!0,resetSelection=!1)=>{if(!apiRef.current.getRow(startId)||!apiRef.current.getRow(endId))return;logger.debug(`Expanding selection from row ${startId} to row ${endId}`);const allPagesRowIds=gridExpandedSortedRowIdsSelector(apiRef),startIndex=allPagesRowIds.indexOf(startId),endIndex=allPagesRowIds.indexOf(endId),[start,end]=startIndex>endIndex?[endIndex,startIndex]:[startIndex,endIndex],rowsBetweenStartAndEnd=allPagesRowIds.slice(start,end+1);apiRef.current.selectRows(rowsBetweenStartAndEnd,isSelected,resetSelection)}),[apiRef,logger]),selectionPrivateApi={selectRows,selectRowRange};useGridApiMethod(apiRef,{selectRow,setRowSelectionModel,getSelectedRows,isRowSelected,isRowSelectable},"public"),useGridApiMethod(apiRef,selectionPrivateApi,props.signature===GridSignature.DataGrid?"private":"public");const removeOutdatedSelection=react.useCallback((()=>{if(props.keepNonExistentRowsSelected)return;const currentSelection=gridRowSelectionStateSelector(apiRef.current.state),rowsLookup=gridRowsLookupSelector(apiRef),selectionLookup=(0,esm_extends.Z)({},selectedIdsLookupSelector(apiRef));let hasChanged=!1;currentSelection.forEach((id=>{rowsLookup[id]||(delete selectionLookup[id],hasChanged=!0)})),hasChanged&&apiRef.current.setRowSelectionModel(Object.values(selectionLookup))}),[apiRef,props.keepNonExistentRowsSelected]),handleSingleRowSelection=react.useCallback(((id,event)=>{const hasCtrlKey=event.metaKey||event.ctrlKey,isMultipleSelectionDisabled=!checkboxSelection&&!hasCtrlKey&&!(event=>!!event.key)(event),resetSelection=!canHaveMultipleSelection||isMultipleSelectionDisabled,isSelected=apiRef.current.isRowSelected(id);resetSelection?apiRef.current.selectRow(id,!!isMultipleSelectionDisabled||!isSelected,!0):apiRef.current.selectRow(id,!isSelected,!1)}),[apiRef,canHaveMultipleSelection,checkboxSelection]),handleRowClick=react.useCallback(((params,event)=>{var _closest;if(disableRowSelectionOnClick)return;const field=null==(_closest=event.target.closest(`.${gridClasses_gridClasses.cell}`))?void 0:_closest.getAttribute("data-field");field!==GRID_CHECKBOX_SELECTION_COL_DEF.field&&"__detail_panel_toggle__"!==field&&(field&&"actions"===apiRef.current.getColumn(field).type||"pinnedRow"!==apiRef.current.getRowNode(params.id).type&&(event.shiftKey&&(canHaveMultipleSelection||checkboxSelection)?expandMouseRowRangeSelection(params.id):handleSingleRowSelection(params.id,event)))}),[disableRowSelectionOnClick,canHaveMultipleSelection,checkboxSelection,apiRef,expandMouseRowRangeSelection,handleSingleRowSelection]),preventSelectionOnShift=react.useCallback(((params,event)=>{var _window$getSelection;canHaveMultipleSelection&&event.shiftKey&&(null==(_window$getSelection=window.getSelection())||_window$getSelection.removeAllRanges())}),[canHaveMultipleSelection]),handleRowSelectionCheckboxChange=react.useCallback(((params,event)=>{event.nativeEvent.shiftKey?expandMouseRowRangeSelection(params.id):apiRef.current.selectRow(params.id,params.value)}),[apiRef,expandMouseRowRangeSelection]),handleHeaderSelectionCheckboxChange=react.useCallback((params=>{const rowsToBeSelected=props.checkboxSelectionVisibleOnly&&props.pagination?gridPaginatedVisibleSortedGridRowIdsSelector(apiRef):gridExpandedSortedRowIdsSelector(apiRef);apiRef.current.selectRows(rowsToBeSelected,params.value)}),[apiRef,props.checkboxSelectionVisibleOnly,props.pagination]),handleCellKeyDown=react.useCallback(((params,event)=>{if(apiRef.current.getCellMode(params.id,params.field)!==gridEditRowModel.Vl.Edit&&event.currentTarget.contains(event.target)){if(isNavigationKey(event.key)&&event.shiftKey){const focusCell=gridFocusCellSelector(apiRef);if(focusCell&&focusCell.id!==params.id){event.preventDefault();const isNextRowSelected=apiRef.current.isRowSelected(focusCell.id);if(!canHaveMultipleSelection)return void apiRef.current.selectRow(focusCell.id,!isNextRowSelected,!0);const newRowIndex=apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id),previousRowIndex=apiRef.current.getRowIndexRelativeToVisibleRows(params.id);let start,end;newRowIndex>previousRowIndex?isNextRowSelected?(start=previousRowIndex,end=newRowIndex-1):(start=previousRowIndex,end=newRowIndex):isNextRowSelected?(start=newRowIndex+1,end=previousRowIndex):(start=newRowIndex,end=previousRowIndex);const rowsBetweenStartAndEnd=visibleRows.rows.slice(start,end+1).map((row=>row.id));return void apiRef.current.selectRows(rowsBetweenStartAndEnd,!isNextRowSelected)}}if(" "===event.key&&event.shiftKey)return event.preventDefault(),void handleSingleRowSelection(params.id,event);"a"===event.key&&(event.ctrlKey||event.metaKey)&&(event.preventDefault(),selectRows(apiRef.current.getAllRowIds(),!0))}}),[apiRef,handleSingleRowSelection,selectRows,visibleRows.rows,canHaveMultipleSelection]);useGridApiEventHandler(apiRef,"sortedRowsSet",runIfRowSelectionIsEnabled(removeOutdatedSelection)),useGridApiEventHandler(apiRef,"rowClick",runIfRowSelectionIsEnabled(handleRowClick)),useGridApiEventHandler(apiRef,"rowSelectionCheckboxChange",runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange)),useGridApiEventHandler(apiRef,"headerSelectionCheckboxChange",handleHeaderSelectionCheckboxChange),useGridApiEventHandler(apiRef,"cellMouseDown",runIfRowSelectionIsEnabled(preventSelectionOnShift)),useGridApiEventHandler(apiRef,"cellKeyDown",runIfRowSelectionIsEnabled(handleCellKeyDown)),react.useEffect((()=>{void 0!==propRowSelectionModel&&apiRef.current.setRowSelectionModel(propRowSelectionModel)}),[apiRef,propRowSelectionModel,props.rowSelection]),react.useEffect((()=>{props.rowSelection||apiRef.current.setRowSelectionModel([])}),[apiRef,props.rowSelection]);const isStateControlled=null!=propRowSelectionModel;react.useEffect((()=>{if(isStateControlled||!props.rowSelection)return;const currentSelection=gridRowSelectionStateSelector(apiRef.current.state);if(isRowSelectable){const newSelection=currentSelection.filter((id=>isRowSelectable(id)));newSelection.length<currentSelection.length&&apiRef.current.setRowSelectionModel(newSelection)}}),[apiRef,isRowSelectable,isStateControlled,props.rowSelection]),react.useEffect((()=>{if(!props.rowSelection)return;const currentSelection=gridRowSelectionStateSelector(apiRef.current.state);if(!canHaveMultipleSelection&&currentSelection.length>1){const{rows:currentPageRows}=getVisibleRows(apiRef,{pagination,paginationMode}),currentPageRowsLookup=currentPageRows.reduce(((acc,{id})=>(acc[id]=!0,acc)),{}),firstSelectableRow=currentSelection.find((id=>{let isSelectable=!0;return isRowSelectable&&(isSelectable=isRowSelectable(id)),isSelectable&&currentPageRowsLookup[id]}));apiRef.current.setRowSelectionModel(void 0!==firstSelectableRow?[firstSelectableRow]:[])}}),[apiRef,canHaveMultipleSelection,checkboxSelection,disableMultipleRowSelection,isRowSelectable,pagination,paginationMode,props.rowSelection])})(privateApiRef,props),function useGridColumns(apiRef,props){var _props$initialState4,_props$slotProps2;const logger=useGridLogger(apiRef,"useGridColumns"),columnTypes=defaultColumnTypes,previousColumnsProp=react.useRef(props.columns),previousColumnTypesProp=react.useRef(columnTypes);apiRef.current.registerControlState({stateId:"visibleColumns",propModel:props.columnVisibilityModel,propOnChange:props.onColumnVisibilityModelChange,stateSelector:gridColumnVisibilityModelSelector,changeEvent:"columnVisibilityModelChange"});const setGridColumnsState=react.useCallback((columnsState=>{logger.debug("Updating columns state."),apiRef.current.setState(mergeColumnsState(columnsState)),apiRef.current.forceUpdate(),apiRef.current.publishEvent("columnsChange",columnsState.orderedFields)}),[logger,apiRef]),getColumn=react.useCallback((field=>gridColumnLookupSelector(apiRef)[field]),[apiRef]),getAllColumns=react.useCallback((()=>gridColumnDefinitionsSelector(apiRef)),[apiRef]),getVisibleColumns=react.useCallback((()=>gridVisibleColumnDefinitionsSelector(apiRef)),[apiRef]),getColumnIndex=react.useCallback(((field,useVisibleColumns=!0)=>(useVisibleColumns?gridVisibleColumnDefinitionsSelector(apiRef):gridColumnDefinitionsSelector(apiRef)).findIndex((col=>col.field===field))),[apiRef]),getColumnPosition=react.useCallback((field=>{const index=getColumnIndex(field);return gridColumnPositionsSelector(apiRef)[index]}),[apiRef,getColumnIndex]),setColumnVisibilityModel=react.useCallback((model=>{gridColumnVisibilityModelSelector(apiRef)!==model&&(apiRef.current.setState((state=>(0,esm_extends.Z)({},state,{columns:createColumnsState({apiRef,columnTypes,columnsToUpsert:[],initialState:void 0,columnVisibilityModel:model,keepOnlyColumnsToUpsert:!1})}))),apiRef.current.forceUpdate())}),[apiRef,columnTypes]),updateColumns=react.useCallback((columns=>{const columnsState=createColumnsState({apiRef,columnTypes,columnsToUpsert:columns,initialState:void 0,keepOnlyColumnsToUpsert:!1});setGridColumnsState(columnsState)}),[apiRef,setGridColumnsState,columnTypes]),setColumnVisibility=react.useCallback(((field,isVisible)=>{var _columnVisibilityMode;const columnVisibilityModel=gridColumnVisibilityModelSelector(apiRef);if(isVisible!==(null==(_columnVisibilityMode=columnVisibilityModel[field])||_columnVisibilityMode)){const newModel=(0,esm_extends.Z)({},columnVisibilityModel,{[field]:isVisible});apiRef.current.setColumnVisibilityModel(newModel)}}),[apiRef]),getColumnIndexRelativeToVisibleColumns=react.useCallback((field=>gridColumnFieldsSelector(apiRef).findIndex((col=>col===field))),[apiRef]),setColumnIndex=react.useCallback(((field,targetIndexPosition)=>{const allColumns=gridColumnFieldsSelector(apiRef),oldIndexPosition=getColumnIndexRelativeToVisibleColumns(field);if(oldIndexPosition===targetIndexPosition)return;logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);const updatedColumns=[...allColumns],fieldRemoved=updatedColumns.splice(oldIndexPosition,1)[0];updatedColumns.splice(targetIndexPosition,0,fieldRemoved),setGridColumnsState((0,esm_extends.Z)({},gridColumnsStateSelector(apiRef.current.state),{orderedFields:updatedColumns}));const params={column:apiRef.current.getColumn(field),targetIndex:apiRef.current.getColumnIndexRelativeToVisibleColumns(field),oldIndex:oldIndexPosition};apiRef.current.publishEvent("columnIndexChange",params)}),[apiRef,logger,setGridColumnsState,getColumnIndexRelativeToVisibleColumns]),setColumnWidth=react.useCallback(((field,width)=>{logger.debug(`Updating column ${field} width to ${width}`);const column=apiRef.current.getColumn(field),newColumn=(0,esm_extends.Z)({},column,{width});apiRef.current.updateColumns([newColumn]),apiRef.current.publishEvent("columnWidthChange",{element:apiRef.current.getColumnHeaderElement(field),colDef:newColumn,width})}),[apiRef,logger]),columnReorderApi={setColumnIndex};useGridApiMethod(apiRef,{getColumn,getAllColumns,getColumnIndex,getColumnPosition,getVisibleColumns,getColumnIndexRelativeToVisibleColumns,updateColumns,setColumnVisibilityModel,setColumnVisibility,setColumnWidth},"public"),useGridApiMethod(apiRef,columnReorderApi,props.signature===GridSignature.DataGrid?"private":"public");const stateExportPreProcessing=react.useCallback(((prevState,context)=>{var _props$initialState$c,_props$initialState3,_props$initialState3$;const columnsStateToExport={},columnVisibilityModelToExport=gridColumnVisibilityModelSelector(apiRef);(!context.exportOnlyDirtyModels||null!=props.columnVisibilityModel||Object.keys(null!=(_props$initialState$c=null==(_props$initialState3=props.initialState)||null==(_props$initialState3$=_props$initialState3.columns)?void 0:_props$initialState3$.columnVisibilityModel)?_props$initialState$c:{}).length>0||Object.keys(columnVisibilityModelToExport).length>0)&&(columnsStateToExport.columnVisibilityModel=columnVisibilityModelToExport),columnsStateToExport.orderedFields=gridColumnFieldsSelector(apiRef);const columns=gridColumnDefinitionsSelector(apiRef),dimensions={};return columns.forEach((colDef=>{if(colDef.hasBeenResized){const colDefDimensions={};COLUMNS_DIMENSION_PROPERTIES.forEach((propertyName=>{let propertyValue=colDef[propertyName];propertyValue===1/0&&(propertyValue=-1),colDefDimensions[propertyName]=propertyValue})),dimensions[colDef.field]=colDefDimensions}})),Object.keys(dimensions).length>0&&(columnsStateToExport.dimensions=dimensions),(0,esm_extends.Z)({},prevState,{columns:columnsStateToExport})}),[apiRef,props.columnVisibilityModel,null==(_props$initialState4=props.initialState)?void 0:_props$initialState4.columns]),stateRestorePreProcessing=react.useCallback(((params,context)=>{var _context$stateToResto;const columnVisibilityModelToImport=null==(_context$stateToResto=context.stateToRestore.columns)?void 0:_context$stateToResto.columnVisibilityModel,initialState=context.stateToRestore.columns;if(null==columnVisibilityModelToImport&&null==initialState)return params;const columnsState=createColumnsState({apiRef,columnTypes,columnsToUpsert:[],initialState,columnVisibilityModel:columnVisibilityModelToImport,keepOnlyColumnsToUpsert:!1});return apiRef.current.setState(mergeColumnsState(columnsState)),null!=initialState&&apiRef.current.publishEvent("columnsChange",columnsState.orderedFields),params}),[apiRef,columnTypes]),preferencePanelPreProcessing=react.useCallback(((initialValue,value)=>{if(value===GridPreferencePanelsValue.columns){var _props$slotProps;const ColumnsPanel=props.slots.columnsPanel;return(0,jsx_runtime.jsx)(ColumnsPanel,(0,esm_extends.Z)({},null==(_props$slotProps=props.slotProps)?void 0:_props$slotProps.columnsPanel))}return initialValue}),[props.slots.columnsPanel,null==(_props$slotProps2=props.slotProps)?void 0:_props$slotProps2.columnsPanel]),addColumnMenuItems=react.useCallback((columnMenuItems=>props.disableColumnSelector?columnMenuItems:[...columnMenuItems,"columnMenuColumnsItem"]),[props.disableColumnSelector]);useGridRegisterPipeProcessor(apiRef,"columnMenu",addColumnMenuItems),useGridRegisterPipeProcessor(apiRef,"exportState",stateExportPreProcessing),useGridRegisterPipeProcessor(apiRef,"restoreState",stateRestorePreProcessing),useGridRegisterPipeProcessor(apiRef,"preferencePanel",preferencePanelPreProcessing);const prevInnerWidth=react.useRef(null);useGridApiEventHandler(apiRef,"viewportInnerSizeChange",(viewportInnerSize=>{prevInnerWidth.current!==viewportInnerSize.width&&(prevInnerWidth.current=viewportInnerSize.width,setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state),viewportInnerSize.width)))}));const hydrateColumns=react.useCallback((()=>{logger.info("Columns pipe processing have changed, regenerating the columns");const columnsState=createColumnsState({apiRef,columnTypes,columnsToUpsert:[],initialState:void 0,keepOnlyColumnsToUpsert:!1});setGridColumnsState(columnsState)}),[apiRef,logger,setGridColumnsState,columnTypes]);useGridRegisterPipeApplier(apiRef,"hydrateColumns",hydrateColumns);const isFirstRender=react.useRef(!0);react.useEffect((()=>{if(isFirstRender.current)return void(isFirstRender.current=!1);if(logger.info(`GridColumns have changed, new length ${props.columns.length}`),previousColumnsProp.current===props.columns&&previousColumnTypesProp.current===columnTypes)return;const columnsState=createColumnsState({apiRef,columnTypes,initialState:void 0,columnsToUpsert:props.columns,keepOnlyColumnsToUpsert:!0});previousColumnsProp.current=props.columns,previousColumnTypesProp.current=columnTypes,setGridColumnsState(columnsState)}),[logger,apiRef,setGridColumnsState,props.columns,columnTypes]),react.useEffect((()=>{void 0!==props.columnVisibilityModel&&apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel)}),[apiRef,logger,props.columnVisibilityModel])}(privateApiRef,props),useGridRows(privateApiRef,props),useGridParamsApi(privateApiRef),(apiRef=>{const lookup=react.useRef({}),setCellColSpanInfo=react.useCallback(((rowId,columnIndex,cellColSpanInfo)=>{const sizes=lookup.current;sizes[rowId]||(sizes[rowId]={}),sizes[rowId][columnIndex]=cellColSpanInfo}),[]),getCellColSpanInfo=react.useCallback(((rowId,columnIndex)=>{var _lookup$current$rowId;return null==(_lookup$current$rowId=lookup.current[rowId])?void 0:_lookup$current$rowId[columnIndex]}),[]),calculateCellColSpan=react.useCallback((params=>{const{columnIndex,rowId,minFirstColumnIndex,maxLastColumnIndex,columns}=params,columnsLength=columns.length,column=columns[columnIndex],colSpan="function"==typeof column.colSpan?column.colSpan(apiRef.current.getCellParams(rowId,column.field)):column.colSpan;if(!colSpan||1===colSpan)return setCellColSpanInfo(rowId,columnIndex,{spannedByColSpan:!1,cellProps:{colSpan:1,width:column.computedWidth}}),{colSpan:1};let width=column.computedWidth;for(let j=1;j<colSpan;j+=1){const nextColumnIndex=columnIndex+j;nextColumnIndex>=minFirstColumnIndex&&nextColumnIndex<maxLastColumnIndex&&(width+=columns[nextColumnIndex].computedWidth,setCellColSpanInfo(rowId,columnIndex+j,{spannedByColSpan:!0,rightVisibleCellIndex:Math.min(columnIndex+colSpan,columnsLength-1),leftVisibleCellIndex:columnIndex})),setCellColSpanInfo(rowId,columnIndex,{spannedByColSpan:!1,cellProps:{colSpan,width}})}return{colSpan}}),[apiRef,setCellColSpanInfo]),columnSpanningPrivateApi={calculateColSpan:react.useCallback((({rowId,minFirstColumn,maxLastColumn,columns})=>{for(let i=minFirstColumn;i<maxLastColumn;i+=1){const cellProps=calculateCellColSpan({columnIndex:i,rowId,minFirstColumnIndex:minFirstColumn,maxLastColumnIndex:maxLastColumn,columns});cellProps.colSpan>1&&(i+=cellProps.colSpan-1)}}),[calculateCellColSpan])};useGridApiMethod(apiRef,{unstable_getCellColSpanInfo:getCellColSpanInfo},"public"),useGridApiMethod(apiRef,columnSpanningPrivateApi,"private");const handleColumnReorderChange=react.useCallback((()=>{lookup.current={}}),[]);useGridApiEventHandler(apiRef,"columnOrderChange",handleColumnReorderChange)})(privateApiRef),((apiRef,props)=>{var _props$experimentalFe3;const getColumnGroupPath=react.useCallback((field=>{var _unwrappedGroupingMod3;return null!=(_unwrappedGroupingMod3=gridColumnGroupsUnwrappedModelSelector(apiRef)[field])?_unwrappedGroupingMod3:[]}),[apiRef]),getAllGroupDetails=react.useCallback((()=>gridColumnGroupsLookupSelector(apiRef)),[apiRef]);useGridApiMethod(apiRef,{unstable_getColumnGroupPath:getColumnGroupPath,unstable_getAllGroupDetails:getAllGroupDetails},"public");const handleColumnIndexChange=react.useCallback((()=>{var _props$columnGrouping3;const unwrappedGroupingModel=unwrapGroupingColumnModel(null!=(_props$columnGrouping3=props.columnGroupingModel)?_props$columnGrouping3:[]);apiRef.current.setState((state=>{var _state$columns$ordere,_state$columns;const orderedFields=null!=(_state$columns$ordere=null==(_state$columns=state.columns)?void 0:_state$columns.orderedFields)?_state$columns$ordere:[],columnGroupsHeaderStructure=getColumnGroupsHeaderStructure(orderedFields,unwrappedGroupingModel);return(0,esm_extends.Z)({},state,{columnGrouping:(0,esm_extends.Z)({},state.columnGrouping,{headerStructure:columnGroupsHeaderStructure})})}))}),[apiRef,props.columnGroupingModel]);useGridApiEventHandler(apiRef,"columnIndexChange",handleColumnIndexChange);const columnFields=useGridSelector(apiRef,gridColumnFieldsSelector),visibleColumnFields=useGridSelector(apiRef,gridVisibleColumnFieldsSelector);react.useEffect((()=>{var _props$experimentalFe2,_props$columnGrouping4,_props$columnGrouping5;if(null==(_props$experimentalFe2=props.experimentalFeatures)||!_props$experimentalFe2.columnGrouping)return;const groupLookup=createGroupLookup(null!=(_props$columnGrouping4=props.columnGroupingModel)?_props$columnGrouping4:[]),unwrappedGroupingModel=unwrapGroupingColumnModel(null!=(_props$columnGrouping5=props.columnGroupingModel)?_props$columnGrouping5:[]),columnGroupsHeaderStructure=getColumnGroupsHeaderStructure(columnFields,unwrappedGroupingModel),maxDepth=0===visibleColumnFields.length?0:Math.max(...visibleColumnFields.map((field=>{var _unwrappedGroupingMod4,_unwrappedGroupingMod5;return null!=(_unwrappedGroupingMod4=null==(_unwrappedGroupingMod5=unwrappedGroupingModel[field])?void 0:_unwrappedGroupingMod5.length)?_unwrappedGroupingMod4:0})));apiRef.current.setState((state=>(0,esm_extends.Z)({},state,{columnGrouping:{lookup:groupLookup,unwrappedGroupingModel,headerStructure:columnGroupsHeaderStructure,maxDepth}})))}),[apiRef,columnFields,visibleColumnFields,props.columnGroupingModel,null==(_props$experimentalFe3=props.experimentalFeatures)?void 0:_props$experimentalFe3.columnGrouping])})(privateApiRef,props),useGridEditing(privateApiRef,props),((apiRef,props)=>{const logger=useGridLogger(apiRef,"useGridFocus"),lastClickedCell=react.useRef(null),publishCellFocusOut=react.useCallback(((cell,event)=>{cell&&apiRef.current.getRow(cell.id)&&apiRef.current.publishEvent("cellFocusOut",apiRef.current.getCellParams(cell.id,cell.field),event)}),[apiRef]),setCellFocus=react.useCallback(((id,field)=>{const focusedCell=gridFocusCellSelector(apiRef);(null==focusedCell?void 0:focusedCell.id)===id&&(null==focusedCell?void 0:focusedCell.field)===field||(apiRef.current.setState((state=>(logger.debug(`Focusing on cell with id=${id} and field=${field}`),(0,esm_extends.Z)({},state,{tabIndex:{cell:{id,field},columnHeader:null,columnGroupHeader:null},focus:{cell:{id,field},columnHeader:null,columnGroupHeader:null}})))),apiRef.current.forceUpdate(),apiRef.current.getRow(id)&&(focusedCell&&publishCellFocusOut(focusedCell,{}),apiRef.current.publishEvent("cellFocusIn",apiRef.current.getCellParams(id,field))))}),[apiRef,logger,publishCellFocusOut]),setColumnHeaderFocus=react.useCallback(((field,event={})=>{const cell=gridFocusCellSelector(apiRef);publishCellFocusOut(cell,event),apiRef.current.setState((state=>(logger.debug(`Focusing on column header with colIndex=${field}`),(0,esm_extends.Z)({},state,{tabIndex:{columnHeader:{field},cell:null,columnGroupHeader:null},focus:{columnHeader:{field},cell:null,columnGroupHeader:null}})))),apiRef.current.forceUpdate()}),[apiRef,logger,publishCellFocusOut]),setColumnGroupHeaderFocus=react.useCallback(((field,depth,event={})=>{const cell=gridFocusCellSelector(apiRef);cell&&apiRef.current.publishEvent("cellFocusOut",apiRef.current.getCellParams(cell.id,cell.field),event),apiRef.current.setState((state=>(0,esm_extends.Z)({},state,{tabIndex:{columnGroupHeader:{field,depth},columnHeader:null,cell:null},focus:{columnGroupHeader:{field,depth},columnHeader:null,cell:null}}))),apiRef.current.forceUpdate()}),[apiRef]),getColumnGroupHeaderFocus=react.useCallback((()=>unstable_gridFocusColumnGroupHeaderSelector(apiRef)),[apiRef]),moveFocusToRelativeCell=react.useCallback(((id,field,direction)=>{let columnIndexToFocus=apiRef.current.getColumnIndex(field),rowIndexToFocus=apiRef.current.getRowIndexRelativeToVisibleRows(id);const visibleColumns=gridVisibleColumnDefinitionsSelector(apiRef);"right"===direction?columnIndexToFocus+=1:"left"===direction?columnIndexToFocus-=1:rowIndexToFocus+=1;const currentPage=getVisibleRows(apiRef,{pagination:props.pagination,paginationMode:props.paginationMode});columnIndexToFocus>=visibleColumns.length?(rowIndexToFocus+=1,rowIndexToFocus<currentPage.rows.length&&(columnIndexToFocus=0)):columnIndexToFocus<0&&(rowIndexToFocus-=1,rowIndexToFocus>=0&&(columnIndexToFocus=visibleColumns.length-1)),rowIndexToFocus=clamp(rowIndexToFocus,0,currentPage.rows.length-1);const rowToFocus=currentPage.rows[rowIndexToFocus],colSpanInfo=apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id,columnIndexToFocus);colSpanInfo&&colSpanInfo.spannedByColSpan&&("left"===direction||"below"===direction?columnIndexToFocus=colSpanInfo.leftVisibleCellIndex:"right"===direction&&(columnIndexToFocus=colSpanInfo.rightVisibleCellIndex)),columnIndexToFocus=clamp(columnIndexToFocus,0,visibleColumns.length-1);const columnToFocus=visibleColumns[columnIndexToFocus];apiRef.current.setCellFocus(rowToFocus.id,columnToFocus.field)}),[apiRef,props.pagination,props.paginationMode]),handleCellDoubleClick=react.useCallback((({id,field})=>{apiRef.current.setCellFocus(id,field)}),[apiRef]),handleCellKeyDown=react.useCallback(((params,event)=>{"Enter"===event.key||"Tab"===event.key||"Shift"===event.key||isNavigationKey(event.key)||apiRef.current.setCellFocus(params.id,params.field)}),[apiRef]),handleColumnHeaderFocus=react.useCallback((({field},event)=>{event.target===event.currentTarget&&apiRef.current.setColumnHeaderFocus(field,event)}),[apiRef]),focussedColumnGroup=unstable_gridFocusColumnGroupHeaderSelector(apiRef),handleColumnGroupHeaderFocus=react.useCallback((({fields,depth},event)=>{event.target===event.currentTarget&&(null!==focussedColumnGroup&&focussedColumnGroup.depth===depth&&fields.includes(focussedColumnGroup.field)||apiRef.current.setColumnGroupHeaderFocus(fields[0],depth,event))}),[apiRef,focussedColumnGroup]),handleBlur=react.useCallback((()=>{logger.debug("Clearing focus"),apiRef.current.setState((state=>(0,esm_extends.Z)({},state,{focus:{cell:null,columnHeader:null,columnGroupHeader:null}})))}),[logger,apiRef]),handleCellMouseDown=react.useCallback((params=>{lastClickedCell.current=params}),[]),handleDocumentClick=react.useCallback((event=>{const cellParams=lastClickedCell.current;lastClickedCell.current=null;const focusedCell=gridFocusCellSelector(apiRef);if(!apiRef.current.unstable_applyPipeProcessors("canUpdateFocus",!0,{event,cell:cellParams}))return;if(!focusedCell)return void(cellParams&&apiRef.current.setCellFocus(cellParams.id,cellParams.field));if((null==cellParams?void 0:cellParams.id)===focusedCell.id&&(null==cellParams?void 0:cellParams.field)===focusedCell.field)return;const cellElement=apiRef.current.getCellElement(focusedCell.id,focusedCell.field);null!=cellElement&&cellElement.contains(event.target)||(cellParams?apiRef.current.setCellFocus(cellParams.id,cellParams.field):(apiRef.current.setState((state=>(0,esm_extends.Z)({},state,{focus:{cell:null,columnHeader:null,columnGroupHeader:null}}))),apiRef.current.forceUpdate(),publishCellFocusOut(focusedCell,event)))}),[apiRef,publishCellFocusOut]),handleCellModeChange=react.useCallback((params=>{if("view"===params.cellMode)return;const cell=gridFocusCellSelector(apiRef);(null==cell?void 0:cell.id)===params.id&&(null==cell?void 0:cell.field)===params.field||apiRef.current.setCellFocus(params.id,params.field)}),[apiRef]),handleRowSet=react.useCallback((()=>{const cell=gridFocusCellSelector(apiRef);cell&&!apiRef.current.getRow(cell.id)&&apiRef.current.setState((state=>(0,esm_extends.Z)({},state,{focus:{cell:null,columnHeader:null,columnGroupHeader:null}})))}),[apiRef]),focusPrivateApi={moveFocusToRelativeCell,setColumnGroupHeaderFocus,getColumnGroupHeaderFocus};useGridApiMethod(apiRef,{setCellFocus,setColumnHeaderFocus},"public"),useGridApiMethod(apiRef,focusPrivateApi,"private"),react.useEffect((()=>{const doc=(0,ownerDocument.Z)(apiRef.current.rootElementRef.current);return doc.addEventListener("click",handleDocumentClick),()=>{doc.removeEventListener("click",handleDocumentClick)}}),[apiRef,handleDocumentClick]),useGridApiEventHandler(apiRef,"columnHeaderBlur",handleBlur),useGridApiEventHandler(apiRef,"cellDoubleClick",handleCellDoubleClick),useGridApiEventHandler(apiRef,"cellMouseDown",handleCellMouseDown),useGridApiEventHandler(apiRef,"cellKeyDown",handleCellKeyDown),useGridApiEventHandler(apiRef,"cellModeChange",handleCellModeChange),useGridApiEventHandler(apiRef,"columnHeaderFocus",handleColumnHeaderFocus),useGridApiEventHandler(apiRef,"columnGroupHeaderFocus",handleColumnGroupHeaderFocus),useGridApiEventHandler(apiRef,"rowsSet",handleRowSet)})(privateApiRef,props),((apiRef,props)=>{var _props$initialState3;const logger=useGridLogger(apiRef,"useGridPreferencesPanel"),hideTimeout=react.useRef(),immediateTimeout=react.useRef(),hidePreferences=react.useCallback((()=>{logger.debug("Hiding Preferences Panel");const preferencePanelState=gridPreferencePanelStateSelector(apiRef.current.state);preferencePanelState.openedPanelValue&&apiRef.current.publishEvent("preferencePanelClose",{openedPanelValue:preferencePanelState.openedPanelValue}),apiRef.current.setState((state=>(0,esm_extends.Z)({},state,{preferencePanel:{open:!1}}))),apiRef.current.forceUpdate()}),[apiRef,logger]),doNotHidePanel=react.useCallback((()=>{immediateTimeout.current=setTimeout((()=>clearTimeout(hideTimeout.current)),0)}),[]),hidePreferencesDelayed=react.useCallback((()=>{hideTimeout.current=setTimeout(hidePreferences,100)}),[hidePreferences]),showPreferences=react.useCallback((newValue=>{logger.debug("Opening Preferences Panel"),doNotHidePanel(),apiRef.current.setState((state=>(0,esm_extends.Z)({},state,{preferencePanel:(0,esm_extends.Z)({},state.preferencePanel,{open:!0,openedPanelValue:newValue})}))),apiRef.current.publishEvent("preferencePanelOpen",{openedPanelValue:newValue}),apiRef.current.forceUpdate()}),[logger,doNotHidePanel,apiRef]);useGridApiMethod(apiRef,{showPreferences,hidePreferences:hidePreferencesDelayed},"public");const stateExportPreProcessing=react.useCallback(((prevState,context)=>{var _props$initialState2;const preferencePanelToExport=gridPreferencePanelStateSelector(apiRef.current.state);return!context.exportOnlyDirtyModels||null!=(null==(_props$initialState2=props.initialState)?void 0:_props$initialState2.preferencePanel)||preferencePanelToExport.open?(0,esm_extends.Z)({},prevState,{preferencePanel:preferencePanelToExport}):prevState}),[apiRef,null==(_props$initialState3=props.initialState)?void 0:_props$initialState3.preferencePanel]),stateRestorePreProcessing=react.useCallback(((params,context)=>{const preferencePanel=context.stateToRestore.preferencePanel;return null!=preferencePanel&&apiRef.current.setState((state=>(0,esm_extends.Z)({},state,{preferencePanel}))),params}),[apiRef]);useGridRegisterPipeProcessor(apiRef,"exportState",stateExportPreProcessing),useGridRegisterPipeProcessor(apiRef,"restoreState",stateRestorePreProcessing),react.useEffect((()=>()=>{clearTimeout(hideTimeout.current),clearTimeout(immediateTimeout.current)}),[])})(privateApiRef,props),((apiRef,props)=>{var _props$initialState3,_props$initialState3$,_props$slotProps2;const logger=useGridLogger(apiRef,"useGridFilter");apiRef.current.registerControlState({stateId:"filter",propModel:props.filterModel,propOnChange:props.onFilterModelChange,stateSelector:gridFilterModelSelector,changeEvent:"filterModelChange"});const updateFilteredRows=react.useCallback((()=>{apiRef.current.setState((state=>{const filterModel=gridFilterModelSelector(state,apiRef.current.instanceId),isRowMatchingFilters="client"===props.filterMode?buildAggregatedFilterApplier(filterModel,apiRef):null,filteringResult=apiRef.current.applyStrategyProcessor("filtering",{isRowMatchingFilters,filterModel:null!=filterModel?filterModel:getDefaultGridFilterModel()});return(0,esm_extends.Z)({},state,{filter:(0,esm_extends.Z)({},state.filter,filteringResult)})})),apiRef.current.publishEvent("filteredRowsSet")}),[props.filterMode,apiRef]),addColumnMenuItem=react.useCallback(((columnMenuItems,colDef)=>null==colDef||!1===colDef.filterable||props.disableColumnFilter?columnMenuItems:[...columnMenuItems,"columnMenuFilterItem"]),[props.disableColumnFilter]),applyFilters=react.useCallback((()=>{updateFilteredRows(),apiRef.current.forceUpdate()}),[apiRef,updateFilteredRows]),upsertFilterItem=react.useCallback((item=>{const filterModel=gridFilterModelSelector(apiRef),items=[...filterModel.items],itemIndex=items.findIndex((filterItem=>filterItem.id===item.id));-1===itemIndex?items.push(item):items[itemIndex]=item,apiRef.current.setFilterModel((0,esm_extends.Z)({},filterModel,{items}),"upsertFilterItem")}),[apiRef]),upsertFilterItems=react.useCallback((items=>{const filterModel=gridFilterModelSelector(apiRef),existingItems=[...filterModel.items];items.forEach((item=>{const itemIndex=items.findIndex((filterItem=>filterItem.id===item.id));-1===itemIndex?existingItems.push(item):existingItems[itemIndex]=item})),apiRef.current.setFilterModel((0,esm_extends.Z)({},filterModel,{items}),"upsertFilterItems")}),[apiRef]),deleteFilterItem=react.useCallback((itemToDelete=>{const filterModel=gridFilterModelSelector(apiRef),items=filterModel.items.filter((item=>item.id!==itemToDelete.id));items.length!==filterModel.items.length&&apiRef.current.setFilterModel((0,esm_extends.Z)({},filterModel,{items}),"deleteFilterItem")}),[apiRef]),showFilterPanel=react.useCallback((targetColumnField=>{if(logger.debug("Displaying filter panel"),targetColumnField){const filterModel=gridFilterModelSelector(apiRef),filterItemsWithValue=filterModel.items.filter((item=>{var _column$filterOperato;if(void 0!==item.value)return!0;const filterOperator=null==(_column$filterOperato=apiRef.current.getColumn(item.field).filterOperators)?void 0:_column$filterOperato.find((operator=>operator.value===item.operator));return!(void 0===(null==filterOperator?void 0:filterOperator.requiresFilterValue)||(null==filterOperator?void 0:filterOperator.requiresFilterValue))}));let newFilterItems;const filterItemOnTarget=filterItemsWithValue.find((item=>item.field===targetColumnField)),targetColumn=apiRef.current.getColumn(targetColumnField);newFilterItems=filterItemOnTarget?filterItemsWithValue:props.disableMultipleColumnsFiltering?[cleanFilterItem({field:targetColumnField,operator:targetColumn.filterOperators[0].value},apiRef)]:[...filterItemsWithValue,cleanFilterItem({field:targetColumnField,operator:targetColumn.filterOperators[0].value},apiRef)],apiRef.current.setFilterModel((0,esm_extends.Z)({},filterModel,{items:newFilterItems}))}apiRef.current.showPreferences(GridPreferencePanelsValue.filters)}),[apiRef,logger,props.disableMultipleColumnsFiltering]),hideFilterPanel=react.useCallback((()=>{logger.debug("Hiding filter panel"),apiRef.current.hidePreferences()}),[apiRef,logger]),setFilterLogicOperator=react.useCallback((logicOperator=>{const filterModel=gridFilterModelSelector(apiRef);filterModel.logicOperator!==logicOperator&&apiRef.current.setFilterModel((0,esm_extends.Z)({},filterModel,{logicOperator}),"changeLogicOperator")}),[apiRef]),setQuickFilterValues=react.useCallback((values=>{const filterModel=gridFilterModelSelector(apiRef);isDeepEqual(filterModel.quickFilterValues,values)||apiRef.current.setFilterModel((0,esm_extends.Z)({},filterModel,{quickFilterValues:[...values]}))}),[apiRef]),setFilterModel=react.useCallback(((model,reason)=>{gridFilterModelSelector(apiRef)!==model&&(logger.debug("Setting filter model"),apiRef.current.updateControlState("filter",mergeStateWithFilterModel(model,props.disableMultipleColumnsFiltering,apiRef),reason),apiRef.current.unstable_applyFilters())}),[apiRef,logger,props.disableMultipleColumnsFiltering]);useGridApiMethod(apiRef,{setFilterLogicOperator,unstable_applyFilters:applyFilters,deleteFilterItem,upsertFilterItem,upsertFilterItems,setFilterModel,showFilterPanel,hideFilterPanel,setQuickFilterValues},"public");const stateExportPreProcessing=react.useCallback(((prevState,context)=>{var _props$initialState2,_props$initialState2$;const filterModelToExport=gridFilterModelSelector(apiRef);return context.exportOnlyDirtyModels&&null==props.filterModel&&null==(null==(_props$initialState2=props.initialState)||null==(_props$initialState2$=_props$initialState2.filter)?void 0:_props$initialState2$.filterModel)&&isDeepEqual(filterModelToExport,getDefaultGridFilterModel())?prevState:(0,esm_extends.Z)({},prevState,{filter:{filterModel:filterModelToExport}})}),[apiRef,props.filterModel,null==(_props$initialState3=props.initialState)||null==(_props$initialState3$=_props$initialState3.filter)?void 0:_props$initialState3$.filterModel]),stateRestorePreProcessing=react.useCallback(((params,context)=>{var _context$stateToResto;const filterModel=null==(_context$stateToResto=context.stateToRestore.filter)?void 0:_context$stateToResto.filterModel;return null==filterModel?params:(apiRef.current.updateControlState("filter",mergeStateWithFilterModel(filterModel,props.disableMultipleColumnsFiltering,apiRef),"restoreState"),(0,esm_extends.Z)({},params,{callbacks:[...params.callbacks,apiRef.current.unstable_applyFilters]}))}),[apiRef,props.disableMultipleColumnsFiltering]),preferencePanelPreProcessing=react.useCallback(((initialValue,value)=>{if(value===GridPreferencePanelsValue.filters){var _props$slotProps;const FilterPanel=props.slots.filterPanel;return(0,jsx_runtime.jsx)(FilterPanel,(0,esm_extends.Z)({},null==(_props$slotProps=props.slotProps)?void 0:_props$slotProps.filterPanel))}return initialValue}),[props.slots.filterPanel,null==(_props$slotProps2=props.slotProps)?void 0:_props$slotProps2.filterPanel]),flatFilteringMethod=react.useCallback((params=>{if("client"===props.filterMode&&params.isRowMatchingFilters){const rowIds=gridRowTreeSelector(apiRef)[GRID_ROOT_GROUP_ID].children,filteredRowsLookup={};for(let i=0;i<rowIds.length;i+=1){const rowId=rowIds[i];let isRowPassing;if("string"==typeof rowId&&rowId.startsWith("auto-generated-group-footer"))isRowPassing=!0;else{const{passingFilterItems,passingQuickFilterValues}=params.isRowMatchingFilters(rowId);isRowPassing=passFilterLogic([passingFilterItems],[passingQuickFilterValues],params.filterModel,apiRef)}filteredRowsLookup[rowId]=isRowPassing}return{filteredRowsLookup,visibleRowsLookup:filteredRowsLookup,filteredDescendantCountLookup:{}}}return{visibleRowsLookup:{},filteredRowsLookup:{},filteredDescendantCountLookup:{}}}),[apiRef,props.filterMode]);useGridRegisterPipeProcessor(apiRef,"columnMenu",addColumnMenuItem),useGridRegisterPipeProcessor(apiRef,"exportState",stateExportPreProcessing),useGridRegisterPipeProcessor(apiRef,"restoreState",stateRestorePreProcessing),useGridRegisterPipeProcessor(apiRef,"preferencePanel",preferencePanelPreProcessing),useGridRegisterStrategyProcessor(apiRef,"none","filtering",flatFilteringMethod);const handleColumnsChange=react.useCallback((()=>{logger.debug("onColUpdated - GridColumns changed, applying filters");const filterModel=gridFilterModelSelector(apiRef),filterableColumnsLookup=gridFilterableColumnLookupSelector(apiRef),newFilterItems=filterModel.items.filter((item=>item.field&&filterableColumnsLookup[item.field]));newFilterItems.length<filterModel.items.length&&apiRef.current.setFilterModel((0,esm_extends.Z)({},filterModel,{items:newFilterItems}))}),[apiRef,logger]),handleStrategyProcessorChange=react.useCallback((methodName=>{"filtering"===methodName&&apiRef.current.unstable_applyFilters()}),[apiRef]);useGridApiEventHandler(apiRef,"rowsSet",updateFilteredRows),useGridApiEventHandler(apiRef,"rowExpansionChange",apiRef.current.unstable_applyFilters),useGridApiEventHandler(apiRef,"columnsChange",handleColumnsChange),useGridApiEventHandler(apiRef,"activeStrategyProcessorChange",handleStrategyProcessorChange),useFirstRender((()=>{apiRef.current.unstable_applyFilters()})),react.useEffect((()=>{void 0!==props.filterModel&&apiRef.current.setFilterModel(props.filterModel)}),[apiRef,logger,props.filterModel])})(privateApiRef,props),((apiRef,props)=>{var _props$initialState3,_props$initialState3$;const logger=useGridLogger(apiRef,"useGridSorting");apiRef.current.registerControlState({stateId:"sortModel",propModel:props.sortModel,propOnChange:props.onSortModelChange,stateSelector:gridSortModelSelector,changeEvent:"sortModelChange"});const upsertSortModel=react.useCallback(((field,sortItem)=>{const sortModel=gridSortModelSelector(apiRef),existingIdx=sortModel.findIndex((c=>c.field===field));let newSortModel=[...sortModel];return existingIdx>-1?sortItem?newSortModel.splice(existingIdx,1,sortItem):newSortModel.splice(existingIdx,1):newSortModel=[...sortModel,sortItem],newSortModel}),[apiRef]),createSortItem=react.useCallback(((col,directionOverride)=>{var _col$sortingOrder2;const existing=gridSortModelSelector(apiRef).find((c=>c.field===col.field));if(existing){var _col$sortingOrder;const nextSort=void 0===directionOverride?(0,gridSortingUtils.vY)(null!=(_col$sortingOrder=col.sortingOrder)?_col$sortingOrder:props.sortingOrder,existing.sort):directionOverride;return null==nextSort?void 0:(0,esm_extends.Z)({},existing,{sort:nextSort})}return{field:col.field,sort:void 0===directionOverride?(0,gridSortingUtils.vY)(null!=(_col$sortingOrder2=col.sortingOrder)?_col$sortingOrder2:props.sortingOrder):directionOverride}}),[apiRef,props.sortingOrder]),addColumnMenuItem=react.useCallback(((columnMenuItems,colDef)=>null==colDef||!1===colDef.sortable?columnMenuItems:(colDef.sortingOrder||props.sortingOrder).some((item=>!!item))?[...columnMenuItems,"columnMenuSortItem"]:columnMenuItems),[props.sortingOrder]),applySorting=react.useCallback((()=>{apiRef.current.setState((state=>{if("server"===props.sortingMode)return logger.debug("Skipping sorting rows as sortingMode = server"),(0,esm_extends.Z)({},state,{sorting:(0,esm_extends.Z)({},state.sorting,{sortedRows:getTreeNodeDescendants(gridRowTreeSelector(apiRef),GRID_ROOT_GROUP_ID,!1)})});const sortModel=gridSortModelSelector(state,apiRef.current.instanceId),sortRowList=(0,gridSortingUtils.oX)(sortModel,apiRef),sortedRows=apiRef.current.applyStrategyProcessor("sorting",{sortRowList});return(0,esm_extends.Z)({},state,{sorting:(0,esm_extends.Z)({},state.sorting,{sortedRows})})})),apiRef.current.publishEvent("sortedRowsSet"),apiRef.current.forceUpdate()}),[apiRef,logger,props.sortingMode]),setSortModel=react.useCallback((model=>{gridSortModelSelector(apiRef)!==model&&(logger.debug("Setting sort model"),apiRef.current.setState((0,gridSortingUtils.E8)(model,props.disableMultipleColumnsSorting)),apiRef.current.forceUpdate(),apiRef.current.applySorting())}),[apiRef,logger,props.disableMultipleColumnsSorting]),sortColumn=react.useCallback(((column,direction,allowMultipleSorting)=>{if(!column.sortable)return;const sortItem=createSortItem(column,direction);let sortModel;sortModel=!allowMultipleSorting||props.disableMultipleColumnsSorting?sortItem?[sortItem]:[]:upsertSortModel(column.field,sortItem),apiRef.current.setSortModel(sortModel)}),[apiRef,upsertSortModel,createSortItem,props.disableMultipleColumnsSorting]),getSortModel=react.useCallback((()=>gridSortModelSelector(apiRef)),[apiRef]),getSortedRows=react.useCallback((()=>gridSortedRowEntriesSelector(apiRef).map((row=>row.model))),[apiRef]),getSortedRowIds=react.useCallback((()=>gridSortedRowIdsSelector(apiRef)),[apiRef]),getRowIdFromRowIndex=react.useCallback((index=>apiRef.current.getSortedRowIds()[index]),[apiRef]);useGridApiMethod(apiRef,{getSortModel,getSortedRows,getSortedRowIds,getRowIdFromRowIndex,setSortModel,sortColumn,applySorting},"public");const stateExportPreProcessing=react.useCallback(((prevState,context)=>{var _props$initialState2,_props$initialState2$;const sortModelToExport=gridSortModelSelector(apiRef);return!context.exportOnlyDirtyModels||null!=props.sortModel||null!=(null==(_props$initialState2=props.initialState)||null==(_props$initialState2$=_props$initialState2.sorting)?void 0:_props$initialState2$.sortModel)||sortModelToExport.length>0?(0,esm_extends.Z)({},prevState,{sorting:{sortModel:sortModelToExport}}):prevState}),[apiRef,props.sortModel,null==(_props$initialState3=props.initialState)||null==(_props$initialState3$=_props$initialState3.sorting)?void 0:_props$initialState3$.sortModel]),stateRestorePreProcessing=react.useCallback(((params,context)=>{var _context$stateToResto;const sortModel=null==(_context$stateToResto=context.stateToRestore.sorting)?void 0:_context$stateToResto.sortModel;return null==sortModel?params:(apiRef.current.setState((0,gridSortingUtils.E8)(sortModel,props.disableMultipleColumnsSorting)),(0,esm_extends.Z)({},params,{callbacks:[...params.callbacks,apiRef.current.applySorting]}))}),[apiRef,props.disableMultipleColumnsSorting]),flatSortingMethod=react.useCallback((params=>{const rowTree=gridRowTreeSelector(apiRef),rootGroupNode=rowTree[GRID_ROOT_GROUP_ID],sortedChildren=params.sortRowList?params.sortRowList(rootGroupNode.children.map((childId=>rowTree[childId]))):[...rootGroupNode.children];return null!=rootGroupNode.footerId&&sortedChildren.push(rootGroupNode.footerId),sortedChildren}),[apiRef]);useGridRegisterPipeProcessor(apiRef,"exportState",stateExportPreProcessing),useGridRegisterPipeProcessor(apiRef,"restoreState",stateRestorePreProcessing),useGridRegisterStrategyProcessor(apiRef,"none","sorting",flatSortingMethod);const handleColumnHeaderClick=react.useCallback((({colDef},event)=>{const allowMultipleSorting=event.shiftKey||event.metaKey||event.ctrlKey;sortColumn(colDef,void 0,allowMultipleSorting)}),[sortColumn]),handleColumnHeaderKeyDown=react.useCallback((({colDef},event)=>{!isEnterKey(event.key)||event.ctrlKey||event.metaKey||sortColumn(colDef,void 0,event.shiftKey)}),[sortColumn]),handleColumnsChange=react.useCallback((()=>{const sortModel=gridSortModelSelector(apiRef),latestColumns=gridColumnLookupSelector(apiRef);if(sortModel.length>0){const newModel=sortModel.filter((sortItem=>latestColumns[sortItem.field]));newModel.length<sortModel.length&&apiRef.current.setSortModel(newModel)}}),[apiRef]),handleStrategyProcessorChange=react.useCallback((methodName=>{"sorting"===methodName&&apiRef.current.applySorting()}),[apiRef]);useGridRegisterPipeProcessor(apiRef,"columnMenu",addColumnMenuItem),useGridApiEventHandler(apiRef,"columnHeaderClick",handleColumnHeaderClick),useGridApiEventHandler(apiRef,"columnHeaderKeyDown",handleColumnHeaderKeyDown),useGridApiEventHandler(apiRef,"rowsSet",apiRef.current.applySorting),useGridApiEventHandler(apiRef,"columnsChange",handleColumnsChange),useGridApiEventHandler(apiRef,"activeStrategyProcessorChange",handleStrategyProcessorChange),useFirstRender((()=>{apiRef.current.applySorting()})),react.useEffect((()=>{void 0!==props.sortModel&&apiRef.current.setSortModel(props.sortModel)}),[apiRef,props.sortModel])})(privateApiRef,props),((apiRef,props)=>{const logger=useGridLogger(apiRef,"useDensity"),setDensity=react.useCallback((newDensity=>{logger.debug(`Set grid density to ${newDensity}`),apiRef.current.setState((state=>{const currentDensityState=gridDensitySelector(state),newDensityState={value:newDensity,factor:DENSITY_FACTORS[newDensity]};return isDeepEqual(currentDensityState,newDensityState)?state:(0,esm_extends.Z)({},state,{density:newDensityState})})),apiRef.current.forceUpdate()}),[logger,apiRef]);react.useEffect((()=>{apiRef.current.setDensity(props.density)}),[apiRef,props.density]),useGridApiMethod(apiRef,{setDensity},"public")})(privateApiRef,props),((apiRef,props)=>{var _props$initialState3,_props$initialState3$;const logger=useGridLogger(apiRef,"useGridPagination"),visibleTopLevelRowCount=useGridSelector(apiRef,gridFilteredTopLevelRowCountSelector),densityFactor=useGridSelector(apiRef,gridDensityFactorSelector),rowHeight=Math.floor(props.rowHeight*densityFactor);apiRef.current.registerControlState({stateId:"pagination",propModel:props.paginationModel,propOnChange:props.onPaginationModelChange,stateSelector:gridPaginationModelSelector,changeEvent:"paginationModelChange"});const setPage=react.useCallback((page=>{const currentModel=gridPaginationModelSelector(apiRef);page!==currentModel.page&&(logger.debug(`Setting page to ${page}`),apiRef.current.setPaginationModel({page,pageSize:currentModel.pageSize}))}),[apiRef,logger]),setPageSize=react.useCallback((pageSize=>{const currentModel=gridPaginationModelSelector(apiRef);pageSize!==currentModel.pageSize&&(logger.debug(`Setting page size to ${pageSize}`),apiRef.current.setPaginationModel({pageSize,page:currentModel.page}))}),[apiRef,logger]),setPaginationModel=react.useCallback((paginationModel=>{var _props$rowCount;paginationModel!==gridPaginationModelSelector(apiRef)&&(logger.debug("Setting 'paginationModel' to",paginationModel),apiRef.current.updateControlState("pagination",mergeStateWithPaginationModel(null!=(_props$rowCount=props.rowCount)?_props$rowCount:visibleTopLevelRowCount,props.signature,paginationModel),"setPaginationModel"),apiRef.current.forceUpdate())}),[apiRef,logger,props.rowCount,props.signature,visibleTopLevelRowCount]);useGridApiMethod(apiRef,{setPage,setPageSize,setPaginationModel},"public");const stateExportPreProcessing=react.useCallback(((prevState,context)=>{var _props$initialState2,_props$initialState2$;const paginationModel=gridPaginationModelSelector(apiRef);return!context.exportOnlyDirtyModels||null!=props.paginationModel||null!=(null==(_props$initialState2=props.initialState)||null==(_props$initialState2$=_props$initialState2.pagination)?void 0:_props$initialState2$.paginationModel)||0!==paginationModel.page&&paginationModel.pageSize!==(props.autoPageSize?0:100)?(0,esm_extends.Z)({},prevState,{pagination:(0,esm_extends.Z)({},prevState.pagination,{paginationModel})}):prevState}),[apiRef,props.paginationModel,null==(_props$initialState3=props.initialState)||null==(_props$initialState3$=_props$initialState3.pagination)?void 0:_props$initialState3$.paginationModel,props.autoPageSize]),stateRestorePreProcessing=react.useCallback(((params,context)=>{var _context$stateToResto,_context$stateToResto2,_props$rowCount2;const paginationModel=null!=(_context$stateToResto=context.stateToRestore.pagination)&&_context$stateToResto.paginationModel?(0,esm_extends.Z)({},getDefaultGridPaginationModel(props.autoPageSize),null==(_context$stateToResto2=context.stateToRestore.pagination)?void 0:_context$stateToResto2.paginationModel):gridPaginationModelSelector(apiRef);return apiRef.current.updateControlState("pagination",mergeStateWithPaginationModel(null!=(_props$rowCount2=props.rowCount)?_props$rowCount2:visibleTopLevelRowCount,props.signature,paginationModel),"stateRestorePreProcessing"),params}),[apiRef,props.autoPageSize,props.rowCount,props.signature,visibleTopLevelRowCount]);useGridRegisterPipeProcessor(apiRef,"exportState",stateExportPreProcessing),useGridRegisterPipeProcessor(apiRef,"restoreState",stateRestorePreProcessing);const handleUpdateAutoPageSize=react.useCallback((()=>{const dimensions=apiRef.current.getRootDimensions();if(!props.autoPageSize||!dimensions)return;const pinnedRowsHeight=calculatePinnedRowsHeight(apiRef),maximumPageSizeWithoutScrollBar=Math.floor((dimensions.viewportInnerSize.height-pinnedRowsHeight.top-pinnedRowsHeight.bottom)/rowHeight);apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar)}),[apiRef,props.autoPageSize,rowHeight]);useGridApiEventHandler(apiRef,"viewportInnerSizeChange",handleUpdateAutoPageSize),useGridApiEventHandler(apiRef,"paginationModelChange",(()=>{var _apiRef$current$virtu;const paginationModel=gridPaginationModelSelector(apiRef);null!=(_apiRef$current$virtu=apiRef.current.virtualScrollerRef)&&_apiRef$current$virtu.current&&apiRef.current.scrollToIndexes({rowIndex:paginationModel.page*paginationModel.pageSize}),apiRef.current.forceUpdate()})),react.useEffect((()=>{}),[props.rowCount,props.paginationMode]),react.useEffect((()=>{var _props$rowCount3;apiRef.current.updateControlState("pagination",mergeStateWithPaginationModel(null!=(_props$rowCount3=props.rowCount)?_props$rowCount3:visibleTopLevelRowCount,props.signature,props.paginationModel))}),[apiRef,props.paginationModel,props.rowCount,props.paginationMode,visibleTopLevelRowCount,props.signature]),react.useEffect((()=>{handleUpdateAutoPageSize()}),[handleUpdateAutoPageSize])})(privateApiRef,props),((apiRef,props)=>{const{getRowHeight:getRowHeightProp,getRowSpacing,getEstimatedRowHeight}=props,rowsHeightLookup=react.useRef({}),lastMeasuredRowIndex=react.useRef(-1),hasRowWithAutoHeight=react.useRef(!1),densityFactor=useGridSelector(apiRef,gridDensityFactorSelector),filterModel=useGridSelector(apiRef,gridFilterModelSelector),paginationState=useGridSelector(apiRef,gridPaginationSelector),sortModel=useGridSelector(apiRef,gridSortModelSelector),currentPage=useGridVisibleRows(apiRef,props),pinnedRows=useGridSelector(apiRef,gridPinnedRowsSelector),validRowHeight=getValidRowHeight(props.rowHeight,DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight),rowHeight=Math.floor(validRowHeight*densityFactor),hydrateRowsMeta=react.useCallback((()=>{var _pinnedRows$top,_pinnedRows$bottom;hasRowWithAutoHeight.current=!1;const calculateRowProcessedSizes=row=>{rowsHeightLookup.current[row.id]||(rowsHeightLookup.current[row.id]={sizes:{baseCenter:rowHeight},isResized:!1,autoHeight:!1,needsFirstMeasurement:!0});const{isResized,needsFirstMeasurement,sizes}=rowsHeightLookup.current[row.id];let baseRowHeight="number"==typeof rowHeight&&rowHeight>0?rowHeight:52;const existingBaseRowHeight=sizes.baseCenter;if(isResized)baseRowHeight=existingBaseRowHeight;else if(getRowHeightProp){const rowHeightFromUser=getRowHeightProp((0,esm_extends.Z)({},row,{densityFactor}));if("auto"===rowHeightFromUser){if(needsFirstMeasurement){const estimatedRowHeight=getEstimatedRowHeight?getEstimatedRowHeight((0,esm_extends.Z)({},row,{densityFactor})):rowHeight;baseRowHeight=null!=estimatedRowHeight?estimatedRowHeight:rowHeight}else baseRowHeight=existingBaseRowHeight;hasRowWithAutoHeight.current=!0,rowsHeightLookup.current[row.id].autoHeight=!0}else baseRowHeight=getValidRowHeight(rowHeightFromUser,rowHeight),rowsHeightLookup.current[row.id].needsFirstMeasurement=!1,rowsHeightLookup.current[row.id].autoHeight=!1}else rowsHeightLookup.current[row.id].needsFirstMeasurement=!1;const existingBaseSizes=Object.entries(sizes).reduce(((acc,[key,size])=>(/^base[A-Z]/.test(key)&&(acc[key]=size),acc)),{}),initialHeights=(0,esm_extends.Z)({},existingBaseSizes,{baseCenter:baseRowHeight});if(getRowSpacing){var _spacing$top,_spacing$bottom;const indexRelativeToCurrentPage=apiRef.current.getRowIndexRelativeToVisibleRows(row.id),spacing=getRowSpacing((0,esm_extends.Z)({},row,{isFirstVisible:0===indexRelativeToCurrentPage,isLastVisible:indexRelativeToCurrentPage===currentPage.rows.length-1,indexRelativeToCurrentPage}));initialHeights.spacingTop=null!=(_spacing$top=spacing.top)?_spacing$top:0,initialHeights.spacingBottom=null!=(_spacing$bottom=spacing.bottom)?_spacing$bottom:0}const processedSizes=apiRef.current.unstable_applyPipeProcessors("rowHeight",initialHeights,row);return rowsHeightLookup.current[row.id].sizes=processedSizes,processedSizes},positions=[],currentPageTotalHeight=currentPage.rows.reduce(((acc,row)=>{positions.push(acc);let maximumBaseSize=0,otherSizes=0;const processedSizes=calculateRowProcessedSizes(row);return Object.entries(processedSizes).forEach((([size,value])=>{/^base[A-Z]/.test(size)?maximumBaseSize=value>maximumBaseSize?value:maximumBaseSize:otherSizes+=value})),acc+maximumBaseSize+otherSizes}),0);null==pinnedRows||null==(_pinnedRows$top=pinnedRows.top)||_pinnedRows$top.forEach((row=>{calculateRowProcessedSizes(row)})),null==pinnedRows||null==(_pinnedRows$bottom=pinnedRows.bottom)||_pinnedRows$bottom.forEach((row=>{calculateRowProcessedSizes(row)})),apiRef.current.setState((state=>(0,esm_extends.Z)({},state,{rowsMeta:{currentPageTotalHeight,positions}}))),hasRowWithAutoHeight.current||(lastMeasuredRowIndex.current=1/0),apiRef.current.forceUpdate()}),[apiRef,currentPage.rows,rowHeight,getRowHeightProp,getRowSpacing,getEstimatedRowHeight,pinnedRows,densityFactor]),getRowHeight=react.useCallback((rowId=>{const height=rowsHeightLookup.current[rowId];return height?height.sizes.baseCenter:rowHeight}),[rowHeight]),setRowHeight=react.useCallback(((id,height)=>{rowsHeightLookup.current[id].sizes.baseCenter=height,rowsHeightLookup.current[id].isResized=!0,rowsHeightLookup.current[id].needsFirstMeasurement=!1,hydrateRowsMeta()}),[hydrateRowsMeta]),debouncedHydrateRowsMeta=react.useMemo((()=>(0,debounce.Z)(hydrateRowsMeta)),[hydrateRowsMeta]),storeMeasuredRowHeight=react.useCallback(((id,height,position)=>{if(!rowsHeightLookup.current[id]||!rowsHeightLookup.current[id].autoHeight)return;const needsHydration=rowsHeightLookup.current[id].sizes[`base${(0,capitalize.Z)(position)}`]!==height;rowsHeightLookup.current[id].needsFirstMeasurement=!1,rowsHeightLookup.current[id].sizes[`base${(0,capitalize.Z)(position)}`]=height,needsHydration&&debouncedHydrateRowsMeta()}),[debouncedHydrateRowsMeta]),rowHasAutoHeight=react.useCallback((id=>{var _rowsHeightLookup$cur2;return(null==(_rowsHeightLookup$cur2=rowsHeightLookup.current[id])?void 0:_rowsHeightLookup$cur2.autoHeight)||!1}),[]),getLastMeasuredRowIndex=react.useCallback((()=>lastMeasuredRowIndex.current),[]),setLastMeasuredRowIndex=react.useCallback((index=>{hasRowWithAutoHeight.current&&index>lastMeasuredRowIndex.current&&(lastMeasuredRowIndex.current=index)}),[]),resetRowHeights=react.useCallback((()=>{rowsHeightLookup.current={},hydrateRowsMeta()}),[hydrateRowsMeta]);react.useEffect((()=>{hydrateRowsMeta()}),[rowHeight,filterModel,paginationState,sortModel,hydrateRowsMeta]),useGridRegisterPipeApplier(apiRef,"rowHeight",hydrateRowsMeta);const rowsMetaPrivateApi={getLastMeasuredRowIndex,rowHasAutoHeight};useGridApiMethod(apiRef,{unstable_setLastMeasuredRowIndex:setLastMeasuredRowIndex,unstable_getRowHeight:getRowHeight,unstable_getRowInternalSizes:rowId=>{var _rowsHeightLookup$cur;return null==(_rowsHeightLookup$cur=rowsHeightLookup.current[rowId])?void 0:_rowsHeightLookup$cur.sizes},unstable_setRowHeight:setRowHeight,unstable_storeRowHeightMeasurement:storeMeasuredRowHeight,resetRowHeights},"public"),useGridApiMethod(apiRef,rowsMetaPrivateApi,"private")})(privateApiRef,props),((apiRef,props)=>{const theme=(0,useTheme.Z)(),logger=useGridLogger(apiRef,"useGridScroll"),colRef=apiRef.current.columnHeadersElementRef,virtualScrollerRef=apiRef.current.virtualScrollerRef,visibleSortedRows=useGridSelector(apiRef,gridExpandedSortedRowEntriesSelector),scrollToIndexes=react.useCallback((params=>{const totalRowCount=gridRowCountSelector(apiRef),visibleColumns=gridVisibleColumnDefinitionsSelector(apiRef);if(null!=params.rowIndex&&0===totalRowCount||0===visibleColumns.length)return!1;logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);let scrollCoordinates={};if(null!=params.colIndex){const columnPositions=gridColumnPositionsSelector(apiRef);let cellWidth;if(void 0!==params.rowIndex){var _visibleSortedRows$pa;const rowId=null==(_visibleSortedRows$pa=visibleSortedRows[params.rowIndex])?void 0:_visibleSortedRows$pa.id,cellColSpanInfo=apiRef.current.unstable_getCellColSpanInfo(rowId,params.colIndex);cellColSpanInfo&&!cellColSpanInfo.spannedByColSpan&&(cellWidth=cellColSpanInfo.cellProps.width)}void 0===cellWidth&&(cellWidth=visibleColumns[params.colIndex].computedWidth),scrollCoordinates.left=scrollIntoView({clientHeight:virtualScrollerRef.current.clientWidth,scrollTop:Math.abs(virtualScrollerRef.current.scrollLeft),offsetHeight:cellWidth,offsetTop:columnPositions[params.colIndex]})}if(null!=params.rowIndex){var _querySelector,_querySelector2;const rowsMeta=gridRowsMetaSelector(apiRef.current.state),page=gridPageSelector(apiRef),pageSize=gridPageSizeSelector(apiRef),elementIndex=props.pagination?params.rowIndex-page*pageSize:params.rowIndex,targetOffsetHeight=rowsMeta.positions[elementIndex+1]?rowsMeta.positions[elementIndex+1]-rowsMeta.positions[elementIndex]:rowsMeta.currentPageTotalHeight-rowsMeta.positions[elementIndex],topPinnedRowsHeight=(null==(_querySelector=virtualScrollerRef.current.querySelector(`.${gridClasses_gridClasses["pinnedRows--top"]}`))?void 0:_querySelector.clientHeight)||0,bottomPinnedRowsHeight=(null==(_querySelector2=virtualScrollerRef.current.querySelector(`.${gridClasses_gridClasses["pinnedRows--bottom"]}`))?void 0:_querySelector2.clientHeight)||0;scrollCoordinates.top=scrollIntoView({clientHeight:virtualScrollerRef.current.clientHeight-topPinnedRowsHeight-bottomPinnedRowsHeight,scrollTop:virtualScrollerRef.current.scrollTop,offsetHeight:targetOffsetHeight,offsetTop:rowsMeta.positions[elementIndex]})}return scrollCoordinates=apiRef.current.unstable_applyPipeProcessors("scrollToIndexes",scrollCoordinates,params),(void 0!==typeof scrollCoordinates.left||void 0!==typeof scrollCoordinates.top)&&(apiRef.current.scroll(scrollCoordinates),!0)}),[logger,apiRef,virtualScrollerRef,props.pagination,visibleSortedRows]),scroll=react.useCallback((params=>{if(virtualScrollerRef.current&&null!=params.left&&colRef.current){const direction="rtl"===theme.direction?-1:1;colRef.current.scrollLeft=params.left,virtualScrollerRef.current.scrollLeft=direction*params.left,logger.debug(`Scrolling left: ${params.left}`)}virtualScrollerRef.current&&null!=params.top&&(virtualScrollerRef.current.scrollTop=params.top,logger.debug(`Scrolling top: ${params.top}`)),logger.debug("Scrolling, updating container, and viewport")}),[virtualScrollerRef,theme.direction,colRef,logger]),getScrollPosition=react.useCallback((()=>null!=virtualScrollerRef&&virtualScrollerRef.current?{top:virtualScrollerRef.current.scrollTop,left:virtualScrollerRef.current.scrollLeft}:{top:0,left:0}),[virtualScrollerRef]);useGridApiMethod(apiRef,{scroll,scrollToIndexes,getScrollPosition},"public")})(privateApiRef,props),(apiRef=>{const logger=useGridLogger(apiRef,"useGridColumnMenu"),showColumnMenu=react.useCallback((field=>{apiRef.current.setState((state=>state.columnMenu.open&&state.columnMenu.field===field?state:(logger.debug("Opening Column Menu"),(0,esm_extends.Z)({},state,{columnMenu:{open:!0,field}}))))&&(apiRef.current.hidePreferences(),apiRef.current.forceUpdate())}),[apiRef,logger]),hideColumnMenu=react.useCallback((()=>{const columnMenuState=gridColumnMenuSelector(apiRef.current.state);if(columnMenuState.field){const columnLookup=gridColumnLookupSelector(apiRef),columnVisibilityModel=gridColumnVisibilityModelSelector(apiRef),orderedFields=gridColumnFieldsSelector(apiRef);let fieldToFocus=columnMenuState.field;if(columnLookup[fieldToFocus]||(fieldToFocus=orderedFields[0]),!1===columnVisibilityModel[fieldToFocus]){const visibleOrderedFields=orderedFields.filter((field=>field===fieldToFocus||!1!==columnVisibilityModel[field])),fieldIndex=visibleOrderedFields.indexOf(fieldToFocus);fieldToFocus=visibleOrderedFields[fieldIndex+1]||visibleOrderedFields[fieldIndex-1]}apiRef.current.setColumnHeaderFocus(fieldToFocus)}apiRef.current.setState((state=>state.columnMenu.open||void 0!==state.columnMenu.field?(logger.debug("Hiding Column Menu"),(0,esm_extends.Z)({},state,{columnMenu:(0,esm_extends.Z)({},state.columnMenu,{open:!1,field:void 0})})):state))&&apiRef.current.forceUpdate()}),[apiRef,logger]),toggleColumnMenu=react.useCallback((field=>{logger.debug("Toggle Column Menu");const columnMenu=gridColumnMenuSelector(apiRef.current.state);columnMenu.open&&columnMenu.field===field?hideColumnMenu():showColumnMenu(field)}),[apiRef,logger,showColumnMenu,hideColumnMenu]);useGridApiMethod(apiRef,{showColumnMenu,hideColumnMenu,toggleColumnMenu},"public"),useGridApiEventHandler(apiRef,"columnResizeStart",hideColumnMenu),useGridApiEventHandler(apiRef,"virtualScrollerWheel",apiRef.current.hideColumnMenu),useGridApiEventHandler(apiRef,"virtualScrollerTouchMove",apiRef.current.hideColumnMenu)})(privateApiRef),useGridCsvExport(privateApiRef),useGridPrintExport(privateApiRef,props),useGridClipboard(privateApiRef),function useGridDimensions(apiRef,props){const logger=useGridLogger(apiRef,"useResizeContainer"),errorShown=react.useRef(!1),rootDimensionsRef=react.useRef(null),fullDimensionsRef=react.useRef(null),rowsMeta=useGridSelector(apiRef,gridRowsMetaSelector),densityFactor=useGridSelector(apiRef,gridDensityFactorSelector),rowHeight=Math.floor(props.rowHeight*densityFactor),totalHeaderHeight=getTotalHeaderHeight(apiRef,props.columnHeaderHeight),updateGridDimensionsRef=react.useCallback((()=>{var _apiRef$current$rootE;const rootElement=null==(_apiRef$current$rootE=apiRef.current.rootElementRef)?void 0:_apiRef$current$rootE.current,columnsTotalWidth=gridColumnsTotalWidthSelector(apiRef),pinnedRowsHeight=calculatePinnedRowsHeight(apiRef);if(!rootDimensionsRef.current)return;let scrollBarSize,viewportOuterSize,hasScrollX,hasScrollY;if(null!=props.scrollbarSize)scrollBarSize=props.scrollbarSize;else if(columnsTotalWidth&&rootElement){const scrollDiv=(0,ownerDocument.Z)(rootElement).createElement("div");scrollDiv.style.width="99px",scrollDiv.style.height="99px",scrollDiv.style.position="absolute",scrollDiv.style.overflow="scroll",scrollDiv.className="scrollDiv",rootElement.appendChild(scrollDiv),scrollBarSize=scrollDiv.offsetWidth-scrollDiv.clientWidth,rootElement.removeChild(scrollDiv)}else scrollBarSize=0;if(props.autoHeight)hasScrollY=!1,hasScrollX=Math.round(columnsTotalWidth)>rootDimensionsRef.current.width,viewportOuterSize={width:rootDimensionsRef.current.width,height:rowsMeta.currentPageTotalHeight+(hasScrollX?scrollBarSize:0)};else{viewportOuterSize={width:rootDimensionsRef.current.width,height:rootDimensionsRef.current.height-totalHeaderHeight};const scrollInformation=(({content,container,scrollBarSize})=>{const hasScrollXIfNoYScrollBar=content.width>container.width,hasScrollYIfNoXScrollBar=content.height>container.height;let hasScrollX=!1,hasScrollY=!1;return(hasScrollXIfNoYScrollBar||hasScrollYIfNoXScrollBar)&&(hasScrollX=hasScrollXIfNoYScrollBar,hasScrollY=content.height+(hasScrollX?scrollBarSize:0)>container.height,hasScrollY&&(hasScrollX=content.width+scrollBarSize>container.width)),{hasScrollX,hasScrollY}})({content:{width:Math.round(columnsTotalWidth),height:rowsMeta.currentPageTotalHeight},container:{width:viewportOuterSize.width,height:viewportOuterSize.height-pinnedRowsHeight.top-pinnedRowsHeight.bottom},scrollBarSize});hasScrollY=scrollInformation.hasScrollY,hasScrollX=scrollInformation.hasScrollX}const newFullDimensions={viewportOuterSize,viewportInnerSize:{width:viewportOuterSize.width-(hasScrollY?scrollBarSize:0),height:viewportOuterSize.height-(hasScrollX?scrollBarSize:0)},hasScrollX,hasScrollY,scrollBarSize},prevDimensions=fullDimensionsRef.current;fullDimensionsRef.current=newFullDimensions,newFullDimensions.viewportInnerSize.width===(null==prevDimensions?void 0:prevDimensions.viewportInnerSize.width)&&newFullDimensions.viewportInnerSize.height===(null==prevDimensions?void 0:prevDimensions.viewportInnerSize.height)||apiRef.current.publishEvent("viewportInnerSizeChange",newFullDimensions.viewportInnerSize)}),[apiRef,props.scrollbarSize,props.autoHeight,rowsMeta.currentPageTotalHeight,totalHeaderHeight]),resize=react.useCallback((()=>{updateGridDimensionsRef(),apiRef.current.publishEvent("debouncedResize",rootDimensionsRef.current)}),[apiRef,updateGridDimensionsRef]),getRootDimensions=react.useCallback((()=>fullDimensionsRef.current),[]),dimensionsPrivateApi={getViewportPageSize:react.useCallback((()=>{const dimensions=apiRef.current.getRootDimensions();if(!dimensions)return 0;const currentPage=getVisibleRows(apiRef,{pagination:props.pagination,paginationMode:props.paginationMode});if(props.getRowHeight){const renderContext=apiRef.current.getRenderContext(),viewportPageSize=renderContext.lastRowIndex-renderContext.firstRowIndex;return Math.min(viewportPageSize-1,currentPage.rows.length)}const maximumPageSizeWithoutScrollBar=Math.floor(dimensions.viewportInnerSize.height/rowHeight);return Math.min(maximumPageSizeWithoutScrollBar,currentPage.rows.length)}),[apiRef,props.pagination,props.paginationMode,props.getRowHeight,rowHeight]),updateGridDimensionsRef};useGridApiMethod(apiRef,{resize,getRootDimensions},"public"),useGridApiMethod(apiRef,dimensionsPrivateApi,"private");const debounceResize=react.useMemo((()=>(0,debounce.Z)(resize,60)),[resize]),isFirstSizing=react.useRef(!0),handleResize=react.useCallback((size=>{rootDimensionsRef.current=size;const isJSDOM=/jsdom/.test(window.navigator.userAgent);if(0!==size.height||errorShown.current||props.autoHeight||isJSDOM||(logger.error(["The parent DOM element of the data grid has an empty height.","Please make sure that this element has an intrinsic height.","The grid displays with a height of 0px.","","More details: https://mui.com/r/x-data-grid-no-dimensions."].join("\n")),errorShown.current=!0),0!==size.width||errorShown.current||isJSDOM||(logger.error(["The parent DOM element of the data grid has an empty width.","Please make sure that this element has an intrinsic width.","The grid displays with a width of 0px.","","More details: https://mui.com/r/x-data-grid-no-dimensions."].join("\n")),errorShown.current=!0),isFirstSizing.current)return resize(),void(isFirstSizing.current=!1);debounceResize()}),[props.autoHeight,debounceResize,logger,resize]);(0,useEnhancedEffect.Z)((()=>updateGridDimensionsRef()),[updateGridDimensionsRef]),useGridApiOptionHandler(apiRef,"sortedRowsSet",updateGridDimensionsRef),useGridApiOptionHandler(apiRef,"paginationModelChange",updateGridDimensionsRef),useGridApiOptionHandler(apiRef,"columnsChange",updateGridDimensionsRef),useGridApiEventHandler(apiRef,"resize",handleResize),useGridApiOptionHandler(apiRef,"debouncedResize",props.onResize)}(privateApiRef,props),function useGridEvents(apiRef,props){useGridApiOptionHandler(apiRef,"columnHeaderClick",props.onColumnHeaderClick),useGridApiOptionHandler(apiRef,"columnHeaderDoubleClick",props.onColumnHeaderDoubleClick),useGridApiOptionHandler(apiRef,"columnHeaderOver",props.onColumnHeaderOver),useGridApiOptionHandler(apiRef,"columnHeaderOut",props.onColumnHeaderOut),useGridApiOptionHandler(apiRef,"columnHeaderEnter",props.onColumnHeaderEnter),useGridApiOptionHandler(apiRef,"columnHeaderLeave",props.onColumnHeaderLeave),useGridApiOptionHandler(apiRef,"cellClick",props.onCellClick),useGridApiOptionHandler(apiRef,"cellDoubleClick",props.onCellDoubleClick),useGridApiOptionHandler(apiRef,"cellKeyDown",props.onCellKeyDown),useGridApiOptionHandler(apiRef,"preferencePanelClose",props.onPreferencePanelClose),useGridApiOptionHandler(apiRef,"preferencePanelOpen",props.onPreferencePanelOpen),useGridApiOptionHandler(apiRef,"menuOpen",props.onMenuOpen),useGridApiOptionHandler(apiRef,"menuClose",props.onMenuClose),useGridApiOptionHandler(apiRef,"rowDoubleClick",props.onRowDoubleClick),useGridApiOptionHandler(apiRef,"rowClick",props.onRowClick),useGridApiOptionHandler(apiRef,"stateChange",props.onStateChange)}(privateApiRef,props),(apiRef=>{const exportState=react.useCallback(((params={})=>apiRef.current.unstable_applyPipeProcessors("exportState",{},params)),[apiRef]),restoreState=react.useCallback((stateToRestore=>{apiRef.current.unstable_applyPipeProcessors("restoreState",{callbacks:[]},{stateToRestore}).callbacks.forEach((callback=>{callback()})),apiRef.current.forceUpdate()}),[apiRef]);useGridApiMethod(apiRef,{exportState,restoreState},"public")})(privateApiRef),privateApiRef},GridVirtualScroller_excluded=["className"],VirtualScrollerRoot=(0,esm_styled.Z)("div",{name:"MuiDataGrid",slot:"VirtualScroller",overridesResolver:(props,styles)=>styles.virtualScroller})({overflow:"auto",height:"100%",position:"relative","@media print":{overflow:"hidden"}}),GridVirtualScroller=react.forwardRef((function GridVirtualScroller(props,ref){const{className}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridVirtualScroller_excluded),rootProps=(0,useGridRootProps.B)(),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["virtualScroller"]},getDataGridUtilityClass,classes)})(rootProps);return(0,jsx_runtime.jsx)(VirtualScrollerRoot,(0,esm_extends.Z)({ref,className:(0,clsx_m.Z)(classes.root,className),ownerState:rootProps},other))})),GridVirtualScrollerContent_excluded=["className","style"],VirtualScrollerContentRoot=(0,esm_styled.Z)("div",{name:"MuiDataGrid",slot:"VirtualScrollerContent",overridesResolver:(props,styles)=>styles.virtualScrollerContent})({}),GridVirtualScrollerContent=react.forwardRef((function GridVirtualScrollerContent(props,ref){const{className,style}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridVirtualScrollerContent_excluded),rootProps=(0,useGridRootProps.B)(),ownerState=(0,esm_extends.Z)({},rootProps,{overflowedContent:!rootProps.autoHeight&&"auto"===(null==style?void 0:style.minHeight)}),classes=(ownerState=>{const{classes,overflowedContent}=ownerState,slots={root:["virtualScrollerContent",overflowedContent&&"virtualScrollerContent--overflowed"]};return(0,composeClasses.Z)(slots,getDataGridUtilityClass,classes)})(ownerState);return(0,jsx_runtime.jsx)(VirtualScrollerContentRoot,(0,esm_extends.Z)({ref,className:(0,clsx_m.Z)(classes.root,className),ownerState,style},other))})),GridVirtualScrollerRenderZone_excluded=["className"],VirtualScrollerRenderZoneRoot=(0,esm_styled.Z)("div",{name:"MuiDataGrid",slot:"VirtualScrollerRenderZone",overridesResolver:(props,styles)=>styles.virtualScrollerRenderZone})({position:"absolute",display:"flex",flexDirection:"column"}),GridVirtualScrollerRenderZone=react.forwardRef((function GridVirtualScrollerRenderZone(props,ref){const{className}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,GridVirtualScrollerRenderZone_excluded),rootProps=(0,useGridRootProps.B)(),classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["virtualScrollerRenderZone"]},getDataGridUtilityClass,classes)})(rootProps);return(0,jsx_runtime.jsx)(VirtualScrollerRenderZoneRoot,(0,esm_extends.Z)({ref,className:(0,clsx_m.Z)(classes.root,className),ownerState:rootProps},other))})),GridOverlayWrapperRoot=(0,esm_styled.Z)("div",{name:"MuiDataGrid",slot:"OverlayWrapper",overridesResolver:(props,styles)=>styles.overlayWrapper})({position:"sticky",top:0,left:0,width:0,height:0,zIndex:4}),GridOverlayWrapperInner=(0,esm_styled.Z)("div",{name:"MuiDataGrid",slot:"OverlayWrapperInner",overridesResolver:(props,styles)=>styles.overlayWrapperInner})({}),GridOverlays_useUtilityClasses=ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["overlayWrapper"],inner:["overlayWrapperInner"]},getDataGridUtilityClass,classes)};function GridOverlayWrapper(props){var _viewportInnerSize$he,_viewportInnerSize$wi;const apiRef=(0,utils_useGridApiContext.l)(),rootProps=(0,useGridRootProps.B)(),[viewportInnerSize,setViewportInnerSize]=react.useState((()=>{var _apiRef$current$getRo,_apiRef$current$getRo2;return null!=(_apiRef$current$getRo=null==(_apiRef$current$getRo2=apiRef.current.getRootDimensions())?void 0:_apiRef$current$getRo2.viewportInnerSize)?_apiRef$current$getRo:null})),handleViewportSizeChange=react.useCallback((()=>{var _apiRef$current$getRo3,_apiRef$current$getRo4;setViewportInnerSize(null!=(_apiRef$current$getRo3=null==(_apiRef$current$getRo4=apiRef.current.getRootDimensions())?void 0:_apiRef$current$getRo4.viewportInnerSize)?_apiRef$current$getRo3:null)}),[apiRef]);(0,useEnhancedEffect.Z)((()=>apiRef.current.subscribeEvent("viewportInnerSizeChange",handleViewportSizeChange)),[apiRef,handleViewportSizeChange]);let height=null!=(_viewportInnerSize$he=null==viewportInnerSize?void 0:viewportInnerSize.height)?_viewportInnerSize$he:0;rootProps.autoHeight&&0===height&&(height=getMinimalContentHeight(apiRef,rootProps.rowHeight));const classes=GridOverlays_useUtilityClasses((0,esm_extends.Z)({},props,{classes:rootProps.classes}));return viewportInnerSize?(0,jsx_runtime.jsx)(GridOverlayWrapperRoot,{className:(0,clsx_m.Z)(classes.root),children:(0,jsx_runtime.jsx)(GridOverlayWrapperInner,(0,esm_extends.Z)({className:(0,clsx_m.Z)(classes.inner),style:{height,width:null!=(_viewportInnerSize$wi=null==viewportInnerSize?void 0:viewportInnerSize.width)?_viewportInnerSize$wi:0}},props))}):null}function GridOverlays(){const apiRef=(0,utils_useGridApiContext.l)(),rootProps=(0,useGridRootProps.B)(),totalRowCount=useGridSelector(apiRef,gridRowCountSelector),visibleRowCount=useGridSelector(apiRef,gridExpandedRowCountSelector),loading=useGridSelector(apiRef,gridRowsLoadingSelector),showNoResultsOverlay=!loading&&totalRowCount>0&&0===visibleRowCount;let overlay=null;var _rootProps$slotProps,_rootProps$slotProps2,_rootProps$slotProps3;loading||0!==totalRowCount||(overlay=(0,jsx_runtime.jsx)(rootProps.slots.noRowsOverlay,(0,esm_extends.Z)({},null==(_rootProps$slotProps=rootProps.slotProps)?void 0:_rootProps$slotProps.noRowsOverlay)));showNoResultsOverlay&&(overlay=(0,jsx_runtime.jsx)(rootProps.slots.noResultsOverlay,(0,esm_extends.Z)({},null==(_rootProps$slotProps2=rootProps.slotProps)?void 0:_rootProps$slotProps2.noResultsOverlay)));loading&&(overlay=(0,jsx_runtime.jsx)(rootProps.slots.loadingOverlay,(0,esm_extends.Z)({},null==(_rootProps$slotProps3=rootProps.slotProps)?void 0:_rootProps$slotProps3.loadingOverlay)));return null===overlay?null:(0,jsx_runtime.jsx)(GridOverlayWrapper,{children:overlay})}const DataGridVirtualScroller_excluded=["className","disableVirtualization"],DataGridVirtualScroller=react.forwardRef((function DataGridVirtualScroller(props,ref){const{className,disableVirtualization}=props,other=(0,objectWithoutPropertiesLoose.Z)(props,DataGridVirtualScroller_excluded),{getRootProps,getContentProps,getRenderZoneProps,getRows}=useGridVirtualScroller({ref,disableVirtualization});return(0,jsx_runtime.jsxs)(GridVirtualScroller,(0,esm_extends.Z)({className},getRootProps(other),{children:[(0,jsx_runtime.jsx)(GridOverlays,{}),(0,jsx_runtime.jsx)(GridVirtualScrollerContent,(0,esm_extends.Z)({},getContentProps(),{children:(0,jsx_runtime.jsx)(GridVirtualScrollerRenderZone,(0,esm_extends.Z)({},getRenderZoneProps(),{children:getRows()}))}))]}))})),DataGridRaw=react.forwardRef((function DataGrid(inProps,ref){const props=useDataGridProps(inProps),privateApiRef=useDataGridComponent(props.apiRef,props);return(0,jsx_runtime.jsx)(GridContextProvider,{privateApiRef,props,children:(0,jsx_runtime.jsxs)(GridRoot,{className:props.className,style:props.style,sx:props.sx,ref,children:[(0,jsx_runtime.jsx)(GridHeader,{}),(0,jsx_runtime.jsx)(GridBody,{VirtualScrollerComponent:DataGridVirtualScroller}),(0,jsx_runtime.jsx)(GridFooterPlaceholder,{})]})})})),DataGrid=react.memo(DataGridRaw);DataGridRaw.propTypes={apiRef:prop_types_default().shape({current:prop_types_default().object.isRequired}),"aria-label":prop_types_default().string,"aria-labelledby":prop_types_default().string,autoHeight:prop_types_default().bool,autoPageSize:prop_types_default().bool,cellModesModel:prop_types_default().object,checkboxSelection:prop_types_default().bool,classes:prop_types_default().object,columnBuffer:prop_types_default().number,columnGroupingModel:prop_types_default().arrayOf(prop_types_default().object),columnHeaderHeight:prop_types_default().number,columns:(prop_types_default().array.isRequired,()=>null),columnThreshold:prop_types_default().number,columnVisibilityModel:prop_types_default().object,components:prop_types_default().object,componentsProps:prop_types_default().object,density:prop_types_default().oneOf(["comfortable","compact","standard"]),disableColumnFilter:prop_types_default().bool,disableColumnMenu:prop_types_default().bool,disableColumnSelector:prop_types_default().bool,disableDensitySelector:prop_types_default().bool,disableRowSelectionOnClick:prop_types_default().bool,disableVirtualization:prop_types_default().bool,editMode:prop_types_default().oneOf(["cell","row"]),experimentalFeatures:prop_types_default().shape({columnGrouping:prop_types_default().bool,warnIfFocusStateIsNotSynced:prop_types_default().bool}),filterMode:prop_types_default().oneOf(["client","server"]),filterModel:prop_types_default().shape({items:prop_types_default().arrayOf(prop_types_default().shape({field:prop_types_default().string.isRequired,id:prop_types_default().oneOfType([prop_types_default().number,prop_types_default().string]),operator:prop_types_default().string.isRequired,value:prop_types_default().any})).isRequired,logicOperator:prop_types_default().oneOf(["and","or"]),quickFilterLogicOperator:prop_types_default().oneOf(["and","or"]),quickFilterValues:prop_types_default().array}),getCellClassName:prop_types_default().func,getDetailPanelContent:prop_types_default().func,getEstimatedRowHeight:prop_types_default().func,getRowClassName:prop_types_default().func,getRowHeight:prop_types_default().func,getRowId:prop_types_default().func,getRowSpacing:prop_types_default().func,hideFooter:prop_types_default().bool,hideFooterPagination:prop_types_default().bool,hideFooterSelectedRowCount:prop_types_default().bool,initialState:prop_types_default().object,isCellEditable:prop_types_default().func,isRowSelectable:prop_types_default().func,keepNonExistentRowsSelected:prop_types_default().bool,loading:prop_types_default().bool,localeText:prop_types_default().object,logger:prop_types_default().shape({debug:prop_types_default().func.isRequired,error:prop_types_default().func.isRequired,info:prop_types_default().func.isRequired,warn:prop_types_default().func.isRequired}),logLevel:prop_types_default().oneOf(["debug","error","info","warn",!1]),nonce:prop_types_default().string,onCellClick:prop_types_default().func,onCellDoubleClick:prop_types_default().func,onCellEditStart:prop_types_default().func,onCellEditStop:prop_types_default().func,onCellKeyDown:prop_types_default().func,onCellModesModelChange:prop_types_default().func,onColumnHeaderClick:prop_types_default().func,onColumnHeaderDoubleClick:prop_types_default().func,onColumnHeaderEnter:prop_types_default().func,onColumnHeaderLeave:prop_types_default().func,onColumnHeaderOut:prop_types_default().func,onColumnHeaderOver:prop_types_default().func,onColumnOrderChange:prop_types_default().func,onColumnVisibilityModelChange:prop_types_default().func,onFilterModelChange:prop_types_default().func,onMenuClose:prop_types_default().func,onMenuOpen:prop_types_default().func,onPaginationModelChange:prop_types_default().func,onPreferencePanelClose:prop_types_default().func,onPreferencePanelOpen:prop_types_default().func,onProcessRowUpdateError:prop_types_default().func,onResize:prop_types_default().func,onRowClick:prop_types_default().func,onRowDoubleClick:prop_types_default().func,onRowEditCommit:prop_types_default().func,onRowEditStart:prop_types_default().func,onRowEditStop:prop_types_default().func,onRowModesModelChange:prop_types_default().func,onRowSelectionModelChange:prop_types_default().func,onSortModelChange:prop_types_default().func,onStateChange:prop_types_default().func,pageSizeOptions:prop_types_default().arrayOf(prop_types_default().number),pagination:props=>!1===props.pagination?new Error(["MUI: `<DataGrid pagination={false} />` is not a valid prop.","Infinite scrolling is not available in the MIT version.","","You need to upgrade to DataGridPro or DataGridPremium component to disable the pagination."].join("\n")):null,paginationMode:prop_types_default().oneOf(["client","server"]),paginationModel:prop_types_default().shape({page:prop_types_default().number.isRequired,pageSize:prop_types_default().number.isRequired}),processRowUpdate:prop_types_default().func,rowBuffer:prop_types_default().number,rowCount:prop_types_default().number,rowHeight:prop_types_default().number,rowModesModel:prop_types_default().object,rows:prop_types_default().arrayOf(prop_types_default().object).isRequired,rowSelection:prop_types_default().bool,rowSelectionModel:prop_types_default().oneOfType([prop_types_default().arrayOf(prop_types_default().oneOfType([prop_types_default().number,prop_types_default().string]).isRequired),prop_types_default().number,prop_types_default().string]),rowSpacingType:prop_types_default().oneOf(["border","margin"]),rowThreshold:prop_types_default().number,scrollbarSize:prop_types_default().number,showCellVerticalBorder:prop_types_default().bool,showColumnVerticalBorder:prop_types_default().bool,slotProps:prop_types_default().object,slots:prop_types_default().object,sortingMode:prop_types_default().oneOf(["client","server"]),sortingOrder:prop_types_default().arrayOf(prop_types_default().oneOf(["asc","desc"])),sortModel:prop_types_default().arrayOf(prop_types_default().shape({field:prop_types_default().string.isRequired,sort:prop_types_default().oneOf(["asc","desc"])})),sx:prop_types_default().oneOfType([prop_types_default().arrayOf(prop_types_default().oneOfType([prop_types_default().func,prop_types_default().object,prop_types_default().bool])),prop_types_default().func,prop_types_default().object])}}}]);